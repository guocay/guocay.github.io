const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":330,\"nextId\":330,\"documentIds\":{\"0\":\"1\",\"1\":\"1#个人优势\",\"2\":\"1#项目经验\",\"3\":\"1#教育经历\",\"4\":\"1#工作经历\",\"5\":\"2\",\"6\":\"2#问题描述\",\"7\":\"2#问题思考\",\"8\":\"2#编码逻辑\",\"9\":\"2#实现方案\",\"10\":\"2#ps\",\"11\":\"2@0\",\"12\":\"2@1\",\"13\":\"3\",\"14\":\"3#问题描述\",\"15\":\"3#问题思考\",\"16\":\"3#编码逻辑\",\"17\":\"3#实现方案\",\"18\":\"3#其他方案\",\"19\":\"3#ps\",\"20\":\"3@0\",\"21\":\"3@1\",\"22\":\"4\",\"23\":\"4#问题描述\",\"24\":\"4#问题思考\",\"25\":\"4#解决方案\",\"26\":\"4#ps\",\"27\":\"4@0\",\"28\":\"4@1\",\"29\":\"5\",\"30\":\"5#snapshot-read-current-read\",\"31\":\"5#dml执行过程\",\"32\":\"5#two-phase-locking\",\"33\":\"5#事务隔离级别-isolation-level\",\"34\":\"5#sql语句的加锁过程分析\",\"35\":\"5#死锁原理与分析\",\"36\":\"5@0\",\"37\":\"5@1\",\"38\":\"6\",\"39\":\"6#源码\",\"40\":\"6#可选值\",\"41\":\"6@0\",\"42\":\"6@1\",\"43\":\"7\",\"44\":\"7#前言\",\"45\":\"7#纲概\",\"46\":\"7#内容\",\"47\":\"7#jdk8-部分新特性\",\"48\":\"7#写在最后\",\"49\":\"7@0\",\"50\":\"7@1\",\"51\":\"8\",\"52\":\"8#loadclass-对应加载阶段\",\"53\":\"8#根据类名获取锁对象-并通过synchronized加锁\",\"54\":\"8#findloadedclass-在jvm方法区找一下是否存在当前class对象并返回\",\"55\":\"8#checkname-查验类名是否符合规范\",\"56\":\"8#findloadedclass0-native函数-从方法区查验当前类是否存在\",\"57\":\"8#如果上一步没找到class类\",\"58\":\"8#记录当前时间\",\"59\":\"8#查看是否设置了父加载器\",\"60\":\"8#找到了-调用父加载器的loadclass\",\"61\":\"8#findbootstrapclassornull-没找到-尝试调用-bootstrampclassloader加载当前类\",\"62\":\"8#checkname-校验名称是否合法-不合法则返回\",\"63\":\"8#findbootstrapclass-native函数-通过-bootstrapclassloader加载类\",\"64\":\"8#如果上一步还是没找到\",\"65\":\"8#再次记录当前时间\",\"66\":\"8#调用当前类加载器的findclass-获取类\",\"67\":\"8#记录类加载器指标\",\"68\":\"8#记录去父加载器中查找的耗时\",\"69\":\"8#记录加载器开始查找时间\",\"70\":\"8#记录加载类找到的类个数\",\"71\":\"8#resolveclass-如果设置需要解析-则校验class对象\",\"72\":\"8#defineclass-对应链接阶段-验证-准备-解析\",\"73\":\"8#predefineclass-定义类前的处理逻辑-确定保护域\",\"74\":\"8#checkname-检查类名\",\"75\":\"8#校验类名不以-java-开头-且不是platformclassloader-这个类在jdk8前叫extclassloader\",\"76\":\"8#如果保护域对象为空-则赋值为默认保护域\",\"77\":\"8#checkcerts-认证当前类所属的包是否在签名内-否则抛出安全异常\",\"78\":\"8#defineclasssourcelocation-定义类资源位置\",\"79\":\"8#defineclass1-native函数-将二进制数组转换为一个class对象\",\"80\":\"8#验证-可以通过虚拟机关闭验证阶段以加快类的加载-但不建议这么做-折中的方法可以让虚拟机预热类\",\"81\":\"8#文件格式验证\",\"82\":\"8#元数据验证\",\"83\":\"8#字节码验证\",\"84\":\"8#符号引用验证\",\"85\":\"8#准备\",\"86\":\"8#解析\",\"87\":\"8#接口-类-解析\",\"88\":\"8#字段解析\",\"89\":\"8#方法解析\",\"90\":\"8#初始化-非构造函数\",\"91\":\"8#postdefineclass-定义类后的处理逻辑\",\"92\":\"8#getnamedpackage-定义一个命名包-放到当前classloader中-如果不存在\",\"93\":\"8#如果安全域中的codesource中的签名不为空-则将签名放到当前class类中\",\"94\":\"8@0\",\"95\":\"8@1\",\"96\":\"9\",\"97\":\"9#markword\",\"98\":\"9@0\",\"99\":\"9@1\",\"100\":\"10\",\"101\":\"10@0\",\"102\":\"10@1\",\"103\":\"11\",\"104\":\"11@0\",\"105\":\"11@1\",\"106\":\"12\",\"107\":\"12#犹豫不决\",\"108\":\"12#拖延\",\"109\":\"12#三分钟热度\",\"110\":\"12#害怕拒绝\",\"111\":\"12#自我设限\",\"112\":\"12#逃避现实\",\"113\":\"12#总找借口\",\"114\":\"12#恐惧\",\"115\":\"12#拒绝学习\",\"116\":\"12@0\",\"117\":\"12@1\",\"118\":\"13\",\"119\":\"13#群体的普通特征\",\"120\":\"13#群体的构成\",\"121\":\"13#普遍特征\",\"122\":\"13#形成原因\",\"123\":\"13#群体的情感及道德观\",\"124\":\"13#群体的情感特征\",\"125\":\"13#群体的道德特征\",\"126\":\"13#群体的观念-推理和想象力\",\"127\":\"13#群体的观念\",\"128\":\"13#群体的推理能力\",\"129\":\"13#群体的想象力\",\"130\":\"13#群体的分类\",\"131\":\"13#异质性群体\",\"132\":\"13#同质性群体\",\"133\":\"13#所谓的犯罪群体\",\"134\":\"13#刑事案件的陪审团\",\"135\":\"13#选民群体\",\"136\":\"13#议会\",\"137\":\"13#群体的意见和信念\",\"138\":\"13#间接成因\",\"139\":\"13#直接成因\",\"140\":\"13#群体领袖\",\"141\":\"13#信念和意见的变化\",\"142\":\"13@0\",\"143\":\"13@1\",\"144\":\"14\",\"145\":\"14#设计模式关系\",\"146\":\"14#设计模式原则\",\"147\":\"14#设计模式分类\",\"148\":\"14#创建类\",\"149\":\"14#工厂模式\",\"150\":\"14#简单工厂模式\",\"151\":\"14#工厂方法模式\",\"152\":\"14#抽象工厂模式\",\"153\":\"14#单例模式\",\"154\":\"14#建造者模式\",\"155\":\"14#原型模式\",\"156\":\"14#结构类\",\"157\":\"14#适配器模式\",\"158\":\"14#外观-门面-模式\",\"159\":\"14#代理模式\",\"160\":\"14#组合模式\",\"161\":\"14#享元模式\",\"162\":\"14#装饰器模式\",\"163\":\"14#桥接模式\",\"164\":\"14#行为类\",\"165\":\"14#迭代器模式\",\"166\":\"14#模版方法模式\",\"167\":\"14#中介者模式\",\"168\":\"14#观察者模式\",\"169\":\"14#命令模式\",\"170\":\"14#策略模式\",\"171\":\"14#状态模式\",\"172\":\"14#备忘录模式\",\"173\":\"14#责任链模式\",\"174\":\"14@0\",\"175\":\"14@1\",\"176\":\"15\",\"177\":\"15#resourceloader\",\"178\":\"15#beandefinitionreader\",\"179\":\"15#classpathbeandefinitionscanner\",\"180\":\"15#applicationcontextinitializer\",\"181\":\"15#beanfactorypostprocessor\",\"182\":\"15#beandefinitionregisterpostprocessor\",\"183\":\"15#aware\",\"184\":\"15#beanpostprocessor\",\"185\":\"15#instantiationawarebeanpostprocessor\",\"186\":\"15#disposablebean\",\"187\":\"15#initializingbean\",\"188\":\"15#applicationlistener\",\"189\":\"15#applicationrunner-spring-boot\",\"190\":\"15#springapplicationrunlistener-spring-boot\",\"191\":\"15#environmentpostprocessor-spring-boot\",\"192\":\"15@0\",\"193\":\"15@1\",\"194\":\"16\",\"195\":\"16#preparerefresh-准备刷新\",\"196\":\"16#obtainfreshbeanfactory-获取bean工厂\",\"197\":\"16#如果上下文中已经存在bean工厂-将先销毁\",\"198\":\"16#createbeanfactory-创建bean工厂-使用defaultlistablebeanfactory对象\",\"199\":\"16#customizebeanfactory-自定义设置bean工厂\",\"200\":\"16#loadbeandefinitions-加载bean定义信息\",\"201\":\"16#preparebeanfactory-准备bean工厂\",\"202\":\"16#设置bean工厂的类加载器\",\"203\":\"16#如果不忽略spel表达式-则设置standardbeanexpressionresolver对象用于解析spel表达式\",\"204\":\"16#设置属性编辑注册器\",\"205\":\"16#添加一个用于aware感知的postprocessor\",\"206\":\"16#忽略一部分aware的实现类-因为这个时候还无法感知这部分动作\",\"207\":\"16#注册一批-可解析依赖项\",\"208\":\"16#注册一个用于监听探测的postprocessor类\",\"209\":\"16#设置-loadtimeweaver\",\"210\":\"16#注册一批环境变量\",\"211\":\"16#postprocessbeanfactory-钩子函数-通知子容器beanfactory准备好了\",\"212\":\"16#invokebeanfactorypostprocessors-执行bean工厂后置处理器\",\"213\":\"16#registerbeanpostprocessors-注册bean的后置处理器\",\"214\":\"16#initmessagesource-初始化消息源\",\"215\":\"16#initapplicationeventmulticaster-初始化事件传播器\",\"216\":\"16#onrefresh-钩子函数-支持子类对刷新的扩展\",\"217\":\"16#registerlisteners-注册监听\",\"218\":\"16#finishbeanfactoryinitialization-结束beanfactory初始化-并初始化一些特殊bean对象-比如非懒加载的bean\",\"219\":\"16#初始化上下文转换服务\",\"220\":\"16#如果没有指定-标签解析器-就使用环境中的默认转换器进行转换-getenvironment-resolveplaceholders-strval\",\"221\":\"16#尽早初始化-loadtimeweaveraware-bean-以便尽早注册其变压器。\",\"222\":\"16#设置临时类加载器为null-停止使用临时类加载器\",\"223\":\"16#freezeconfiguration-冻结所有bean定义信息\",\"224\":\"16#preinstantiatesingletons-初始化非懒加载的bean\",\"225\":\"16#重新包装-beandefinitionnames-属性为一个arraylist\",\"226\":\"16#循环上一步包装的集合-根据beanname创建bean\",\"227\":\"16#getmergedlocalbeandefinition-根据beanname获取本地bean定义信息缓存\",\"228\":\"16#判断获取的beandefinition所代表的bean-非抽象类-是单例-非懒加载\",\"229\":\"16#判断是否为factorybean的子类\",\"230\":\"16#是则\",\"231\":\"16#非则-调用-getbean-创建bean实例\",\"232\":\"16#循环上上一步创建的集合-根据beanname获取已经创建好的bean-并判断bean是否为-smartinitializingsingleton的子类实例-是则运行bean的aftersingletonsinstantiated函数\",\"233\":\"16#finishrefresh-结束刷新-并发布结束刷新事件\",\"234\":\"16#clearresourcecaches-清空资源缓存\",\"235\":\"16#initlifecycleprocessor-初始化生命周期管理\",\"236\":\"16#getlifecycleprocessor-onrefresh-刷新生命周期管理器\",\"237\":\"16#发布上下文刷新事件\",\"238\":\"16#参与-livebeansview-mbean-如果处于活动状态\",\"239\":\"16@0\",\"240\":\"16@1\",\"241\":\"17\",\"242\":\"17#记录启动时间\",\"243\":\"17#createbootstrapcontext-创建启动上下文\",\"244\":\"17#configureheadlessproperty-配置属性\",\"245\":\"17#getrunlisteners-获取运行的监听器\",\"246\":\"17#监听器-starting事件\",\"247\":\"17#包装启动参数为-defaultapplicationarguments对象\",\"248\":\"17#prepareenvironment-准备环境\",\"249\":\"17#getorcreateenvironment-获取或创建环境\",\"250\":\"17#configureenvironment-配置环境\",\"251\":\"17#判断-addconversionservice-属性-为真则创建一个-applicationconversionservice-并加入-env-对象\",\"252\":\"17#configurepropertysources-配置属性源\",\"253\":\"17#configureprofiles-钩子函数-例如用于通过命令行激活配置文件\",\"254\":\"17#configurationpropertysources-attach-为环境添加附加源\",\"255\":\"17#environmentprepared-监听器-环境就绪事件\",\"256\":\"17#defaultpropertiespropertysource-movetoend-移动默认属性\",\"257\":\"17#断言-是否包含-spring-main-environment-prefix\",\"258\":\"17#bindtospringapplication-将环境绑定到springapplication\",\"259\":\"17#如果不是自定义的环境-就创建一个-environmentconverter-对象-将环境转换为-environmentstandardenvironment-如果必要\",\"260\":\"17#configurationpropertysources-attach-再次为环境添加附加源\",\"261\":\"17#configureignorebeaninfo-配置忽略的bean信息\",\"262\":\"17#printbanner-准备-banner-信息\",\"263\":\"17#createapplicationcontext-创建应用上下文\",\"264\":\"17#设置启动步骤\",\"265\":\"17#preparecontext-准备上下文\",\"266\":\"17#设置-context-的环境\",\"267\":\"17#postprocessapplicationcontext-应用上下文的后置处理\",\"268\":\"17#applyinitializers-执行-初始化回调\",\"269\":\"17#监听器-上下文就绪事件\",\"270\":\"17#defaultbootstrapcontext-close-关闭启动上下文\",\"271\":\"17#判断是否打印启动信息-是则打印-是否主容器-和-配置信息\",\"272\":\"17#在beanfactory中注册-applicationarguments-启动参数的封装-实例\",\"273\":\"17#如果存在-banner对象-则注册到-beanfactory中\",\"274\":\"17#判断如果beanfactory是abstractautowirecapablebeanfactory的实例-则设置允许循环引用为-allowcircularreferences-属性的值\",\"275\":\"17#判断如果beanfactory是-defaultlistablebeanfactory-的实例-则设置允许bean定义覆盖为-allowbeandefinitionoverriding属性的值\",\"276\":\"17#判断如果-lazyinitialization-属性的值为true-为上下文设置一个-lazyinitializationbeanfactorypostprocessor-实例\",\"277\":\"17#为上下文添加一个-propertysourceorderingbeanfactorypostprocessor-实例\",\"278\":\"17#getallsources-获取所有资源\",\"279\":\"17#断言-上一步获取的资源不得为空\",\"280\":\"17#load-加载上上步中获取的资源\",\"281\":\"17#监听器-上下文加载完成事件\",\"282\":\"17#afterrefresh-钩子函数-用于子类调用扩展\",\"283\":\"17#如果开启-打印启动日志-则创建一个-startupinfologger-对象\",\"284\":\"17#监听器-启动完成事件\",\"285\":\"17#callrunners-运行声明的-applicationrunner对象的run函数\",\"286\":\"17#监听器-读事件\",\"287\":\"17@0\",\"288\":\"17@1\",\"289\":\"18\",\"290\":\"18@0\",\"291\":\"18@1\",\"292\":\"19\",\"293\":\"19#上车准备\",\"294\":\"19#倒车入库\",\"295\":\"19#侧方停车\",\"296\":\"19#曲线行驶\",\"297\":\"19#直角转弯\",\"298\":\"19@0\",\"299\":\"19@1\",\"300\":\"20\",\"301\":\"20#写在之前\",\"302\":\"20#使用方式\",\"303\":\"20#注意事项\",\"304\":\"20#运行环境\",\"305\":\"20#代码片段\",\"306\":\"20@0\",\"307\":\"20@1\",\"308\":\"21\",\"309\":\"21#起步阶段\",\"310\":\"21#上车阶段\",\"311\":\"21#灯光考试\",\"312\":\"21#开始考试\",\"313\":\"21#直行路口阶段\",\"314\":\"21#路口右转阶段\",\"315\":\"21#连续变道阶段\",\"316\":\"21#超车阶段\",\"317\":\"21#通过公交车站阶段\",\"318\":\"21#路口掉头阶段\",\"319\":\"21#通过人行横道阶段\",\"320\":\"21#直线行驶阶段\",\"321\":\"21#路口左转阶段\",\"322\":\"21#会车阶段\",\"323\":\"21#直行路口阶段-1\",\"324\":\"21#通过学校阶段\",\"325\":\"21#直行路口阶段-2\",\"326\":\"21#靠边停车阶段\",\"327\":\"21@0\",\"328\":\"21@1\",\"329\":\"22\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,4],\"1\":[1,46],\"2\":[1,23],\"3\":[1,1],\"4\":[1,3],\"5\":[1],\"6\":[1,18],\"7\":[1,17],\"8\":[1,18],\"9\":[1,133],\"10\":[1,5],\"11\":[null,null,1],\"12\":[null,null,2],\"13\":[4],\"14\":[1,16],\"15\":[1,28],\"16\":[1,16],\"17\":[1,36],\"18\":[1,12],\"19\":[1,8],\"20\":[null,null,1],\"21\":[null,null,2],\"22\":[3],\"23\":[1,13],\"24\":[1,26],\"25\":[1,212],\"26\":[1,4],\"27\":[null,null,1],\"28\":[null,null,2],\"29\":[2,17],\"30\":[3,40],\"31\":[1,23],\"32\":[3,15],\"33\":[4,38],\"34\":[1,91],\"35\":[1,6],\"36\":[null,null,1],\"37\":[null,null,2],\"38\":[4,22],\"39\":[1,46],\"40\":[1,51],\"41\":[null,null,1],\"42\":[null,null,1],\"43\":[2],\"44\":[1,53],\"45\":[1,9],\"46\":[1],\"47\":[2,788],\"48\":[1,6],\"49\":[null,null,1],\"50\":[null,null,2],\"51\":[1,1],\"52\":[2],\"53\":[3,3],\"54\":[3],\"55\":[2,2],\"56\":[4],\"57\":[1],\"58\":[1],\"59\":[1],\"60\":[3,4],\"61\":[5],\"62\":[4],\"63\":[5],\"64\":[2],\"65\":[2],\"66\":[3],\"67\":[1],\"68\":[1],\"69\":[1],\"70\":[2],\"71\":[4,3],\"72\":[6],\"73\":[4],\"74\":[2],\"75\":[6,1],\"76\":[3],\"77\":[3],\"78\":[2,2],\"79\":[3],\"80\":[5],\"81\":[1,3],\"82\":[1,3],\"83\":[1,5],\"84\":[1,4],\"85\":[1,2],\"86\":[1],\"87\":[3,2],\"88\":[1,4],\"89\":[1,5],\"90\":[3,5],\"91\":[2],\"92\":[5],\"93\":[3,3],\"94\":[null,null,1],\"95\":[null,null,1],\"96\":[1],\"97\":[1,28],\"98\":[null,null,1],\"99\":[null,null,1],\"100\":[1,49],\"101\":[null,null,1],\"102\":[null,null,1],\"103\":[1,48],\"104\":[null,null,1],\"105\":[null,null,1],\"106\":[1],\"107\":[1,10],\"108\":[1,16],\"109\":[1,7],\"110\":[1,23],\"111\":[1,27],\"112\":[1,20],\"113\":[1,23],\"114\":[1,20],\"115\":[1,16],\"116\":[null,null,1],\"117\":[null,null,1],\"118\":[3],\"119\":[1],\"120\":[1,3],\"121\":[1,3],\"122\":[1,3],\"123\":[1],\"124\":[1,6],\"125\":[1,6],\"126\":[2],\"127\":[1,4],\"128\":[1,3],\"129\":[1,4],\"130\":[1],\"131\":[1,5],\"132\":[1,10],\"133\":[1,2],\"134\":[1,6],\"135\":[1,5],\"136\":[1,4],\"137\":[1],\"138\":[1,12],\"139\":[1,14],\"140\":[1,8],\"141\":[1,6],\"142\":[null,null,1],\"143\":[null,null,1],\"144\":[1],\"145\":[1,1],\"146\":[1,67],\"147\":[1],\"148\":[1],\"149\":[1],\"150\":[1,3],\"151\":[1,4],\"152\":[1,5],\"153\":[1,3],\"154\":[1,6],\"155\":[1,4],\"156\":[1],\"157\":[1,3],\"158\":[3,2],\"159\":[1,5],\"160\":[1,4],\"161\":[1,3],\"162\":[1,2],\"163\":[1,2],\"164\":[1],\"165\":[1,1],\"166\":[1,1],\"167\":[1,3],\"168\":[1,4],\"169\":[1,4],\"170\":[1,3],\"171\":[1,3],\"172\":[1,2],\"173\":[1,3],\"174\":[null,null,1],\"175\":[null,null,1],\"176\":[1,1],\"177\":[1,1],\"178\":[1,1],\"179\":[1,1],\"180\":[1,1],\"181\":[1,1],\"182\":[1,2],\"183\":[1,2],\"184\":[1,1],\"185\":[1,2],\"186\":[1,1],\"187\":[1,1],\"188\":[1,1],\"189\":[4,3],\"190\":[4,5],\"191\":[4,1],\"192\":[null,null,1],\"193\":[null,null,3],\"194\":[2,1],\"195\":[2,12],\"196\":[2],\"197\":[3],\"198\":[4],\"199\":[2,2],\"200\":[2,7],\"201\":[2],\"202\":[1],\"203\":[3],\"204\":[1],\"205\":[1],\"206\":[2,7],\"207\":[2,4],\"208\":[2],\"209\":[2],\"210\":[1,7],\"211\":[3],\"212\":[2,3],\"213\":[2,9],\"214\":[2,11],\"215\":[2,11],\"216\":[3],\"217\":[2,5],\"218\":[5],\"219\":[2],\"220\":[7],\"221\":[5],\"222\":[3],\"223\":[3,7],\"224\":[2],\"225\":[3],\"226\":[2],\"227\":[3],\"228\":[4],\"229\":[1],\"230\":[1,15],\"231\":[4,4],\"232\":[6],\"233\":[4],\"234\":[2,5],\"235\":[2,9],\"236\":[3,6],\"237\":[1,5],\"238\":[5],\"239\":[null,null,1],\"240\":[null,null,2],\"241\":[2,1],\"242\":[1],\"243\":[2,5],\"244\":[2,9],\"245\":[2,5],\"246\":[2,9],\"247\":[2],\"248\":[2],\"249\":[2,10],\"250\":[2],\"251\":[8],\"252\":[2,29],\"253\":[3],\"254\":[3,24],\"255\":[3],\"256\":[3,5],\"257\":[6],\"258\":[2,8],\"259\":[7,9],\"260\":[3,1],\"261\":[2,5],\"262\":[4,20],\"263\":[2,12],\"264\":[1,7],\"265\":[2],\"266\":[3],\"267\":[3,23],\"268\":[3,6],\"269\":[2],\"270\":[3,3],\"271\":[5],\"272\":[5],\"273\":[5],\"274\":[4],\"275\":[5],\"276\":[6],\"277\":[3],\"278\":[2,4],\"279\":[3],\"280\":[2,10],\"281\":[2],\"282\":[3],\"283\":[5],\"284\":[2],\"285\":[4,9],\"286\":[2],\"287\":[null,null,1],\"288\":[null,null,3],\"289\":[2,272],\"290\":[null,null,1],\"291\":[null,null,1],\"292\":[2],\"293\":[1,20],\"294\":[1,78],\"295\":[1,63],\"296\":[1,16],\"297\":[1,15],\"298\":[null,null,1],\"299\":[null,null,1],\"300\":[2],\"301\":[1,17],\"302\":[1,25],\"303\":[1,22],\"304\":[1],\"305\":[1,341],\"306\":[null,null,1],\"307\":[null,null,1],\"308\":[4,94],\"309\":[1],\"310\":[1,40],\"311\":[1,72],\"312\":[1,32],\"313\":[1,11],\"314\":[1,21],\"315\":[1,16],\"316\":[1,20],\"317\":[1,11],\"318\":[1,39],\"319\":[1,17],\"320\":[1,27],\"321\":[1,25],\"322\":[1,8],\"323\":[1,6],\"324\":[1,11],\"325\":[1,5],\"326\":[1,43],\"327\":[null,null,1],\"328\":[null,null,1],\"329\":[1,3]},\"averageFieldLength\":[1.9147957776627522,25.43857177700851,0.638668400587369],\"storedFields\":{\"0\":{\"h\":\"Guo Cay\",\"t\":[\"Email: guocay@gmail.com\"]},\"1\":{\"h\":\"个人优势\",\"t\":[\"熟悉JVM标准, JVM调优, GC算法, 内存布局;\",\"熟悉JMM模型, JUC框架, 熟悉使用Disruptor;\",\"熟悉 Java NIO网络编程, 阅读过Netty源码; 了解TCP/IP, HTTP, STOMP及MQTT等常用协议;\",\"熟悉Java反射机制, 代理机制, 探针机制, SPI机制; 读过Reflections源码; 读过基于JDKProxy和CGLib生成的代理类源码;\",\"熟悉基于spring framework的程序开发,熟练使用相关扩展点; 熟悉基于SpringBoot的自动装配机制,熟悉Mybatis运行机制与插件机制; 了解Dubbo的RPC调用逻辑; 浅读过源码;\",\"了解Redis集群机制, 使用优化; 了解MySQL集群机制, 索引调优; 了解ElasticSearch查询优化, 相关度算法; 了解 HDFS集群机制, 使用优化;\",\"了解XA,TCC和SAGA分布式事务方案使用,了解Zab选举算法运行原理, 了解RocketMQ运行机制;了解Hadoop YRAN运行机制; 了解Flink的工作图生成过程与算子关系;\",\"理解DDD领域驱动设计,在项目中有过应用;\"]},\"2\":{\"h\":\"项目经验\",\"t\":[\"龙源电力 - 风力发电机基站运营实时分析处理平台\",\"技术栈: Nginx + Netty + HDFS + YARN + Flink + Kafka + Redis\",\"军科院网信所 - \\\"军民融合\\\"先导项目\",\"技术栈: Sping Boot + JNA + Mybatis Plus + knife4j + ganymed-ssh2 + Flowable\"]},\"3\":{\"h\":\"教育经历\",\"t\":[\"西安电子科技大学计算机科学与技术\"]},\"4\":{\"h\":\"工作经历\",\"t\":[\"太极计算机股份有限公司 Java程序员\",\"北京思路智园科技有限公司 Java程序员\"]},\"5\":{\"h\":\"关于domain对象与DTO对象间的相互拷贝的思考与优化思路\"},\"6\":{\"h\":\"问题描述\",\"t\":[\"我们后端在开发的过程中总是在domain(数据库映射对象)和dto(数据传输对象)之间进行数据互转.以匹配对象在各生命周期的运行.\",\"在实际的开发中,我们发现大多数的domain对象和dto对象内的字段完全一致.创建两个内容完全一样的类.从大部分情况下考虑都显得多余.\",\"代码中经常出现大量的代码如下\",\"dto.setAttr(domain.getAttr()); ... \",\"冗长,且不优雅.\"]},\"7\":{\"h\":\"问题思考\",\"t\":[\"市面上有很多用于Bean对象之间拷贝的工具类如Apache和SpringFramework的BeanUtils,他的实现机制时通过运行时反射将同名属性之间进行拷贝,且这些工具最大的问题还在于为了适配更多的情况做了很多的其他工作.这对于我们只是需要简单的值拷贝不太友善; 2. MapStruct是一个通过定义转换接口,并基于JSR269在编译期实现对象互转的工具.但这种工具的弊端在于仅能实现一对一的转换( 单向,一个接口仅能实现一个特定类转换到另一个特定类). 3. 我们现在的需求是,可以运行时动态的一对多转换,可以一个属性对多个属性(不同名)转换和可以不再写更多的相同类;\"]},\"8\":{\"h\":\"编码逻辑\",\"t\":[\"我们抽象出一个\\\"拆装箱\\\"的概念,domain是一个拆箱后的对象(可以理解为拆箱后存入数据库),dto是一个装箱后对象( 可以理解为装箱后运走).\",\"在现实生活中很多货物是可以从仓库中拿出直接用于运输的.所以,当装箱后的对象和拆箱后的对象本质上是一个对象,拆箱后的对象也就是一个装箱后的对象;\",\"基于此,我们可以抽象出对象的集成关系:domain对象继承DTO对象;\",\"在对象间数据拷贝方面,我们可以通过自定义注解指定对象间互转的逻辑.并在对应对象的父类中定义函数在运行时动态的反射拷贝值;\"]},\"9\":{\"h\":\"实现方案\",\"t\":[\"domain与DTO之间的关系; View 继承 Transport\",\"/** * DTO对象 * * 数据传输对象基类 * @author GuoKai * @date 2021/9/28 */ public interface Transport extends Model { /** * 用于数据传输对象的拆箱 * @param <T> 拆箱后的类型 * @return 拆箱后的对象 */ default <T extends View> T unBoxing(Class<T> clazz){ T view = ReflectUtil.newInstance(clazz); // todo 循环获取当前类的字段 Arrays.stream(ReflectUtil.getFields(getClass())).parallel() // todo 过滤出需要拆箱的字段 .filter(field -> AnnotationUtil.hasAnnotation(field,Unboxing.class)) .forEach(field -> { // todo 获取字段中所有 Unboxing 描述信息 Arrays.stream(field.getAnnotationsByType(Unboxing.class)).parallel() // todo 过滤出需要转换的类 .filter(anno -> clazz.isAssignableFrom(anno.clazz())) .forEach(anno -> { var viewField = ReflectUtil.getField(clazz, anno.field()); // todo 设置字段反射,绕过权限校验 field.setAccessible(true); viewField.setAccessible(true); // todo 设置值 ReflectUtil.setFieldValue(view, viewField, ReflectUtil.getFieldValue(this, field)); }); }); return view; } } \",\"/** * domain对象 * * 上帝的归上帝,凯撒的归凯撒 * 抽象出这个类是为了映射视图,从而尽可能的不在项目中书写SQL. * @author GuoKai * @date 2021/8/19 */ @SuppressWarnings(\\\"all\\\") public abstract class View<T extends View> implements Transport { /** * 用于数据库对象装箱 * @param clazz 装箱的类描述 * @param <F> 装箱的类型 * @return 装箱后的对象 */ public <F extends Transport> F boxing(Class<F> clazz){ F tran = ReflectUtil.newInstance(clazz); // todo 循环获取当前类的字段 Arrays.stream(ReflectUtil.getFields(getClass())).parallel() // todo 过滤出需要拆箱的字段 .filter(field -> AnnotationUtil.hasAnnotation(field, Boxing.class)) .forEach(field -> { // todo 获取字段中所有 Boxing 描述信息 Arrays.stream(field.getAnnotationsByType(Boxing.class)).parallel() // todo 过滤出需要转换的类 .filter(anno -> clazz.isAssignableFrom(anno.clazz())) .forEach(anno -> { var tranField = ReflectUtil.getField(clazz, anno.field()); // todo 设置字段反射,绕过权限校验 field.setAccessible(true); tranField.setAccessible(true); // todo 设置值 ReflectUtil.setFieldValue(tran, tranField, ReflectUtil.getFieldValue(this, field)); }); }); return tran; } } \",\"自定义注解,设置属性间关系\",\"/** * 数据库实体对象装箱时的属性指定 * @author GuoKai * @date 2021/9/28 */ @Documented @Target(ElementType.FIELD) @Repeatable(Boxing.List.class) @Retention(RetentionPolicy.RUNTIME) @SuppressWarnings(\\\"all\\\") public @interface Boxing { /** * 用于指定装箱的数据传输类 * @return 装箱的类 */ Class<? extends Transport> clazz(); /** * 用于指定类中的字段 * @return 类中的字段名 */ String field(); @Documented @Target(ElementType.FIELD) @Retention(RetentionPolicy.RUNTIME) @interface List{ Boxing[] value(); } } \",\"/** * 数据传输对象拆箱时的属性指定 * @author GuoKai * @date 2021/9/28 */ @Documented @Target(ElementType.FIELD) @Repeatable(Unboxing.List.class) @Retention(RetentionPolicy.RUNTIME) @SuppressWarnings(\\\"all\\\") public @interface Unboxing { /** * 用于指定装箱的数据传输类 * @return 装箱的类 */ Class<? extends View> clazz(); /** * 用于指定类中的字段 * @return 类中的字段名 */ String field(); @Documented @Target(ElementType.FIELD) @Retention(RetentionPolicy.RUNTIME) @interface List{ Unboxing[] value(); } } \",\"使用例子\",\"// domain对象 public class Table extends View<Table>{ @Boxing(clazz=TableDto.class,field=\\\"nameDto\\\") @Boxing(clazz=TableDto1.class,field=\\\"nameDto1\\\") private String name; } // DTO对象1 public class TableDto implements Transport{ @Unboxing(clazz=Table.class,field=\\\"name\\\") private String nameDto; } // DTO对象2 public class TableDto1 implements Transport{ @Unboxing(clazz=Table.class,field=\\\"name\\\") private String nameDto1; } // 拆箱 Table table = TableDto().unBoxing(Table.class); Table table1 = TableDto1().unBoxing(Table.class); // 装箱 TableDto tableDto = Table().boxing(TableDto.class); TableDto1 tableDto1 = Table().boxing(TableDto1.class); \"]},\"10\":{\"h\":\"PS\",\"t\":[\"boxing函数和unboxing函数在转换时,可以基于\\\"享元模式\\\"做一些缓存以优化性能;\"]},\"11\":{\"c\":[\"Mekatok\"]},\"12\":{\"c\":[\"Mekatok\",\"开发笔记\"]},\"13\":{\"h\":\"关于金仓数据库不被主流框架(如Activiti,Flowable)支持的思考与解决方案\"},\"14\":{\"h\":\"问题描述\",\"t\":[\"去年底的时候,我们的项目中需要使用工作流实现业务.经过一些讨论,最终决定使用开源引擎Activiti进行集成.在现阶段大环境下,项目要求需要使用自主可控的国产数据库--KingBase.\",\"用过Activiti,Flowable的同学应该都知道,这类工具是强依赖数据库的.特别是在项目启动的过程中就会创建一批数据表用于存储BMPN模型,工作流实例和历史数据等.这就导致在项目代码启动连接数据库的时候,就会报错显示 \\\" 不支持KingBaseES的数据库\\\".\"]},\"15\":{\"h\":\"问题思考\",\"t\":[\"通过查看Flowable的文档和源码,我们了解到这类工具在启动时会利用工具 LiquiBase 对数据库的数据表进行初始化( LiquiBase是一个方言无关的数据库版本管理工具).而LiquiBase在运行时会获取数据库产品类型后动态根据资源中的数据表定义生成符合当前数据库方言的建表语句.后运行初始化表;\",\"从网上公开的知识可以了解到,金仓的数据库KingBase是根据开源数据库PostgreSQL魔改而来,然后通过汇总得知,在KingBase对于pgSQL的差异中包括( 但不限于) 命令名,系统表和视图,函数的语法等等.从后端程序员的使用角度出发,能与我们产生兼容性联系的基本都在系统表和视图这部分的差异弥补; 3. 通过对JDBC标准的了解.我们得知每一个实现了JDBC标准的Driver都需要返回客户端一个字符串以表明自己的数据库名称(类型) .所以,如果我们在KingBase的数据库驱动中将产品类型从\\\"KingBaseES\\\"换为\\\"postgresql\\\".理论上就能骗过工具;\"]},\"16\":{\"h\":\"编码逻辑\",\"t\":[\"通过对现状的评估,得益于KingBase的魔改对于pgSQL的实现并不是破坏性的.我们觉得最小成本的修改应该是这样的,在关键节点中欺骗Activiti.让其始终认为自己连接的是pgSQL.而不是KingBase;\",\"KingBase数据库对于pgSQL还修改了所有的系统表和视图,但也仅是修改了前缀(比如pg_tables修改成sys_tables) .而在一些开源框架中也会调用这些系统表来实现逻辑.基于此,我们觉得可以手动创建一批视图pg_tables去映射sys_tables;\"]},\"17\":{\"h\":\"实现方案\",\"t\":[\"反编译kingbase数据库连接驱动kingbase8-8.x.x.jar;找到实现了java.sql.DatabaseMetaData接口的类;\",\"// KingBase中实现了DatabaseMetaData的类在com.kingbase8.jdbc.KbDatabaseMetaData类中 // 找到如下的函数 将返回的 \\\"KingbaseES\\\" 修改为 \\\"postgresql\\\" public String getDatabaseProductName() throws SQLException { // return \\\"KingbaseES\\\"; return \\\"postgresql\\\"; } \",\"将修改过的KbDatabaseMetaData.class编译后重新打包入驱动中;\",\"手动到数据库创建视图 pg_tables(如有需要也可创建别的,这里仅作演示目的.);\",\"create view pg_tables as select * from sys_tables; \"]},\"18\":{\"h\":\"其他方案\",\"t\":[\"依赖于java中的类加载器AppClassLoader中关于加载资源时定义的是个数组,且指向src目录的资源永远在下标零处.所以,只要在src中定义的类永远优先于其他地方的类加载;\",\"打开你需要集成的工具框架,找到用于解析数据库类型进行后续操作的类.在src下创建同名同路径的java文件;\",\"复制反编译后类中所有的代码至src目录下的文件后,增加对应的配置以在解析到\\\"KingbaseES\\\"进行自定义操作;\"]},\"19\":{\"h\":\"PS\",\"t\":[\"LiquiBase是一个方言无关的数据库版本管理工具,真心好用!!!\\n会根据定义好的xml内容对数据库的初始化,数据表版本进行管理,Mekatok即是使用LiquiBase对数据库进行管理.再不需要在项目初次启动时先运行数据库建表脚本,也不需要再针对数据库加字段什么的汇总脚本各个环境先同步数据库.\"]},\"20\":{\"c\":[\"Mekatok\"]},\"21\":{\"c\":[\"Mekatok\",\"开发笔记\"]},\"22\":{\"h\":\"基于事件机制的服务内削峰和低耦合(同步)操作的思考与实现\"},\"23\":{\"h\":\"问题描述\",\"t\":[\"去年底在做项目的时候,我们有这样的一个需求,用户上传文档操作,首先将文档保存至服务器后再上传到ES数据库中解析文档.解析文档是一个很消耗时间的操作,我们不能等待解析完成后再对用户返回操作成功.\",\"今年初在做项目的时候,我们有这样的一个需求,用户接收消息后,需要根据是否节假日且用户是否设置节假日自动回复对消息进行自动回复处理.且自动回复操作的成功与否要影响到消息是否接收.我们在分析需求后觉得这必须是一个事务性的服务.自动回复失败将不接收消息.\"]},\"24\":{\"h\":\"问题思考\",\"t\":[\"这两个需求正好是两个极端,一个是服务细节影响最终结果,另一个是服务细节不影响最终结果;\",\"另外,我们在讨论需求后发现.在以后项目的升级过程中,在这些服务节点很有可能再增加其他细节( 比如,接收消息后,除自动回复外,还需要做别的操作).这个时候,如果我们在函数中再追加别的代码必定会增加测试的难度和耦合度;\",\"Spring Event是Spring Framework中一个很重要的功能之一.本质是依赖BeanFactory中声明的监听器,事件发布后在同一个线程中线性调用监听器的响应,既然在同一个线程中就可以实现异常的监控与控制.完美实现第二个业务场景;\",\"而第一个业务场景相较于第二个,只需将监听器的响应放到新的线程中执行,即可实现.而scheduling也是Spring Framework中一个很重要的功能之一.可以实现函数级异步操作;\"]},\"25\":{\"h\":\"解决方案\",\"t\":[\"事件与活动的包装\",\"/** * 平台内对于应用事件的包装 * @author GuoKai * @date 2021/8/31 */ public abstract class Event<T> extends ApplicationEvent implements Model { private static final long serialVersionUID = 905529385550550456L; /** * 构造器 * @param source 元数据 */ public Event(T source) { super(source); } /** * 事件名称 * @return 事件名称 */ public String name(){ return getClass().getName(); }; /** * 事件备注 * @return 事件备注 */ public String description(){ return \\\"默认事件描述\\\"; } /** * 事件数据 * @return 事件数据 */ public T getMeta() { return (T) getSource(); } } \",\"/** * 插件所依赖的活动 * @author GuoKai * @date 2021/9/23 */ @SuppressWarnings(\\\"all\\\") public abstract class Activity<T> extends Event<T> { private static final long serialVersionUID = 6996847203171194108L; /** * 日志对象 */ protected final Logger log = LoggerFactory.getLogger(getClass()); /** * 用于存储活动已执行的插件 */ @Getter private List<Class<? extends Plugin>> plugins = CollUtil.newLinkedList(); /** * 构造器 * @param source 元数据 */ public Activity(T source) { super(source); } /** * 插件执行成功时的回调 */ protected void success(){ log.info(\\\"活动 {}, 执行成功!\\\", name()); } /** * 插件执行失败时的回调 * @param throwable 异常信息 */ protected void failure(Throwable throwable){ log.error(\\\"活动 {}, 执行错误!\\\", name()); log.error(throwable.getMessage(), throwable); } /** * 添加当前活动已执行成功的插件 * @param plugin 已执行过的插件 */ protected <F extends Plugin> void addPlugin(Class<F> plugin){ plugins.add(plugin); } /** * 活动名称 */ @Override public String name() { return super.name(); } /** * 活动备注 */ @Override public String description() { return super.description(); } /** * 活动元数据 */ @Override public T getMeta() { return super.getMeta(); } } \",\"/** * 事件监听的基类 * @author GuoKai * @date 2021/9/27 */ @SuppressWarnings(\\\"all\\\") public interface Listener<T extends Event<?>> extends ApplicationListener<T>, WithAssertions { /** * 事件执行函数 * @param event 依赖对象 */ void action(T event) throws RuntimeException; /** * 重写 ApplicationListener 的事件响应函数,用于执行action() * @param event 元数据 */ @Override default void onApplicationEvent(T event){ action(event); } } \",\"/** * 插件基类 * @author GuoKai * @date 2021/9/23 */ @SuppressWarnings(\\\"all\\\") public interface Plugin<T extends Activity<?>> extends Listener<T> { /** * 判断是否执行当前插件 * @param activity 依赖对象 * @return 操作与否 */ boolean support(T activity); /** * 执行 插件内 函数 * @param event 活动数据 */ @Override default void onApplicationEvent(T event){ if(support(event)){ action(event); event.addPlugin(getClass()); } } } \",\"/** * Spring Event 操作工具类 * @author GuoKai * @date 2021/8/31 */ @Slf4j public abstract class EventCenter { /** * 发布事件至 Spring * @param event 事件对象 */ public static void publish(Event<?> event){ var element = ThreadUtil.getStackTraceElement(4); log.info(\\\"{} 发布了{}: {}, 内容为: {}\\\", String.format(\\\"%s.%s()\\\",element.getClassName(),element.getMethodName()), Activity.class.isAssignableFrom(event.getClass()) ? \\\"活动\\\" : \\\"事件\\\", event.description(), JSONUtil.toJsonStr(event.getSource())); SpringUtil.getApplicationContext().publishEvent(event); } } \",\"/** * 插件使用中心 * @author GuoKai * @date 2021/9/23 */ @SuppressWarnings(\\\"all\\\") public abstract class PluginCenter { /** * 发布活动,执行插件. * @param activity 活动 * @param <T> 泛型 */ public static <T extends Activity<?>> void script(T activity){ script(activity, Activity::success, (item, throwable) -> item.failure(throwable)); } /** * 发布活动,执行插件.回调的优先级高于activity中的定义. * @param activity 活动 * @param success 成功回调 * @param <T> 泛型 */ public static <T extends Activity<?>> void script(T activity, Consumer<T> success){ script(activity, Activity::success, (item,Throwable) -> {}); } /** * 发布活动,执行插件.回调的优先级高于activity中的定义. * @param activity 活动 * @param failure 失败回调 * @param <T> 泛型 */ public static <T extends Activity<?>> void script(T activity, BiConsumer<T, Throwable> failure){ script(activity, (item) -> {}, failure); } /** * 发布活动,执行插件.回调的优先级高于activity中的定义. * @param activity 活动 * @param success 成功回调 * @param failure 失败回调 * @param <T> 泛型 */ public static <T extends Activity<?>> void script(T activity, Consumer<T> success, BiConsumer<T, Throwable> failure){ try { EventCenter.publish(activity); success.accept(activity); }catch (Throwable throwable){ failure.accept(activity, throwable); } } /** * 获取插件总数 */ public static <T extends Activity<?>> Integer count(Class<T> activity){ return getPlugins(activity).size(); } /** * 判断是否包含某个活动的插件 */ public static <T extends Activity<?>> boolean hasPlugin(Class<T> activity){ return count(activity) > 0; } /** * 获取所有插件 */ public static <T extends Activity<?>> List<Plugin> getPlugins(Class<T> activity){ return SpringUtil.getBeansOfType(Plugin.class).values().stream() .filter(plugin -> plugin.getClass().equals(activity)).collect(Collectors.toList()); } } \",\"使用例子\",\"/** * 事件是个异步操作,本质上是在不同的线程中运行 */ // 创建事件描述 public class CustomEvent extends Event<CustomEvent>{} // 异步事件发布 EventCenter.publish(CustomEvent()); // 异步事件响应 @Component public class CustomListener<CustomEvent> implements Listener{ @Override @Async public action(CustomEvent event)throws RuntimeException{ // do something } } \",\"/** * 事件是个同步操作,本质上是在同一线程中运行 */ // 创建活动描述 public class CustomActivity extends Activity<CustomActivity>{} // 同步活动发布 PluginCenter.script(CustomActivity()); // 同步活动响应 @Component public class CustomPlugin<CustomActivity> implements Plugin{ @Override public action(CustomActivity activity)throws RuntimeException{ // do something } @Override public boolean support(CustomActivity activity){ // 是否运行当前插件 return true; } } \"]},\"26\":{\"h\":\"PS\",\"t\":[\"本功能的实现参考了Spring Plugin的设计理念,熟悉这个包可以更好的理解这部分内容;\"]},\"27\":{\"c\":[\"Mekatok\"]},\"28\":{\"c\":[\"Mekatok\",\"开发笔记\"]},\"29\":{\"h\":\"InnoDB中的隔离级别与MVCC - MVCC的快照读与并发读\",\"t\":[\"MVCC\",\"InnoDB存储引擎的并发是通过MVCC(Multi-Version Concurrency Control)实现的. 与MVCC相对的是LBCC(Lock-Based Concurrency Control), 对比来说好处在于 读写不互斥. 在读多写少的应用中,读写不冲突是很重要的,可大幅度增加系统的并发性能. 这也是为什么现阶段大部分关系型数据库都是支持MVCC的.\"]},\"30\":{\"h\":\"Snapshot Read & Current Read\",\"t\":[\"在MVCC并发控制中,读操作可以分成两类: 快照读(snapshot read)与当前读(current read).快照读,读取的是记录的可见版本 (有可能是历史版本),不用加锁. 当前读,读取的是记录的最新版本. 并且,当前读返回的记录,都会加上锁,保证其他事务不会再并发修改这条记录.\",\"快照读\",\"当前读\",\"select * from table where ?;\",\"select * from table where ? lock in share mode;\",\"select * from table where ? for update;\",\"insert into table values (…);\",\"update table set ? where ?;\",\"delete from table where ?;\",\"当前读,读取的是记录的最新版本. 并且,在读取之后还需要保证其他并发事务不能修改当前记录,对当前记录加锁. 除 in share mode 关键字加的是共享锁(S锁)外, 其他语句均加的是排它锁(X锁).\"]},\"31\":{\"h\":\"DML执行过程\",\"t\":[\"更新语句执行过程\",\"Server层在拿到更新语句后, 先开启一个事务(申请一个事务ID).\",\"Server层根据更新语句先查询出待修改的数据;\",\"Engine层根据条件查出数据后返回给Server层, 并将返回的数据加锁;\",\"Server层拿到数据后, 执行逻辑后. 将修改后的数据再次交由Engine层;\",\"Engine将数据追加到内存缓存池中(后续会再放到undoLog中), 并返回Server层成功;\",\"Server层接收到修改成功后, 会通过 read next 指令 读取流中的下一批数据重复处理;\",\"处理完成后, Server层会向Engine层发送事务提交指令. 更新完成;\"]},\"32\":{\"h\":\"Two-Phase Locking\",\"t\":[\"大部分的关系型数据库加锁的一个原则就是二阶段锁. 二阶段锁相对比较容易理解, 说的是锁的操作分为两个阶段: 加锁阶段和解锁阶段. 并保证加锁阶段与解锁阶段 彼此不相交.\",\" 2PL就是将加锁/解锁分为两个完全不相交的阶段. 加锁阶段: 只加锁,不放锁. 解锁阶段: 只放锁,不加锁.\"]},\"33\":{\"h\":\"事务隔离级别(Isolation Level)\",\"t\":[\"事务隔离级别\",\"IL简单的讲可以理解为在当前读情况下,事务隔离级别分为四种. 是 \\\"数据库系统\\\" 中的一个概念, 并不局限于InnoDB. 几乎所有的关系型数据库中都会有这个概念. 只是,可能并不四种全部支持.\",\"在MySQL的事务引擎中,InnoDB是使用最广泛的一种. 它默认的事务隔离级别为RR(重复读).在标准的RR模式下是无法避免幻读问题的,但InnoDB使用了Next-Key Lock(行锁加间歇锁)避免了幻读问题.\",\"Read UnCommitted\",\"可以读取到未提交的记录,几乎不会使用.因为无法保证事务的隔离性.\",\"Read Committed\",\"通过对读取到的记录加锁实现.所以可以解决脏读问题,但依旧会出现幻读的情况.\",\"Repeatable Read\",\"通过对读取到的记录加锁实现,并在满足查询条件的区间加间歇锁.所以不会出现幻读情况.\",\"Serializable\",\"将并发控制降低到悲观锁级别,快照读会退化成当前读.不会出现问题,但并发效率会降低.\"]},\"34\":{\"h\":\"SQL语句的加锁过程分析\",\"t\":[\"针对与读操作.除在事务隔离级别为Serializable模式下,才会对符合条件的数据(和数据区间)进行加锁.其他情况下是不会对数据进行加锁的.\",\"针对与写操作.在不同事务隔离级别下, 查询条件是否主键, 查询条件是否二级索引, 查询条件是否唯一索引和SQL的执行计划都有着很大的关系.\",\"以 delete from table where id = 1 为例;\",\"RC模式下. 当ID为主键时, 此时只需要在聚簇索引上对应行上加行锁即可实现;\",\"RC模式下. 当ID非主键但其上有唯一索引时, InnoDB会加两把锁.第一把是在非唯一索引上对满足条件的行加锁.并通过其对应的主键对聚簇索引中的行加锁;为什么会在聚簇索引上加锁呢?因为为了避免其他事务在此时更新ID列;\",\"RC模式下. 当ID列非主键也无唯一索引时, InnoDB会对全部表中的记录加锁.\",\"MySQL 层级\",\"MySQL是分为两层的Server层和Engine层. Server层负责SQL的解析优化,Engine层负责数据的存取. 当数据无法通过索引进行精准匹配时,Engine层就会把符合条件的数据全部返回. 由Server层对数据进行再次过滤. 只要是在当前读状态下,Engine层返回给Server层的数据都是会加锁的. 但是, 为了效率考量.MySQL对这部分还是做了优化的. 即当Server层过滤后发现多余的数据不需要加锁后,会立即通知Engine层将锁释放,而不是在事务提交时再释放. 显然这是一个反范式优化.违反了2PL的语义.\",\"RR模式下, 当ID列非主键但存在非唯一索引时, InnoDB会加三把锁. 第一把是在非唯一索引对应记录上的行锁, 第二把是在非唯一索引对应记录的前后加入间歇锁, 第三把是在聚簇索引对应主键上加行锁.\",\"RR模式\",\"RR模式下, 当ID非主键也无唯一索引时. InnoDB会对全表的数据记录加锁.并在此基础上对所有记录间加入间隙锁. 本质上已经是表锁了.\",\"RR模式\",\"示例:\",\"示例\",\"IndexKey: 用于查询在索引中的连续范围.\",\"IndexFilter: 在使用IndexKey确定了查询的连续范围后, 需要使用其他where条件来进行过滤.\",\"TableFilter: where条件中不能通过索引处理的查询条件.\",\"从上图中可以看出. 在默认的RR模式下, 由IndexKey确定的连续范围将会加上间歇锁. IndexFilter指定的过滤条件将会被加上行锁. IndexFilter在5.6版本前不支持索引下推(ICP),多出来的数据也会被加上行锁 返回给Server层进行处理.这时,二级索引上还会加上红箭头指示的行锁.\",\"总结:\",\"只有在RR模式下, 才会启用间隙锁或NK锁;\",\"除串行化模式下, 所有DQL语句走的都是快照读.即对数据不加锁;\",\"Engine层无法通过索引精准匹配的数据, 会由Server层再次过滤.但会全部加锁;\",\"通过二级索引匹配到的数据会先在二级索引上加锁, 最后通过二级索引对聚簇索引加锁;\"]},\"35\":{\"h\":\"死锁原理与分析\",\"t\":[\"死锁的发生与否和执行了多少SQL并没有一点关系, 死锁的关键在于, 两个以上的session对同一批共享数据的加锁顺序不一致导致的. 只有了解InnoDB的加锁机制,并根据各自加锁的顺序分析才能找到照成死锁的最终原因.\"]},\"36\":{\"c\":[\"MySQL\"]},\"37\":{\"c\":[\"MySQL\",\"InnoDB\"]},\"38\":{\"h\":\"Java 中 @SuppressWarnings 注解用法详解\",\"t\":[\"说明\",\"J2SE5.0 提供了一个注解 @SuppressWarnings。该注解的作用是给编译器一条指令，告诉它对被批注的代码元素内部的某些警告保持静默。 @SuppressWarnings 批注允许您选择性地取消特定代码段（即类或方法）中的警告。 其中的想法是当您看到警告时，您将调查它，如果您确定它不是问题，您就可以添加一个 @SuppressWarnings 批注，以使您不会再看到警告。\",\"警告\",\"@SuppressWarnings 就像一粒 止疼片, 本质上并未解决任何问题. 只是在编译期间通过抑制不抛警告而已.\"]},\"39\":{\"h\":\"源码\",\"t\":[\"/** * 指示应在带注释的元素（以及带注释的元素中包含的所有程序元素）中抑制命名的编译器警告。 * 请注意，给定元素中抑制的警告集是所有包含元素中抑制的警告的超集。 * 例如，如果您注释一个类以抑制一个警告并注释一个方法以抑制另一个，则两个警告都将在该方法中被抑制。 * 但是，请注意，如果在模块信息文件中抑制了警告，则抑制适用于文件中的元素，而不适用于模块中包含的类型。 * 作为一种风格，程序员应该总是在它有效的最深嵌套元素上使用这个注解。 如果你想在特定方法中抑制警告，你应该注释那个方法而不是它的类。 */ @Target({TYPE, FIELD, METHOD, PARAMETER, CONSTRUCTOR, LOCAL_VARIABLE, MODULE}) @Retention(RetentionPolicy.SOURCE) public @interface SuppressWarnings { /** * 编译器在带注释的元素中禁止显示的一组警告。 允许重复名称。 名称的第二次和连续出现将被忽略。 * 无法识别的警告名称的存在不是错误：编译器必须忽略它们无法识别的任何警告名称。 * 但是，如果注释包含无法识别的警告名称，它们可以自由发出警告。 * 字符串“unchecked”用于抑制未经检查的警告。 * 编译器供应商应记录他们支持的附加警告名称以及此注释类型。 * 鼓励他们合作以确保相同的名称在多个编译器中工作。 */ String[] value(); } \"]},\"40\":{\"h\":\"可选值\",\"t\":[\"关键字\",\"用途\",\"all\",\"抑制所有警告\",\"boxing\",\"抑制与装箱/拆箱操作相关的警告\",\"cast\",\"抑制与转换操作相关的警告\",\"dep-ann\",\"抑制与弃用注释相关的警告\",\"deprecation\",\"抑制与弃用相关的警告\",\"fallthrough\",\"抑制与 switch 语句中缺少中断相关的警告\",\"finally\",\"抑制相对于 finally 块不返回的警告\",\"hiding\",\"抑制与隐藏变量的局部变量相关的警告\",\"incomplete-switch\",\"抑制与 switch 语句中缺失条目相关的警告（枚举大小写）\",\"nls\",\"抑制与非 nls 字符串文字相关的警告\",\"null\",\"抑制与空分析相关的警告\",\"rawtypes\",\"在类参数上使用泛型时抑制与非特定类型相关的警告\",\"restriction\",\"抑制与使用不鼓励或禁止的引用有关的警告\",\"serial\",\"抑制与可序列化类的缺少 serialVersionUID 字段相关的警告\",\"static-access\",\"抑制与不正确的静态访问相关的警告\",\"synthetic-access\",\"抑制与来自内部类的未优化访问相关的警告\",\"unchecked\",\"抑制与未经检查的操作相关的警告\",\"unqualified-field-access\",\"抑制与不合格的字段访问相关的警告\",\"unused\",\"抑制与未使用代码相关的警告\"]},\"41\":{\"c\":[\"Java\"]},\"42\":{\"c\":[\"JDK\"]},\"43\":{\"h\":\"JDK1.8的新特性及在项目中的一些应用\"},\"44\":{\"h\":\"\",\"t\":[\"从我们将项目的jdk版本更新至1.8后,到目前为止已经有很长时间了.但现在的编程思想还是基于jdk1.6的路子.其实,可以通过一些jdk8的新特性所折射出的思维和工具类来改变我们对编程方式的改变.\",\"衡量一个高级编程语言的实用性有很多方面.但最基本的无外乎这几点,编程思想,集合机制,垃圾回收机制,异常机制,多线程机制等等.在CPU多核化的当下,串并行流机制也成为衡量的指标之一.如何使用并行技术在多核CPU中来降低程序的执行时间,也将成为我们优化代码效率一个事倍功半的思路. 3. 就拿我们朝夕相处的Java来说,在对jdk5使用了这么多年以来.在编程的过程中,也发现了一些jdk5的局限性.就拿java引以为傲的OOP来说.它确实是一个很高级的思维方式,在应对业务场景复杂度提高和降低开发门槛上有很大的优越性.但他对某些业务场景简单的应用或单一功能上的表现却显得有点臃肿.举个例子,在我接触的大部分公司中都不是太热衷于使用Spring JPA或Herbinate等OOP思维的ORM框架,反倒更喜欢用Mybatis这种需要直接操作过程语言SQL这样的ORM.他们大多数的理由是Herbinate对于优化的成本偏高.而直接操作SQL的成本低.其实,这就侧面说明了一个问题,在某些方面上我们还是愿意使用POP思维进行编程.当然,造成这个结果的还有一部分原因是使用的是关系数据库.函数式编程和面向对象编程有机的结合在一起才能更好的以敏捷开发的方式来实现业务逻辑. 4. NullPointException,程序员最亲切的异常.也是最头疼的异常.没有之一.相较于C语言,几乎所有的高级编程语言都对指针的概念进行尽可能的模糊.但基于堆栈式的存储结构来说,空指针是我们永远也绕不开的一个痛点. 5. 针对以上的这些问题,jdk8相较于jdk5给了我们一些不敢说完美的解决方案,但还是能说,尚可.\"]},\"45\":{\"h\":\"\",\"t\":[\"JDK8新特性;\",\"OptionalAPI;\",\"Date/TimeAPI;\",\"StreamAPI;\",\"Lambda表达式;\",\"双冒号语法;\",\"defalut关键字;\"]},\"46\":{\"h\":\"\"},\"47\":{\"h\":\"JDK8 部分新特性\",\"t\":[\"Nashorn JavaScript引擎 Java 8提供了一个新的Nashorn JavaScript引擎，它允许我们在JVM上运行特定的JS应用。\",\"default关键字 一直以来java的以\\\"单继承多实现\\\" 的方式来诠释面向对象的.但在我们实际操作的过程中,单继承的局限性越来越大.举个例子,我们有如下业务结构,物体类中有一个已实现的getColor方法,车类中有一个已实现的run方法.而货车类要直接继承下这两个方法,但在之前的jdk中java不允许多继承.如果把物体类和车类写成接口的话,对于货车类而言就要自己去实现这两个方法.所以,这个结构在jdk8前是不可能实现的.现在jdk8提供了一个default关键字,支持我们在接口中定义实现.这样的话,就算我们把物体和车定义成接口.货车类也不需要关心这两个方法的实现.\",\"Optional空值包装 空指针异常,一直以来都是程序员最头疼的一个点,总觉得它无处不在.在应用系统中空指针异常本应是业务缺陷的一种体现.但人非圣贤怎可能察觉所有的问题.但我们又不希望这种错误体现在用户层面,体验感极差.基于这样的诉求,我们尝试使用一种机制使程序在出现空指针的时候能够出现一个备选方案来解决这个问题.而jdk8中的Optional类就是这个机制的体现.首先,我们来看看这个类的定义:\",\"A container object which may or may not contain a non-null value. If a value is present, isPresent() will return true and get() will return the value.Additional methods that depend on the presence or absence of a contained value are provided, such as orElse() (return a default value if value not present) and ifPresent() (execute a block of code if the value is present). 翻译:可能包含或不包含非空值的容器对象。如果存在值，isPresent()将返回true，get() 将返回该值。提供了依赖于包含值的存在或不存在的其他方法，例如orelse()(如果值不存在，则返回默认值)和ifPresent()( 如果值存在，则执行代码块).\",\"// 创建容器,创建一个空容器 Optional<SpBaseDto> opt = Optional.empty(); // 创建容器,根据对象创建容器 //of()和ofNullable()的功能一致,区别是当dto为空时,of()会抛出空指针 SpBaseDto dto = new SpBaseDto(); opt = Optional.of(dto); opt = Optional.ofNullable(dto); // 访问容器中的对象 dto = opt.get(); // get方法在容器类对象为空的时候,会抛出一个NoSuchElementException. //所以,我们可以在调用get前使用ifPresent()校验是否为空. boolean isP = opt.isPresent(); // 当容器中数据不为空时执行代码(后续我们可以使用函数指针替代匿名内部类) opt.ifPresent(new Consumer<SpBaseDto>(){ @Override public void accept(SpBaseDto dto){ //Do Something } }); // 数据过滤,当符合定义的过滤规则或容器内的数据为空时,返回当前对象. // 否则,返回一个空的容器. opt = opt.filter(new Predicate<SpBaseDto>(){ @Override public boolean test(SpBaseDto dto){ //Do SomeThing } }); // 数据操作,返回值为你在内部类中返回的对象加工而成的容器 opt = opt.map(new Function<SpBaseDto,SpBaseDto>(){ @Override public apply(SpBaseDto dto){ //Do SomeThing return dto; } }); // 当数据容器为空时,将调用orElse()覆盖容器内的对象 dto = opt.orElse(new SpBaseDto()); // orElseGet(),当容器内对象不为空时,返回对象. // 否则运行内部类并返回内部类的return. dto = opt.orElseGet(new Supplier<SpBaseDto>(){ @Override public SpBaseDto get(){ //Do SomeThing } }); // orElseThrow,当容器内对象不为空时,返回对象. // 否则运行内部类并返回内部类的return.内部类必须返回异常或Error dto = opt.orElseThrow(new Supplier<Throwable>(){ @Override public Throwable get(){ //Do SomeThing } }); // 场景模拟 SpBaseDto dto = new SpBaseDto(); Optional<SpBaseDto> opt = Optional.ofNullable(dto); //Demo1:断言空指针 Optional.ofNullable(dto).orElseThrow(new Supplier<Throwable>(){ @Override public Throwable get(){ //Do SomeThing return new RunTimeException(); } }); // Demo2:数据校验过滤 opt = opt.filter(new Predicate<SpBaseDto>(){ @Override public boolean test(SpBaseDto dto){ //Do SomeThing return true; } }); // Demo3:数据加工 opt = opt.map(new Function<SpBaseDto,SpBaseDto>(){ @Override public apply(SpBaseDto dto){ //Do SomeThing return new Object(); } }); \",\"Date/TimeAPI jdk8在开始研究Java 8日期/时间API之前，让我们先来看一下为什么我们需要这样一个新的API。在Java中，现有的与日期和时间相关的类存在诸多问题，其中包括如下这几个方面:\",\"Java的日期/时间类的定义并不一致，在java.util和java.sql的包中都有日期类，此外用于格式化和解析的类在java.text包中定义。\",\"java.util.Date同时包含日期和时间，而java.sql.Date仅包含日期，将其纳入java.sql包并不合理。另外这两个类都有相同的名字，这本身就是一个非常糟糕的设计。\",\"对于时间、时间戳、格式化以及解析，并没有一些明确定义的类。对于格式化和解析的需求，我们有java.text.DateFormat抽象类，但通常情况下，SimpleDateFormat类被用于此类需求。\",\"所有的日期类都是可变的，因此他们都不是线程安全的，这是Java日期类最大的问题之一。\",\"日期类并不提供国际化，没有时区支持，因此Java引入了java.util.Calendar和java.util.TimeZone类，但他们同样存在上述所有的问题\",\"JDK8以后日期和时间类中包含了一些新的成员: LocalDate,LocalTime,Instant,Dyration以及Period这些.他们均来源自java.time包下.JDK8中的日期API是JSR-310的实现,并且是工作在ISO-8601日历体系基础上的,当然我们也可以在非ISO的日历上.新的日期包如下所示:\",\"ava.time包：JDK8中的基础包，所有常用的基础类都是这个包的一部分，如LocalDate，LocalTime，LocalDateTime等等，所有这些类都是不可变且线程安全的；\",\"java.time.chrono包：这个包为非ISO的日历系统定义了一些API，我们可以在借助这个包中的一些类扩展我们自己的日历系统；\",\"java.time.format包：这个包很明显了，格式化和解析日期时间对象，一般java.time包中的类都差不多能满足我们的需求了，如果有需要，可以调用这个包下的类自定义解析方式；\",\"java.time.temporal包：这个包很有意思，封装了一些获取某个特定日期和时间的接口，比如某月的第一天或最后一天，并且这些方法都是属于特别好认的方法。\",\"java.time.zone包：这个包就是时区相关的类了。\",\"// 获取当前日期 now = \\\"2018-01-01\\\" String now = LocalDate.now().toString; // 根据年月日,构建时间对象 LocalDate local = LocalDate.of(2018,1,1); local = LocalDate.parse(2018-01-01); // 获取本月第一天,本月第N天,本月最后一天,本年第N天, LocalDate local = LocalDate.now().with(TemporalAdjusters.firstDayOfMonth()); local = LocalDate.now().withDayOfMonth(n); local = LocalDate.now().with(TemporalAdjusters.lastDayOfMonth()); local = localDate.withDayOfYear(n); // 后N天,前N天 LocalDate local = localDate.plusDays(n); local = localDate.minusDays(n); // 计算两个日期间的天数,周数,月数,年数 LocalDate now = LocalDate.now(); LocalDate local = LocalDate.of(2018,1,1); long a = now.until(local,ChronoUnit.DAYS); a = now.until(local,ChronoUnit.WEEKS); a = now.until(local,ChronoUnit.MONTHS); a = now.until(local,ChronoUnit.YEARS); // 获取当前时间 now = \\\"18:01:01.001\\\" String now = LocalTime.now().toString(); // 构建时间 LocalTime time = LocalTime.of(12, 15, 30); time = LocalTime.parse(\\\"12:15:30\\\"); //获取当前时间，不包含毫秒数 time = time.withNano(0) // 获取当前日期与时间 LocalDateTime localDateTime = LocalDateTime.now(); localDateTime = LocalDateTime.of(LocalDate.now(), LocalTime.now()); localDateTime = LocalDateTime.of(2018, 01, 29, 19, 23, 13); // 格式化打印 String formatter = DateTimeFormatter.ofPattern(\\\"yyyy/MM/dd\\\").format(localDateTime); // 计算类,计算两个日期的差 Period period = Period.between(localDate, localDate1); String days = period.getDays(); String week = period.getWeeks(); String month,year ... LocalDateTime oldDate = LocalDateTime.of(2017, Month.AUGUST, 31, 10, 20, 55); LocalDateTime newDate = LocalDateTime.of(2018, Month.NOVEMBER, 9, 10, 21, 56); long years = ChronoUnit.YEARS.between(oldDate, newDate); long months = ChronoUnit.MONTHS.between(oldDate, newDate); long weeks = ChronoUnit.WEEKS.between(oldDate, newDate); long days = ChronoUnit.DAYS.between(oldDate, newDate); long hours = ChronoUnit.HOURS.between(oldDate, newDate); long minutes = ChronoUnit.MINUTES.between(oldDate, newDate); long seconds = ChronoUnit.SECONDS.between(oldDate, newDate); long milis = ChronoUnit.MILLIS.between(oldDate, newDate); long nano = ChronoUnit.NANOS.between(oldDate, newDate); // 计算类,计算两个时间的秒数差 PS这个方法的两个参数中必须有秒,否则会UnsupportedTemporalTypeException LocalDateTime localDate1 = LocalDate.of(2018, 02, 28,0,0,0); LocalDateTime localDate2 = LocalDate.of(2018, 02, 27,0,0,0); Duration duration = Duration.between(localDate1, localDate2); String seconds = duration.getSeconds(); // 时区,默认时区 Clock systemDefaultClock = Clock.systemDefaultZone(); String time = LocalDateTime.now(systemDefaultClock).toString(); // 时区,芝加哥 Clock systemDefaultClock = Clock.system(ZoneId.of(ZoneId.SHORT_IDS.get(\\\"CST\\\"))); String time = LocalDateTime.now(systemDefaultClock).toString(); Date date = new Date(); // Date -> LocalDateTime LocalDateTime localDateTime = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime(); localDateTime = LocalDateTime.ofInstant(date.toInstant(), ZoneId.systemDefault()); // Date -> LocalDate LocalDate localDate = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate(); // Date -> LocalTime LocalTime localTime = date.toInstant().atZone(ZoneId.systemDefault()).toLocalTime(); // LocalDate -> Date date = Date.from(localDateTime.atZone(ZoneId.systemDefault()).toInstant()); date = Date.from(localDate.atStartOfDay(ZoneId.systemDefault()).toInstant()); // 其他 Year.now(); Month.now(); \",\"Lambda表达式\",\"我们在学习C语言的时候,都听说过一个名词\\\"函数指针\\\" ,本质上就是内存中方法区内方法地址在栈中的一个指向.像java一样的高级编程语言都在尽可能的模糊指针的概念,就更别说方法区的指针了.当然,这也和OOP思想背道而驰.但是,在编程到达一定程度以后,我们其实还是比较喜欢用底层些的东西.虽然这样风险,成本都会提升会很大,只是他带来的便捷却终是让我们觉得值得铤而走险.而在java中,那帮写jdk的Coder就使用了一种别的途径来实现了这个我们朝思暮想的功能.\",\"虽然看起来很先进,其实Lambda表达式的本质还只是一颗语法糖,有编译器推断并帮助你转换包装为正常的代码.因此我们可以使用更少的代码来实现同样的功能.不过,对于程序员而言,这也带来了一个问题,那就是在逻辑相同的代码中越简洁也就意味着越难懂.这也许算是一个怪圈吧,每个程序员都希望自己的代码即简洁又易懂. 3. 言归正传.既然是语法糖,也就意味着在没改变虚拟机的情况下,编译器干了原来该我们干的活.那具体编译器帮我们干了什么呢?看下面的两端代码.\",\"// 第一段,Lambda表达式.这是一个最简单的Lambda表达式 Arrays.asList(\\\"1\\\",\\\"2\\\").forEach((a)->{ a.toString(); }); // 现在,我们来看看List的父类Iterable中看看forEach()源码是怎么定义的,居然可以传入一段代码块; default void forEach(Consumer<? super T> action) { Objects.requireNonNull(action); for (T t : this) { action.accept(t); } } // 很矛盾,形式参数明明是一个接口类型,为什么入参却是代码块. // 从这段代码中,我们看到了方法接收一个Consumer接口. // 并在类中调用了接口的accept()函数,那我们再看看Consumer接口. @FunctionalInterface public interface Consumer<T> { void accept(T t); default Consumer<T> andThen(Consumer<? super T> after) { Objects.requireNonNull(after); return (T t) -> { accept(t); after.accept(t); }; } } // 从Consumer接口的源码中我们看到了它也就定义了一个且只有一个抽象方法, // 有且只有一个抽象方法,这是这个接口的重点. // 等等,如果这只是一个接口的话,我们岂不是可以通过匿名内部类的方式实现调用? // 就像,下面这样. Arrays.asList(\\\"1\\\",\\\"2\\\").forEach(new Consumer<T>(){ public void accept(T a){ a.toString(); } }); // 没错,这样也是可以的. // 现在,我们知道编译器在在见到Lambda后,帮助我们做了些什么吧! // 就是把Lambda代码块转换成了上面这段包含了匿名内部类的代码. // 我们都知道,接口中是定义多个抽象方法的. // 到这里,也许,有的人会问了.那编译器是怎么知道我的Lambda代码块是 // 实现哪个抽象函数的? // 我们再回去看看这个接口的源码,发现他有一个标签修饰 // @FunctionalInterface 我们看看它的源码 @Documented @Retention(RetentionPolicy.RUNTIME) @Target(ElementType.TYPE) public @interface FunctionalInterface {} // 从上面的代码发现这是一个运行时标签,接口的介绍我就不粘贴了. // 大意是,这个标签的作用是告诉编译器,这个标签修饰的接口 // 只能有一个抽象方法,否则报错. // 返回来,还记得我们上面说的吗?这个接口中有且只有一个抽象方法. // 编译器就是这么找到Lambda表达式要去实现哪个方法. // 好了,到这里.我们应该就知道了Lambda其实就这么简单. // 既然知道原理了,我们先来看看JDK为我们提供了哪些像Consumer一样的接口 // Consumer 接收一个参数,无返回. // Function 接收一个参数,返回一个参数. // Predicate 接收一个参数,返回一个布尔. // Supplier 无接收参数,返回一个参数. // 上面列举出来的四个典型的接口均来自java.util.function包下 // 这个包下还有很多定义好的接口,在这里就不一一列举了. // 接下来,我们就又要问了,这些定义好的接口.不都把入参和出参的个数都定义好了. // 举个例子,那如果我有一个需要六个入参,且返回一个Map出参的话,怎么办? // 那我们就自己写接口定义吧. // 第一部分,定义接口 @FunctionalInterface public interface MyLambda<A,B,C,D,E,F,G> { G run(A a,B b,C c,D d,E e,F f); } // 第二部分,定义生产者.类似于List中的forEach()函数 public G go(MyLambda<A,B,C,D,E,F,G extends Map> tag){ //创建 a,b,c,d,e,f G g = tag.run(a,b,c,d,e,f); return g; } // 第三部分,定义消费者. obj.go((a,b,c,d,e,f)->{ //操作a,b,c,d,e,f,创建g retrun g; }); \",\"双冒号语法及行为对象化 上面的内容,我们聊了聊jdk8新引入的函数指针(Lambda)相关操作,但这些都是基于代码块的.有时候,我们希望将我们已经在类中的定义好的函数做为Lambda式实参.难不成我还得再写一遍?\",\"当然不用,这个时候就需要我们的::(双冒号语法)了.\",\"// 很多时候,我们在工具类中写了工具方法. // 而在某些场景下我们可能需要使用这些工具类, // 想当然,咱们都会这么写吧? obj.stream().filter((e) -> StringUtils.isNull(e)); // 这不相当于,我写了一个代码块实现后,又在代码块中调用工具类? // 如果,有一种方式能让我们直接将已经定义好的isNull()函数 // 直接包装成代码块实现就好了. 看下面代码. obj.stream().filter(StringUtils::isNull); // 完美解决. // 那我们现在看看是什么原理吧.如果这么写,我们应该就看懂了. Function<String,boolean> function = StringUtils::isNull; obj.stream().filter(predicate); // Predicate接口,我们上面说过是一个接收一个参数,返回一个参数的接口. // 这就是将isNull()包装成了Predicate接口的匿名实现. // 而在filter中调用这个接口的实现. // java中有一种语法叫双冒号语法,他允许将我们把已经定义在类中的函数 // 包装成Lambda式的匿名实现. // 接下来我们说说这个 :: 可以帮我们包装哪些函数 // 构造器 Supplier`<Object>` obj = Object::new; // 有参构造器 Bifunction 是一个接收两个参数,返回一个参数. BiFunction<String,String,Dic> dic = Dic::new; Dic d = dic.apply(\\\"key\\\",\\\"value\\\"); // 静态方法,如上 // 非静态方法 BiFunction<Dic,String,String> function = Did::getValue; String value = function.apply(new Dic(),\\\"key\\\"); // 从上面的代码,我们可以看出::冒号语法 // 可以将我们常用的方法均包装成Lambda. // 我们看的可能有点闷,参数都是怎么对应的啊. // 现在我们一一说明.其实java中的方法本质上只有两种静态和非静态 // 构造器本质上也是一个静态方法嘛,这我们都学过. // 我们想说静态方法,在定义用于Lambda的接口时,有一个不成文的规定 // 这个规矩,及时不遵守也没事.但最好遵守.就比如驼峰命名法. // 言归正传,在官方定义在java.util.function包下的接口. // 但凡有返回值且是对象的,返回值的类型都是通过最后一个泛型来定义的. // 所以,我们在使用::定义静态方法时, // 第一步,将入参+出参个数想加.void表示0; // 第二步,找一个(或自己写一个)和加出的和一致的Lambda接口. // 第三步,在声明定义这个接口的泛型时,先将入参按顺序写入. // 第四步,如果有出参,就将出参写在最后. // 第五步,调用接口中唯一的方法. // 我们再来说说非静态方法, // 静态和非静态最大的区别就在于方法中有无this关键字. // 如果我们解决了this关键字的指向,那非静态方法也就不特殊了. // 第一步,将入参+出参个数想加.void表示0.之后再加1(this); // 第二步,找一个(或自己写一个)和加出的和一致的Lambda接口. // 第三步,在声明定义这个接口的泛型时, // 先将第一个参数写成一个实例对象(this),然后入参按顺序写入. // 第四步,如果有出参,就将出参写在最后. // 第五步,调用接口中唯一的方法. // 其实,非静态函数还可以这么包装,但都是大同小异. Dic dic = new Dic(); Function<String,String> fx = dic::getValue; String value = fx.apply(\\\"key\\\"); \",\"Stream数据流操作\",\"Stream是Java8的一大亮点,没有之一.它与java.io包里的InputStream和OutputStream是完全不同的概念。是对容器对象功能的增强，它专注于对容器对象进行各种非常便利、高效的 聚合操作（aggregate operation）或者大批量数据操作。Stream API借助于同样新出现的Lambda表达式，极大的提高编程效率和程序可读性。同时，它提供串行和并行两种模式进行汇聚操作，并发模式能够充分利用多核处理器的优势，使用fork/join并行方式来拆分任务和加速处理过程。所以说，Java8中首次出现的 java.util.stream是一个函数式语言+多核时代综合影响的产物。\",\"在当今这个数据大爆炸的时代，在数据来源多样化、数据海量化的今天，很多时候不得不脱离 RDBMS，或者以底层返回的数据为基础进行更上层的数据统计。而Java的集合API中，仅仅有极少量的辅助型方法，更多的时候是程序员需要用Iterator来遍历集合，完成相关的聚合应用逻辑，这是一种远不够高效、且笨拙的方法。\",\"Stream不是集合元素，它不是数据结构并不保存数据，它是有关算法和计算的，它更像一个高级版本的Iterator。原始版本的Iterator，用户只能显式地一个一个遍历元素并对其执行某些操作；高级版本的Stream，用户只要给出需要对其包含的元素执行什么操作，比如，“过滤掉长度大于 10 的字符串”、“获取每个字符串的首字母”等，Stream会隐式地在内部进行遍历，做出相应的数据转换。Stream就如同一个迭代器（Iterator），单向，不可往复，数据只能遍历一次，遍历过一次后即用尽了，就好比流水从面前流过，一去不复返。 4. 而和迭代器又不同的是，Stream可以并行化操作，迭代器只能命令式地、串行化操作。顾名思义，当使用串行方式去遍历时，每个item读完后再读下一个item。而使用并行去遍历时，数据会被分成多个段，其中每一个都在不同的线程中处理，然后将结果一起输出。Stream的并行操作依赖于Java7中引入的Fork/Join框架（JSR166y）来拆分任务和加速处理过程。 5. 简单说，对Stream的使用就是实现一个filter-map-reduce过程，产生一个最终结果，或者导致一个副作用（side effect）.Stream的几大特点: ***Stream不会存储元素;Stream不会改变源对象，相反他们会返回一个持有结果的新的Stream;Stream操作是延迟执行的，这意味着他们等到需要结果的时候才会执行（惰性求值）;\",\"// 串行流创建 Stream<Integer> s = new ArrayList<Integer>().stream(); Integer[] nums = new Integer[10]; Stream<Integer> stream1 = Arrays.stream(nums); Stream<Integer> stream = Stream.of(1,2,3,4,5,6); // 无限流 generate不是一次对每个新生成的值应用函数 Stream<Integer> stream3 = Stream.iterate(0, (x) -> x + 1); Stream<Integer> stream = Stream.generate(() -> 1); // 其他方式 String str=\\\"1234645\\\"; IntStream stream = str.chars(); // Stream流中的方法 // 忽略流中的前几个元素 stream.skip(long); // 忽略流中的后几个元素 stream.limit(long); // 过滤流中的数据,生成一个新的流,新生成的流中的数据是 // 原流中符合要求的. stream.filter(x -> x>0); // 转换集合中的每一个元素,根据Lambda返回的值. stream.map(x -> x++); // 将集合内元素进行聚合操作,返回一个值. stream.reduce(); // 将流中的数据打包. stream.collect(Collectors.toList()); \"]},\"48\":{\"h\":\"写在最后\",\"t\":[\"从前几年开始,java的更新就已经进入了快车道. 每一个版本的更新都或多或少有一些新的编程思想在里面.就现状而言,咱们已经落伍了.\"]},\"49\":{\"c\":[\"Java\"]},\"50\":{\"c\":[\"JDK\",\"代码片段\"]},\"51\":{\"h\":\"Java虚拟机类加载过程\",\"t\":[\"Java虚拟机类加载过程\"]},\"52\":{\"h\":\"loadClass(): 对应加载阶段\"},\"53\":{\"h\":\"根据类名获取锁对象, 并通过synchronized加锁.\",\"t\":[\"这个加锁操作保证了只会有一个线程对当前类进行加载, 解决了多线程重复加载的问题.\"]},\"54\":{\"h\":\"findLoadedClass(): 在JVM方法区找一下是否存在当前Class对象并返回.\"},\"55\":{\"h\":\"checkName(): 查验类名是否符合规范\",\"t\":[\"其实就是看这个字符串是否符合java类名命名规范.\"]},\"56\":{\"h\":\"findLoadedClass0(): native函数, 从方法区查验当前类是否存在.\"},\"57\":{\"h\":\"如果上一步没找到Class类\"},\"58\":{\"h\":\"记录当前时间\"},\"59\":{\"h\":\"查看是否设置了父加载器\"},\"60\":{\"h\":\"找到了, 调用父加载器的loadClass()\",\"t\":[\"这一步也保证了类的单一加载器加载, 也保障了类的静态代码块有且仅运行一次.\",\"这一步是双亲委派实现的原理.\"]},\"61\":{\"h\":\"findBootstrapClassOrNull(): 没找到, 尝试调用 BootstrampClassLoader加载当前类.\"},\"62\":{\"h\":\"checkName(): 校验名称是否合法, 不合法则返回.\"},\"63\":{\"h\":\"findBootstrapClass(): native函数, 通过 BootstrapClassLoader加载类.\"},\"64\":{\"h\":\"如果上一步还是没找到.\"},\"65\":{\"h\":\"再次记录当前时间.\"},\"66\":{\"h\":\"调用当前类加载器的findClass()获取类.\"},\"67\":{\"h\":\"记录类加载器指标\"},\"68\":{\"h\":\"记录去父加载器中查找的耗时\"},\"69\":{\"h\":\"记录加载器开始查找时间\"},\"70\":{\"h\":\"记录加载类找到的类个数.\"},\"71\":{\"h\":\"resolveClass(): 如果设置需要解析, 则校验Class对象.\",\"t\":[\"就是看一下这个类是否还是空,是则抛出空指针异常.\"]},\"72\":{\"h\":\"defineClass(): 对应链接阶段(验证, 准备, 解析)\"},\"73\":{\"h\":\"preDefineClass(): 定义类前的处理逻辑(确定保护域)\"},\"74\":{\"h\":\"checkName(): 检查类名\"},\"75\":{\"h\":\"校验类名不以\\\"java.\\\"开头,且不是PlatformClassLoader(这个类在jdk8前叫ExtClassLoader)\",\"t\":[\"否则抛出安全异常\"]},\"76\":{\"h\":\"如果保护域对象为空, 则赋值为默认保护域.\"},\"77\":{\"h\":\"checkCerts(): 认证当前类所属的包是否在签名内.否则抛出安全异常\"},\"78\":{\"h\":\"defineClassSourceLocation(): 定义类资源位置\",\"t\":[\"从ProtectionDomain的CodeSource中获取位置信息.\"]},\"79\":{\"h\":\"defineClass1(): native函数, 将二进制数组转换为一个Class对象\"},\"80\":{\"h\":\"验证(可以通过虚拟机关闭验证阶段以加快类的加载. 但不建议这么做. 折中的方法可以让虚拟机预热类)\"},\"81\":{\"h\":\"文件格式验证\",\"t\":[\"魔数开头, JVM版本号...\"]},\"82\":{\"h\":\"元数据验证\",\"t\":[\"是否有继承链, 继承是否合法...\"]},\"83\":{\"h\":\"字节码验证\",\"t\":[\"最复杂的部分, 验证指令是否合法, 指针是否合法, 不会对虚拟机造成伤害...\"]},\"84\":{\"h\":\"符号引用验证\",\"t\":[\"将符号引用转换为实际引用(伴随着解析部分),并校验是否合法.\"]},\"85\":{\"h\":\"准备\",\"t\":[\"为类中的静态变量开辟内存空间.\"]},\"86\":{\"h\":\"解析\"},\"87\":{\"h\":\"接口(类)解析\",\"t\":[\"接口在方法区的内存位置信息.\"]},\"88\":{\"h\":\"字段解析\",\"t\":[\"将函数或类中用到的属性的相对偏移量转换出来. 比如, 指向常量池中的实际地址.\"]},\"89\":{\"h\":\"方法解析\",\"t\":[\"就是将类的元信息在方法区内存中的偏移量赋给方法区中的类.供对象后续调用时使用. 这是一个内存地址信息(JVM管理的内存地址)\"]},\"90\":{\"h\":\"初始化(非构造函数)\",\"t\":[\"收集当前类中的静态代码块信息, 并执行.\",\"收集编译器生产的赋值操作后,生成的静态代码.并执行.\"]},\"91\":{\"h\":\"postDefineClass(): 定义类后的处理逻辑\"},\"92\":{\"h\":\"getNamedPackage(): 定义一个命名包,放到当前ClassLoader中, 如果不存在.\"},\"93\":{\"h\":\"如果安全域中的CodeSource中的签名不为空.则将签名放到当前class类中.\",\"t\":[\"setSigners(): native函数.\"]},\"94\":{\"c\":[\"Java\"]},\"95\":{\"c\":[\"JVM\"]},\"96\":{\"h\":\"Java虚拟机内存布局\"},\"97\":{\"h\":\"MarkWord\",\"t\":[\"状态\",\"54位\",\"2位\",\"1位\",\"分代年龄(4位)\",\"是否偏向(1位)\",\"锁标记(2位)\",\"无锁\",\"HashCode(31位,前25位无用.)\",\"无用\",\"分代年龄\",\"0\",\"01\",\"偏向锁\",\"线程ID\",\"epoch\",\"无用\",\"分代年龄\",\"10\",\"轻量级锁\",\"指向持有锁线程的lockRecord的指针(62位)\",\"00\",\"重量级锁\",\"指向monitor的指针(62位)\",\"10\",\"GC标记\",\"CMS过程中用到的标志位(62位)\",\"11\"]},\"98\":{\"c\":[\"Java\"]},\"99\":{\"c\":[\"JDK\"]},\"100\":{\"h\":\"Java位运算符\",\"t\":[\"操作符\",\"实例\",\"等效于\",\"备注\",\"<< 左移\",\"// 8int a = 1 << 3\",\"int a = 1 * 2^3\",\"左移操作相当于 左移数 乘以2的N次幂(正整数, 需要考虑int的最大值)左移操作的本质是将数字转换为二进制,舍弃前N位.向后补N个0;\",\">> 右移\",\"int a = 1 >> 3\",\"``\",\"右移操作的本质是将数字转换为二进制,舍弃后N位,向前补N个0;\",\">>> 无符号右移\",\"``\",\"忽略符号位, 空位补0\",\"``\",\"& 与\",\"// 1int a = 1 & 1// 0int b = 1 & 0// 0int c = 0 & 0\",\"``\",\"与计算是将两个数的二进制表示后进行对位比较,仅当同位都为1时输出1,否则输出0;\",\"或\",\"// 1int a = 1\",\"1// 1int b = 1\",\"^ 位异或\",\"``\",\"二进制表达后,相同位置的数相同为0,相反为1.\",\"``\",\"~ 位非\",\"``\",\"二进制表达后,取反\",\"``\"]},\"101\":{\"c\":[\"Java\"]},\"102\":{\"c\":[\"JDK\"]},\"103\":{\"h\":\"网络通信四层模型\",\"t\":[\"层次名称\",\"单位\",\"功能\",\"协议\",\"网络接口\",\"帧\",\"负责实际数据的传输,对应的OSI参考模型的下两层\",\"HDLC(高级链路控制协议)PPP(点对点协议)SLIP(串行线路接口协议)\",\"网络层\",\"数据段\",\"负责网络间的寻址数据传输,对应OSI参考模型的第三层\",\"IP(国际协议)ICMP(网际控制消息协议)ARP(地址解析协议)RARP(反向地址解析协议)\",\"传输层\",\"报文段\",\"负责提供可靠的传输服务,对应OSI参考模型的第四层\",\"TCP(控制传输协议)UDP(用户数据报文协议)\",\"应用层\",\"负责实现一切与应用程序相关的功能,对应OSI参考模型的上三层\",\"FTP(文件传输协议)HTTP(超文本传输协议)DNS(域名服务器协议)SMTP(简单邮件传输协议)NFS(网络文件系统协议)\"]},\"104\":{\"c\":[\"计算机科学\"]},\"105\":{\"c\":[\"网络通信\"]},\"106\":{\"h\":\"决不能碰的九种人生状态\"},\"107\":{\"h\":\"犹豫不决\",\"t\":[\"比鲁莽更糟糕的是犹豫不决\",\"像墙头草一样摇摆不定的人,无论其他方面多么强大.在生命的竞赛中总是容易被哪些坚定地人挤到一边.雷厉风行难免会犯错,但比什么也不敢做强.\",\"海特·黑德说: \\\"畏惧错误就是毁灭进步\\\"\"]},\"108\":{\"h\":\"拖延\",\"t\":[\"计划很丰满,执行很骨感.\",\"很多时候拖延就是在逃避问题和懒惰. 把横在面前的困难放大,望而却步,抱着能拖一天是一天的心态各种借口逃避.\",\"罗曼·罗兰说: \\\"懒惰是很奇怪的东西,他让你以为那是安逸,是休息,是福气;但实际上它说给你的是无聊,是倦怠,是消沉.\\\"\"]},\"109\":{\"h\":\"三分钟热度\",\"t\":[\"世界上有80%的失败都源于半途而废.\",\"\\\"三分钟热度\\\"的人不过是从来没有体验到坚持做一件事成功后带来的喜悦,因为坚持的过程总是枯燥又充满挫折的,人的天性又是好逸恶劳.\"]},\"110\":{\"h\":\"害怕拒绝\",\"t\":[\"厚重而脆弱的自尊.\",\"大多数时候,我们在人际关系中感受到的\\\"痛\\\",都和\\\"感到被拒绝\\\"有关.\",\"有时候这种拒绝是很明显的,比如爱人突然的离去或者被朋友背叛和疏远.\",\"而有时这种拒绝也可以是很细微的,比如你给了对方一个微笑的眼神,对方却移开了目光;或者你鼓起勇气给对方发了一个微信,对方却过很久才简短回复.\",\"一个能放下自尊去做事情的人,是遵从目标成果导向的人;而把自尊心放在第一位的人,在人际交往做事情的时候,总关注在他人对自己的态度.\",\"所以,一个人越是百无一用的时候,越质量于那些无足轻重的底线与小自尊心.\"]},\"111\":{\"h\":\"自我设限\",\"t\":[\"杀死自己的潜能力.\",\"他们经常这样说:我想做A,但是我怕做不到,因为B,C,D,E等等原因.\",\"他们还没去做之前,就先否定自己,并给自己找一堆不付出努力的理由.\",\"在自己的心里默认一个\\\"高度\\\",这个\\\"心理高度\\\"尝尝暗示自己.这件事情我肯定没办法做好,就做到差不多就可以了.\",\"这种心理暗示可以帮我阻挡任务失败带来的挫败感,暂时维护我的自我价值感.但是,却也剥夺了我\\\"往上再走一步\\\"的成功机会.\",\"拉罗什富科说: \\\"平庸的人总是在抱怨自己不懂的东西.\\\"\"]},\"112\":{\"h\":\"逃避现实\",\"t\":[\"白日梦患者.\",\"经常做白日梦----逃避现实更愿意营造一个属于自己的小世界.\",\"喜欢随心所欲,无拘无束的生活----说白了就是向往游手好闲的生活.\",\"沉迷游戏或是魔幻小说----他们可以引领你走进那个神奇浩繁的世界,让你逃避日常现实生活.\",\"觉得现实世界很残酷----这是逃避现实者的常见特征,在追寻白日梦的时候往往会遭受来自现实生活的打击.\",\"无法面对不确定环境----因为在你营造的白日梦里,你才能找到安全感.\",\"人的悲剧在于眼高手低.大多数人激动时佛挡杀佛,幻想中睥睨天下.日常生活中却没法鼓起勇气和每个周末早上都要拿电钻钻墙的邻居好好谈一谈.\"]},\"113\":{\"h\":\"总找借口\",\"t\":[\"错不在我.\",\"人一旦犯了错,第一反应常常是自我辩护.\",\"喜欢找借口的人,他们都有一个共同的特点:没有强烈的事业心,没有执着的追求,人生没有一个坚定的信念.\",\"所以,遇到压力,遇到困难,他们就不承担,也不想承担;遇到风险,遇到挑战,就退缩.\",\"不承担,要退缩,就迫使他们找借口.因为找借口是最容易办到的事情,这是掩饰自己无知的方法,然后从中寻找自我安慰.\"]},\"114\":{\"h\":\"恐惧\",\"t\":[\"谨小慎微的懦弱.\",\"他们在工作中总会有这样的感受:害怕被领导批评,害怕别人觉得自己无能,害怕被别人知道自己的缺点,在意他人的评价,害怕犯错,害怕自己的付出得不到回报.\",\"我不敢下苦工琢磨自己,怕终于知道自己并非珠玉;然而心中有存着一丝希翼,便又不甘心与瓦砾为伍.其实就是心智的弱小,不愿意面对挫折感.\",\"王朔曾经跟他女儿说: \\\"煲汤比写诗重要,自己的手艺比男人重要,头发和胸和腰和屁股比脸蛋重要,内心强大到混蛋比什么都重要.\\\"\"]},\"115\":{\"h\":\"拒绝学习\",\"t\":[\"不是寂寞,只是不想学习.\",\"学习需要费脑子,自我成长需要不断和自己做斗争,多痛苦啊!\",\"还不如舒舒服服躺在家玩手机看电影,然后等看到同龄人薪资比你高,生活过的比你好时,你又在朋友圈感叹时运不济.\",\"我从未见过,每天从早忙到晚,拖着疲倦的身子回家的人感叹过 空虚寂寞冷.\",\"大多数人的空虚寂寞冷,基本上都是吃饱了没事干闲的.\"]},\"116\":{\"c\":[\"江湖散记\"]},\"117\":{\"c\":[\"生活态度\"]},\"118\":{\"h\":\"\\\"乌合之众\\\" 读后感\"},\"119\":{\"h\":\"群体的普通特征\"},\"120\":{\"h\":\"群体的构成\",\"t\":[\"群体中的个体分散在不同地点\",\"个体自觉让个性消失\",\"感情和思想朝既定方向发展\"]},\"121\":{\"h\":\"普遍特征\",\"t\":[\"群体的智力低于个体\",\"群体受无意识支配\",\"群体易于无畏也易于犯罪\"]},\"122\":{\"h\":\"形成原因\",\"t\":[\"群体间的暗示\",\"行为受本能支配\",\"感情和行为易受感染\"]},\"123\":{\"h\":\"群体的情感及道德观\"},\"124\":{\"h\":\"群体的情感特征\",\"t\":[\"急躁,冲动和易变\",\"易受暗示和轻信\",\"情绪的专张与单纯\",\"偏执,专横和保守\"]},\"125\":{\"h\":\"群体的道德特征\",\"t\":[\"群体中的个体有 \\\"法不责众\\\" 的意识\",\"群体有时比独处时高尚, 有时更低劣.\"]},\"126\":{\"h\":\"群体的观念,推理和想象力\"},\"127\":{\"h\":\"群体的观念\",\"t\":[\"观念只有足够简单才能易于被群体接受.\",\"观念能否影响人与其对错, 崇高与否无关.\"]},\"128\":{\"h\":\"群体的推理能力\",\"t\":[\"群体的推理能力低下\",\"群体不受理性影响\",\"群体接受的相似性只存在于表面\"]},\"129\":{\"h\":\"群体的想象力\",\"t\":[\"群体的想象力极其强大.\",\"群体的形象思维,与逻辑无关\",\"群体容易感动于神奇的事物\"]},\"130\":{\"h\":\"群体的分类\"},\"131\":{\"h\":\"异质性群体\",\"t\":[\"无名称的群体: 如街头群体\",\"有名称的群体: 如议会, 陪审团\"]},\"132\":{\"h\":\"同质性群体\",\"t\":[\"派别: 政治派别, 宗教派别\",\"身份团体: 军人, 僧录,劳工\",\"阶级: 中产阶级, 农民阶级\"]},\"133\":{\"h\":\"所谓的犯罪群体\",\"t\":[\"群体在犯罪时也许并不是心理犯罪\",\"群体行为具有绝对的无意识性\"]},\"134\":{\"h\":\"刑事案件的陪审团\",\"t\":[\"陪审团的判决独立于他们的人员成分.\",\"愿意屈服于威望,更易被说服.\",\"注重情感, 对激情犯罪易表现出宽容.\"]},\"135\":{\"h\":\"选民群体\",\"t\":[\"选民容易被控制\",\"没有逻辑推理能力\",\"没有批判精神, 易怒, 轻信\"]},\"136\":{\"h\":\"议会\",\"t\":[\"领导的权威对议员的影响很大.\",\"议员群体易受暗示, 具有局限性\",\"有着难以改变的意见和易变的意见\"]},\"137\":{\"h\":\"群体的意见和信念\"},\"138\":{\"h\":\"间接成因\",\"t\":[\"种族: 种族的影响至关重要\",\"传统: 传统是种族精神的综合性反映\",\"时间: 信念的建立需要时间, 信念的毁灭也需要时间.\",\"政治与社会制度: 政治与社会制度由民族性质决定\",\"教育: 教育会影响群众的错误理念.\"]},\"139\":{\"h\":\"直接成因\",\"t\":[\"形象, 词语和口号: 词语和口号展现的力量由其所唤起的形象决定.\",\"幻觉: 幻觉存在于所有文明的起源中,相对于真理, 群体更喜欢幻觉\",\"经验: 经验可以让真理在群体心中扎根, 说服群体需要付出经验和代价.\",\"理性: 理性对群体机会没有任何作用, 无意识的情感是影响群体的主要因素.\"]},\"140\":{\"h\":\"群体领袖\",\"t\":[\"特征: 群体都有服从领袖的本能, 只有领袖能够让他们有信仰.\",\"手段: 群体不是思想者,而是行动者. 传染从社会下层向上层传播.\"]},\"141\":{\"h\":\"信念和意见的变化\",\"t\":[\"牢固的信念: 一些最普通的信念是不容易改变的.\",\"多变: 如果群体的意见不是从普通的信念中得来,name它便会容易改变.\"]},\"142\":{\"c\":[\"读书笔记\"]},\"143\":{\"c\":[\"乌合之众\"]},\"144\":{\"h\":\"软件开发设计模式浅谈\"},\"145\":{\"h\":\"设计模式关系\",\"t\":[\"设计模式关系图\"]},\"146\":{\"h\":\"设计模式原则\",\"t\":[\"开闭原则（Open Close Principle）\",\"开闭原则的意思是：对扩展开放，对修改关闭。在程序需要进行拓展的时候，不能去修改原有的代码，实现一个热插拔的效果。简言之，是为了使程序的扩展性好，易于维护和升级。想要达到这样的效果，我们需要使用接口和抽象类，后面的具体设计中我们会提到这点。\",\"里氏代换原则（Liskov Substitution Principle）\",\"里氏代换原则是面向对象设计的基本原则之一。 里氏代换原则中说，任何基类可以出现的地方，子类一定可以出现。LSP 是继承复用的基石，只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。实现开闭原则的关键步骤就是抽象化，而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。\",\"依赖倒转原则（Dependence Inversion Principle）\",\"这个原则是开闭原则的基础，具体内容：针对接口编程，依赖于抽象而不依赖于具体。\",\"接口隔离原则（Interface Segregation Principle）\",\"这个原则的意思是：使用多个隔离的接口，比使用单个接口要好。它还有另外一个意思是：降低类之间的耦合度。由此可见，其实设计模式就是从大型软件架构出发、便于升级和维护的软件设计思想，它强调降低依赖，降低耦合。\",\"迪米特法则，又称最少知道原则（Demeter Principle）\",\"最少知道原则是指：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。\",\"合成复用原则（Composite Reuse Principle）\",\"合成复用原则是指：尽量使用合成/聚合的方式，而不是使用继承。\"]},\"147\":{\"h\":\"设计模式分类\"},\"148\":{\"h\":\"创建类\"},\"149\":{\"h\":\"工厂模式\"},\"150\":{\"h\":\"简单工厂模式\",\"t\":[\"通过工厂来创建使用的对象,而不是使用时自己创建.\"]},\"151\":{\"h\":\"工厂方法模式\",\"t\":[\"对简单工厂模式的一种改良.通过同一个工厂的不同方法创建不同的对象(有点类似于简单工厂模式+模版方法模式的混合运用).\"]},\"152\":{\"h\":\"抽象工厂模式\",\"t\":[\"一种复杂的工厂模式,相当于工厂中仅生产(定义)对象的接口而不生产对象.\"]},\"153\":{\"h\":\"单例模式\",\"t\":[\"工程中一个对象仅存在一个实例.且创建后不允许修改.\"]},\"154\":{\"h\":\"建造者模式\",\"t\":[\"对于多属性(或创建时有逻辑处理)的对象在创建时,将这部分赋值和逻辑代码放到一个对象中,这个对象就叫构造者对象.\"]},\"155\":{\"h\":\"原型模式\",\"t\":[\"能够复制已有对象，而又无需使代码依赖它们所属的类.用于创建重复对象的克隆.\"]},\"156\":{\"h\":\"结构类\"},\"157\":{\"h\":\"适配器模式\",\"t\":[\"通过适配器在新接口中来适配(调用)老接口的逻辑\"]},\"158\":{\"h\":\"外观(门面)模式\",\"t\":[\"一个门面对象封装了自己的多个模块,通过这个门面对象暴露自己的多个模块\"]},\"159\":{\"h\":\"代理模式\",\"t\":[\"在目标组件服务执行前后, 通过代理对象增加目标组件的服务行为.比如说 AOP的实现和本地对象代理远程接口.\"]},\"160\":{\"h\":\"组合模式\",\"t\":[\"主要应用于层级结构数据.用一个类或少数类就可以拼装成一棵树,对父级节点的操作会递归遍历其所有子节点.\"]},\"161\":{\"h\":\"享元模式\",\"t\":[\"通过共享减少对象数量,减少内存占用和提高性能.\"]},\"162\":{\"h\":\"装饰器模式\",\"t\":[\"通过装饰器去增加原组件的功能.\"]},\"163\":{\"h\":\"桥接模式\",\"t\":[\"通过桥接将抽象部分与实现部分解耦.\"]},\"164\":{\"h\":\"行为类\"},\"165\":{\"h\":\"迭代器模式\",\"t\":[\"封装集合迭代逻辑\"]},\"166\":{\"h\":\"模版方法模式\",\"t\":[\"通过模版对象实现共有逻辑\"]},\"167\":{\"h\":\"中介者模式\",\"t\":[\"通过中间件解耦组件间的依赖关系, 比如说消息队列实现的功能.\"]},\"168\":{\"h\":\"观察者模式\",\"t\":[\"组件注册一个观察者,当数据发生改变后通知观察者.由观察者通知第三方.\"]},\"169\":{\"h\":\"命令模式\",\"t\":[\"声明一个命令执行类, 通过修改执行类中的命令类型.在相同的执行函数中实现不同命令逻辑.\"]},\"170\":{\"h\":\"策略模式\",\"t\":[\"声明策略对象, 通过修改策略改变执行动作.\"]},\"171\":{\"h\":\"状态模式\",\"t\":[\"基于面向对象设计,数据的状态有序流转.\"]},\"172\":{\"h\":\"备忘录模式\",\"t\":[\"使用备忘录保存中间数据.\"]},\"173\":{\"h\":\"责任链模式\",\"t\":[\"为一个业务操作创建一条响应其操作的多个组件的有序组合.并可以根据运行时进行动态选择.\"]},\"174\":{\"c\":[\"计算机科学\"]},\"175\":{\"c\":[\"设计模式\"]},\"176\":{\"h\":\"Spring及SpringBoot开发扩展点\",\"t\":[\"Spring及SpringBoot开发扩展点\"]},\"177\":{\"h\":\"ResourceLoader\",\"t\":[\"资源加载器\"]},\"178\":{\"h\":\"BeanDefinitionReader\",\"t\":[\"Bean定义信息读取者\"]},\"179\":{\"h\":\"ClassPathBeanDefinitionScanner\",\"t\":[\"用于扫描bean的定义信息\"]},\"180\":{\"h\":\"ApplicationContextInitializer\",\"t\":[\"用于在Context初始化前对其进行更改\"]},\"181\":{\"h\":\"BeanFactoryPostProcessor\",\"t\":[\"用于对BeanFactory进行修改\"]},\"182\":{\"h\":\"BeanDefinitionRegisterPostProcessor\",\"t\":[\"用于在Bean实例化之前,对BeanDefinition进行更改\"]},\"183\":{\"h\":\"Aware\",\"t\":[\"用于感知Spring中关于容器,对象等组件的行为或属性感知\"]},\"184\":{\"h\":\"BeanPostProcessor\",\"t\":[\"用于在bean初始化后修改bean的行为\"]},\"185\":{\"h\":\"InstantiationAwareBeanPostProcessor\",\"t\":[\"BeanPostProcessor的一个子类,扩展了一些更细粒度的对象生命周期回调\"]},\"186\":{\"h\":\"DisposableBean\",\"t\":[\"扩展对象销毁时的行为\"]},\"187\":{\"h\":\"InitializingBean\",\"t\":[\"扩展对象初始化时的行为\"]},\"188\":{\"h\":\"ApplicationListener\",\"t\":[\"用于监听Spring容器启动和使用过程中产生的事件的监听\"]},\"189\":{\"h\":\"ApplicationRunner(Spring Boot)\",\"t\":[\"Spring 应用启动后回调, 抛出错误会影响应用启动\"]},\"190\":{\"h\":\"SpringApplicationRunListener(Spring Boot)\",\"t\":[\"Spring Application 启动上下文(非ApplicationContext上下文)\"]},\"191\":{\"h\":\"EnvironmentPostProcessor(Spring Boot)\",\"t\":[\"用于对环境变量初始化的后置处理器\"]},\"192\":{\"c\":[\"Java\"]},\"193\":{\"c\":[\"Spring\",\"Spring Boot\",\"开发笔记\"]},\"194\":{\"h\":\"Spring框架refresh()执行流程\",\"t\":[\"Spring框架refresh函数执行流程\"]},\"195\":{\"h\":\"prepareRefresh(): 准备刷新\",\"t\":[\"设置启动时间\",\"容器关闭标示符设置为false\",\"容器可用标示符设置为true\",\"initPropertySources(): 钩子函数, 初始化属性资源,\",\"getEnvironment().validateRequiredProperties(): 验证必要属性必须存在.\",\"清空已有的监听器(如果有的话),并重新从applicationListeners属性中加载\"]},\"196\":{\"h\":\"obtainFreshBeanFactory(): 获取Bean工厂\"},\"197\":{\"h\":\"如果上下文中已经存在Bean工厂,将先销毁.\"},\"198\":{\"h\":\"createBeanFactory(): 创建Bean工厂,使用DefaultListableBeanFactory对象;\"},\"199\":{\"h\":\"customizeBeanFactory(): 自定义设置Bean工厂\",\"t\":[\"是否允许Bean定义覆盖\",\"是否允许循环引用\"]},\"200\":{\"h\":\"loadBeanDefinitions(): 加载Bean定义信息\",\"t\":[\"创建BeanDefinitionReader\",\"配置BeanDefinitionReader,关联上下文\",\"initBeanDefinitionReader(): 初始化这个Reader对象\",\"loadBeanDefinitions(): 加载Bean定义信息\"]},\"201\":{\"h\":\"prepareBeanFactory(): 准备Bean工厂\"},\"202\":{\"h\":\"设置Bean工厂的类加载器\"},\"203\":{\"h\":\"如果不忽略SpEL表达式,则设置StandardBeanExpressionResolver对象用于解析SpEL表达式;\"},\"204\":{\"h\":\"设置属性编辑注册器\"},\"205\":{\"h\":\"添加一个用于Aware感知的PostProcessor\"},\"206\":{\"h\":\"忽略一部分Aware的实现类, 因为这个时候还无法感知这部分动作\",\"t\":[\"EnvironmentAware\",\"EmbeddedValueResolverAware\",\"ResourceLoaderAware\",\"ApplicationEventPublisherAware\",\"MessageSourceAware\",\"ApplicationContextAware\",\"ApplicationStartupAware\"]},\"207\":{\"h\":\"注册一批 可解析依赖项\",\"t\":[\"BeanFactory\",\"ResourceLoader\",\"ApplicationEventPublisher\",\"ApplicationContext\"]},\"208\":{\"h\":\"注册一个用于监听探测的PostProcessor类.\"},\"209\":{\"h\":\"设置 LoadTimeWeaver\"},\"210\":{\"h\":\"注册一批环境变量\",\"t\":[\"ENVIRONMENT_BEAN_NAME\",\"SYSTEM_PROPERTIES_BEAN_NAME\",\"SYSTEM_ENVIRONMENT_BEAN_NAME\",\"APPLICATION_STARTUP_BEAN_NAME\"]},\"211\":{\"h\":\"postProcessBeanFactory(): 钩子函数.通知子容器BeanFactory准备好了\"},\"212\":{\"h\":\"invokeBeanFactoryPostProcessors(): 执行Bean工厂后置处理器\",\"t\":[\"添加LoadTimeWeaverAwareProcessor\",\"添加临时类加载器 ContextTypeMatchClassLoader\"]},\"213\":{\"h\":\"registerBeanPostProcessors(): 注册Bean的后置处理器\",\"t\":[\"添加BeanPostProcessor处理器, 通过BeanPostProcessorChecker\",\"注册支持优先排序的后置处理器\",\"注册不支持排序的后置处理器(所有的)\",\"注册内部后置处理器\",\"添加(处理)内部的监听类型的后置处理器\"]},\"214\":{\"h\":\"initMessageSource(): 初始化消息源\",\"t\":[\"判断当前Bean工厂中是否存在 MESSAGE_SOURCE_BEAN_NAME 对象,如不存在则创建 DelegatingMessageSource对象,并注册进容器.如存在则使用工厂中的消息源对象.\"]},\"215\":{\"h\":\"initApplicationEventMulticaster(): 初始化事件传播器\",\"t\":[\"判断当前Bean工厂中是否存在 APPLICATION_EVENT_MULTICASTER_BEAN_NAME 对象,如存在则使用,不存在则创建一个 SimpleApplicationEventMulticaster 对象,并放入工厂\"]},\"216\":{\"h\":\"onRefresh(): 钩子函数,支持子类对刷新的扩展\"},\"217\":{\"h\":\"registerListeners(): 注册监听\",\"t\":[\"将静态指定的事件监听器逐一添加到事件传播器中.\",\"将动态指定的事件监听器加入时间传播器中.\",\"发布应用早期事件, 这时应用的事件传播器已经就绪...\"]},\"218\":{\"h\":\"finishBeanFactoryInitialization(): 结束BeanFactory初始化,并初始化一些特殊Bean对象.比如非懒加载的Bean.\"},\"219\":{\"h\":\"初始化上下文转换服务.\"},\"220\":{\"h\":\"如果没有指定 标签解析器, 就使用环境中的默认转换器进行转换 getEnvironment().resolvePlaceholders(strVal).\"},\"221\":{\"h\":\"尽早初始化 LoadTimeWeaverAware bean，以便尽早注册其变压器。\"},\"222\":{\"h\":\"设置临时类加载器为null, 停止使用临时类加载器.\"},\"223\":{\"h\":\"freezeConfiguration(): 冻结所有bean定义信息.\",\"t\":[\"设置 冻结 标示符 为true\",\"为 frozenBeanDefinitionNames 赋值\"]},\"224\":{\"h\":\"preInstantiateSingletons(): 初始化非懒加载的bean\"},\"225\":{\"h\":\"重新包装 beanDefinitionNames 属性为一个ArrayList\"},\"226\":{\"h\":\"循环上一步包装的集合, 根据beanName创建bean\"},\"227\":{\"h\":\"getMergedLocalBeanDefinition(): 根据beanName获取本地bean定义信息缓存.\"},\"228\":{\"h\":\"判断获取的BeanDefinition所代表的bean 非抽象类, 是单例, 非懒加载\"},\"229\":{\"h\":\"判断是否为FactoryBean的子类\"},\"230\":{\"h\":\"是则\",\"t\":[\"调用getBean() 获取这个工厂bean的实例, 获取时需要添加前缀 FACTORY_BEAN_PREFIX\",\"判断 上一步获取到的对象是否为FactoryBean的子类实例\",\"判断是否为SmartFactroyBean的子类实例\",\"获取当前FactoryBean是否希望初始化(isEagerInit());\",\"是则, 再次通过getBean加载此对象(本次不再添加前缀)\"]},\"231\":{\"h\":\"非则, 调用 getBean() 创建bean实例\",\"t\":[\"transformedBeanName(): 规范化beanName\",\"getSingleton(): 在单例池中获取当前对象\"]},\"232\":{\"h\":\"循环上上一步创建的集合, 根据beanName获取已经创建好的bean, 并判断bean是否为 SmartInitializingSingleton的子类实例, 是则运行bean的afterSingletonsInstantiated函数.\"},\"233\":{\"h\":\"finishRefresh(): 结束刷新, 并发布结束刷新事件.\"},\"234\":{\"h\":\"clearResourceCaches(): 清空资源缓存\",\"t\":[\"清空 DefaultResourceLoader 中的 resourceCaches 对象\"]},\"235\":{\"h\":\"initLifecycleProcessor(): 初始化生命周期管理\",\"t\":[\"判断Bean工厂中是否存在 LIFECYCLE_PROCESSOR_BEAN_NAME 对象, 不存在则创建一个 DefaultLifecycleProcessor对象;\"]},\"236\":{\"h\":\"getLifecycleProcessor().onRefresh(): 刷新生命周期管理器\",\"t\":[\"startBeans(): 启动bean的生命周期\",\"将 running 标识符设置为 true\"]},\"237\":{\"h\":\"发布上下文刷新事件\",\"t\":[\"通过上下文的 publish函数 发布 ContextRefreshedEvent 对象\"]},\"238\":{\"h\":\"参与 LiveBeansView MBean（如果处于活动状态）\"},\"239\":{\"c\":[\"Java\"]},\"240\":{\"c\":[\"Spring\",\"开发笔记\"]},\"241\":{\"h\":\"SpringBoot框架run()执行流程\",\"t\":[\"SpringBoot框架run函数执行流程\"]},\"242\":{\"h\":\"记录启动时间\"},\"243\":{\"h\":\"createBootstrapContext(): 创建启动上下文\",\"t\":[\"创建一个 DefaultBootstrapContext 对象\",\"执行所有注册的 BootstrapRegistryInitializer 对象\"]},\"244\":{\"h\":\"configureHeadlessProperty(): 配置属性\",\"t\":[\"系统变量 java.awt.headless 如果不存在,则设置成 headless 变量的值. 默认为 true\"]},\"245\":{\"h\":\"getRunListeners(): 获取运行的监听器\",\"t\":[\"创建一个SpringApplicationRunListeners对象, 获取spring.factories中定义的 SpringApplicationRunListener 对象\"]},\"246\":{\"h\":\"监听器 Starting事件\",\"t\":[\"触发运行 SpringApplicationRunListener中定义的 spring.boot.application.starting 事件(starting函数)\"]},\"247\":{\"h\":\"包装启动参数为 DefaultApplicationArguments对象\"},\"248\":{\"h\":\"prepareEnvironment(): 准备环境\"},\"249\":{\"h\":\"getOrCreateEnvironment(): 获取或创建环境\",\"t\":[\"判断当前环境是否为空, 不为空则返回当前环境\",\"判断应用类型, Servlet类型则创建并返回 ApplicationServletEnvironment 实例\",\"判断应用类型, Reactive类型则创建并返回 ApplicationReactiveWebEnvironment实例\",\"判断应用类型, 其他则创建并返回 ApplicationEnvironment实例\"]},\"250\":{\"h\":\"configureEnvironment(): 配置环境\"},\"251\":{\"h\":\"判断 addConversionService 属性, 为真则创建一个 ApplicationConversionService 并加入 env 对象\"},\"252\":{\"h\":\"configurePropertySources(): 配置属性源\",\"t\":[\"判断 defaultProperties 属性是否为空集合,是则将当前环境中的属性源添加合并到 defaultProperties属性中\",\"判断是否存在 启动参数 和 判断 属性源中 是否存在 CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME 的属性\",\"上一步判断如果已经存在命令行属性,就创建一个 CompositePropertySource 实例,合并已有的参数和新加的参数后, 替换原有的属性值.\",\"上一步如果不存在, 就新建一个 SimpleCommandLinePropertySource 实例封装启动参数, 并添加当当前环境的属性源的第一个位置.\"]},\"253\":{\"h\":\"configureProfiles(): 钩子函数, 例如用于通过命令行激活配置文件\"},\"254\":{\"h\":\"ConfigurationPropertySources.attach(): 为环境添加附加源\",\"t\":[\"断言 env 对象 是否是 ConfigurableEnvironment 的子类实现.\",\"从 env 对象中获取 属性源, 从属性源中获取 configurationProperties 的值.\",\"如果上一步获取到的值为空,或 属性源不是可用的数据源. 就通过 SpringConfigurationPropertySources 创建一个 ConfigurationPropertySourcesPropertySource 实例\",\"删除属性源中原来的值,并将新值加进去(添加到第一个位置).\"]},\"255\":{\"h\":\"environmentPrepared(): 监听器 环境就绪事件\"},\"256\":{\"h\":\"DefaultPropertiesPropertySource.moveToEnd(): 移动默认属性\",\"t\":[\"在属性源中获取并删除 defaultProperties 的值;\",\"将上一步获取到的值添加到属性源的末尾;\"]},\"257\":{\"h\":\"断言 是否包含 spring.main.environment-prefix\"},\"258\":{\"h\":\"bindToSpringApplication(): 将环境绑定到SpringApplication\",\"t\":[\"将 属性源 以 spring.main 为name, 绑定到 Binder上\"]},\"259\":{\"h\":\"如果不是自定义的环境, 就创建一个 EnvironmentConverter 对象 将环境转换为 environmentStandardEnvironment, 如果必要\",\"t\":[\"根据 webApplicationType 属性将 env 对象转化为 ApplicationServletEnvironment, ApplicationReactiveWebEnvironment, ApplicationEnvironment之一.\"]},\"260\":{\"h\":\"ConfigurationPropertySources.attach(): 再次为环境添加附加源\",\"t\":[\"同上\"]},\"261\":{\"h\":\"configureIgnoreBeanInfo(): 配置忽略的bean信息\",\"t\":[\"如果环境变量中不存在 spring.beaninfo.ignore 就将其设置为true\"]},\"262\":{\"h\":\"printBanner(): 准备 Banner 信息\",\"t\":[\"判断是否开启了 Banner打印, 关闭则直接返回.\",\"判断是否存在 ResourceLoader 属性, 没有则创建一个 DefaultResourceLoader 实例\",\"创建一个 SpringApplicationBannerPrinter 对象, 根据SpringApplication类中设置banner属性.\",\"判断日志对象是否存在, 存在则使用日志对象打印. 否则通过 System.out 属性打印.\"]},\"263\":{\"h\":\"createApplicationContext(): 创建应用上下文\",\"t\":[\"通过 applicationContextFactory 属性 和 webApplicationType属性 创建 ApplicationContext, Servlet类型创建 AnnotationConfigServletWebServerApplicationContext 实例, Reactive类型创建 AnnotationConfigReactiveWebServerApplicationContext 实例\"]},\"264\":{\"h\":\"设置启动步骤\",\"t\":[\"设置 ApplicationContext 的 applicationStartup 属性为 DefaultApplicationStartup 实例\"]},\"265\":{\"h\":\"prepareContext(): 准备上下文\"},\"266\":{\"h\":\"设置 context 的环境\"},\"267\":{\"h\":\"postProcessApplicationContext(): 应用上下文的后置处理;\",\"t\":[\"如果 beanNameGenerator 属性不为空, 以 org.springframework.context.annotation.internalConfigurationBeanNameGenerator 为 key将其加入BeanFactory;\",\"如果 resourceLoader 属性不为空,且 context 对象为GenericApplicationContext的实例,则将其设置为context对象的ResourceLoader\",\"如果 resourceLoader 属性不为空,且 context 对象为DefaultResourceLoader的实例,则将其的ClassLoader设置为context对象的ClassLoader\",\"如果 addConversionService 属性为真, 则将env对象中的 ConversionService 设置为 BeanFactory的 ConversionService\"]},\"268\":{\"h\":\"applyInitializers(): 执行 初始化回调\",\"t\":[\"执行通过 SpringApplication类的 addInitializers(), setInitializers() 函数添加的 ApplicationContextInitializer实现类\"]},\"269\":{\"h\":\"监听器 上下文就绪事件\"},\"270\":{\"h\":\"DefaultBootstrapContext.close(): 关闭启动上下文\",\"t\":[\"发布 启动上下文 关闭事件\"]},\"271\":{\"h\":\"判断是否打印启动信息, 是则打印 是否主容器 和 配置信息\"},\"272\":{\"h\":\"在BeanFactory中注册 ApplicationArguments(启动参数的封装) 实例,\"},\"273\":{\"h\":\"如果存在 Banner对象, 则注册到 BeanFactory中.\"},\"274\":{\"h\":\"判断如果BeanFactory是AbstractAutowireCapableBeanFactory的实例,则设置允许循环引用为 allowCircularReferences 属性的值\"},\"275\":{\"h\":\"判断如果BeanFactory是 DefaultListableBeanFactory 的实例, 则设置允许Bean定义覆盖为 allowBeanDefinitionOverriding属性的值\"},\"276\":{\"h\":\"判断如果 lazyInitialization 属性的值为true, 为上下文设置一个 LazyInitializationBeanFactoryPostProcessor 实例\"},\"277\":{\"h\":\"为上下文添加一个 PropertySourceOrderingBeanFactoryPostProcessor 实例\"},\"278\":{\"h\":\"getAllSources(): 获取所有资源\",\"t\":[\"获取 primarySources 属性中定义的资源\",\"获取 sources 属性中定义的资源\"]},\"279\":{\"h\":\"断言 上一步获取的资源不得为空.\"},\"280\":{\"h\":\"load(): 加载上上步中获取的资源\",\"t\":[\"创建一个 BeanDefinitionLoader 实例\",\"为 BeanDefinitionLoader 设置 BeanNameGenerator\",\"为 BeanDefinitionLoader 设置 ResourceLoader\",\"为 BeanDefinitionLoader 设置 Environment\",\"load(): 执行加载Bean信息\"]},\"281\":{\"h\":\"监听器 上下文加载完成事件\"},\"282\":{\"h\":\"afterRefresh(): 钩子函数, 用于子类调用扩展\"},\"283\":{\"h\":\"如果开启 打印启动日志.则创建一个 StartupInfoLogger 对象\"},\"284\":{\"h\":\"监听器 启动完成事件\"},\"285\":{\"h\":\"callRunners(): 运行声明的 ApplicationRunner对象的run函数;\",\"t\":[\"获取BeanFactory中的 ApplicationRunner 接口实例\",\"获取BeanFactory中的 CommandLineRunner 接口实例\",\"通过 AnnotationAwareOrderComparator.sort() 函数对上两步中获取到的实例进行排序;\"]},\"286\":{\"h\":\"监听器 读事件\"},\"287\":{\"c\":[\"Java\"]},\"288\":{\"c\":[\"Spring Boot\",\"开发笔记\"]},\"289\":{\"h\":\"科目一 - 驾驶员理论考试\",\"t\":[\"爷爷直行左转爹, 儿子右转掉头孙, 非机行人是祖宗;\",\"路权排序: 非机行人 > 直行 > 左转 > 右转 > 掉头\",\"三有就报警, 三无别碍事.\",\"有人员伤亡, 对事故成因有争议, 有违法行车行为的就报警. 否则可自行解决.\",\"拼装报废超50, 还有乱借车. 2百2千吊驾照;\",\"驾驶拼装, 达到报废标准, 高速超速过50%, 将车辆交于无证人员的. 罚款两百以上两千以下,并吊驾照;\",\"没事别作弊, 驾考两千, 满减也得一千块.\",\"在驾驶证考试中作弊的, 罚款两千. 在满分教育和学法减分中作弊的罚款一千.\",\"组织作弊更可恶, 驾考三五, 满减三二;\",\"驾考组织作弊的, 罚款三倍收益.最高不超过五万元. 满减组织作弊的, 罚款三倍收益.最高不超过二万元.\",\"没进先停车, 进了焊车门;\",\"进入特殊路段(涉水,傍山), 先停车查看. 进入后不得停车.\",\"假1 吊2 撤毒3 醉5 逃罪下辈子;\",\"虚假信息的1年不得再考驾照, 吊销的2年, 撤销和吸毒的3年, 醉酒的5年, 逃逸构成犯罪的终身不得考.\",\"2证2标1牌 少一个就扣车;\",\"驾驶证,行驶证, 年检标,保险标, 机动车号牌. 只有缺这些才能扣车.\",\"车登记 人随意 增驾就核发;\",\"行驶证只能在登记地办理业务, 驾驶证可以任何地点办理业务. 但办增驾只能在核发地.\",\"满9 变3;\",\"证满90天必须更换, 证变30天必须报备;\",\"高逆掉12 高停9 普逆3 普倒掉1 不让3;\",\"高速逆行掉头12分, 停车9分. 普通道路逆行3分, 倒车掉头1分. 不按规定让行3分\",\"逃逸死了12 没死6;\",\"人员轻伤事故中逃逸 6分; 人员死亡事故中逃逸 12分;\",\"没挂好3 没挂9 假的12分;\",\"机动车号牌没按规定挂好扣3分. 没挂,遮挡扣9分. 假的号牌扣12分.\",\"左灯右水, 扇前方后,\",\"方向盘后左操纵杆管灯光,右操纵杆管雨刷. 前车窗是扇形灯标,后车窗是方形灯标.\",\"超速, 超员, 超载\",\"| 超载范围 | 分值 | |---------|----| | 30 以下 | 1 | | 30 - 50 | 3 | | 50 以上 | 6 |\",\"| 超员范围 | 普车 | 7座以上 | 校/公/旅 | |----------|-----|------|-------| | 20 以下 | - | - | 6分 | | 20 - 50 | 3分 | 6分 | 12分 | | 50 - 100 | 6分 | 9分 | 12分 | | 100 以上 | 12分 | 12分 | 12分 |\",\"| 车辆类型 | 超速范围 | 普路 | 高快路 | |-------|---------|----|-----| | 普车 | 20 - 50 | 3分 | 6分 | | | 50 以上 | 6分 | 12分 | | 校/中/危 | 10 - 20 | 1分 | 6分 | | | 20 - 50 | 6分 | 12分 | | | 50 以上 | 9分 | 12分 |\",\"口5 站3 否则就一分 拿不准的都30;\",\"路口等特殊路段不得五十米内停车, 消防站,加油站等不得三十米内停车. 违者罚一分. 车速拿不准的地方都三十.\",\"英文缩写\",\"| 规则 | 单词 | 例子 | |----------------------|-----------------|------------------------------------------| | 以 A 开头的一般与 ”自动” 相关 | Auto | ACC: 自适应巡航AFS: 自适应前大灯AEB: 自适应刹车ALC: 自动变道 | | 以 A 结尾的一般与 ”辅助” 相关 | Assist | EBA: 紧急制动辅助BSA: 盲点辅助 | | 以 W 开头的一般与 “预警” 相关 | Warning | FCW: 前方防碰撞预警 | | 以 E 开头的一般与 “电子” 相关 | Electronic | ETC: 电子收费ESP: 电子稳定EBD: 电子制动力分配 | | 以 BS 开头的一般与 “盲点” 相关 | Blind Spot | BSA: 盲点辅助BSD: 盲点检测 | | 以 T 开头的一般与 “交通” 相关 | Traffic | TMC: 实时交通信息TSR: 交通标志识别 | | 以 S 结尾的一般与 “系统” 相关 | System | ABS: 防抱死系统TCS: 牵引力控制系统GPS: 全球定位系统 | | 包含 L 的一般与 “车道” 相关 | Lane | LDW: 车道偏离预警 | | 包含 CC 的一般与 “巡航” 相关 | Cruise Control | CCS: 定速巡航系统ACC: 自适应巡航 | | 包含 EB 的一般与 “紧急制动” 相关 | Emergency Brake | AEB: 自适应刹车EBA: 紧急制动辅助 |\",\"酒过三巡\",\"三个记分周期内不得有酒驾处理记录.\",\"车有错车承担; 车没错共承担; 人故意车没动;\",\"当与非机行人发生事故时, 即使车没错也得承担至高10%的责任. 除非人事故意的或车就没发动.\",\"雾天高速跑, 二百六十和一百, 一百四十和五十. 五十二十快跑路;\",\"雾天跑高速, 能见度200米 车速60 与前车100米. 能见度100米 车速40 与前车50米. 能见度50米 车速20 尽快驶离高速.\",\"不逃吃三年, 逃了三七年, 逃出人命七年起;\",\"发生交通事故并构成犯罪. 没逃逸的三年以下, 逃逸了的三年以上七年以下, 逃逸致人死亡的七年以上.\",\"高速两道 左边飚一百, 三道左边一百一, 中间就九十. 大车一百就扣分;\",\"高速公路同向两车道, 右侧60 – 100. 左侧100 - 120 三车道及以上的右侧60 – 90, 中间 90 – 110, 左侧 110 – 120. 高速上只能跑一百码.\",\"先看有没线, 无线34, 有线57;\",\"在没有划线的道路行驶, 有人道路最高30 无人道路40. 在划线的道路行驶, 有人道路最高50 无人道路最高70.\"]},\"290\":{\"c\":[\"驾照考试\"]},\"291\":{\"c\":[\"科目一\"]},\"292\":{\"h\":\"科目二 - 场地驾驶技能考试\"},\"293\":{\"h\":\"上车准备\",\"t\":[\"远车门的手开启车门;\",\"关闭发动器自动启停功能;\",\"调节座椅上下位置. 至最高;\",\"调节座椅靠背位置. 至垂直位置;\",\"调节座椅前后位置. 至双手合十垂于方向盘十二点位置手踝处略靠前, 并右腿关节处与方向盘的距离一圈略小;\",\"调整左后视镜左右位置, 使屁股紧贴座椅后背垂直坐于座位上, 至车身占镜子的四分之一;\",\"调整左后视镜上下位置, 使屁股紧贴座椅后背垂直坐于座位上, 将前车窗后下角与左后视镜右上角对齐. 并紧闭左眼可以在后视镜上边缘看到后车门把手末端;\",\"调整右后视镜左右位置. 使屁股紧贴座椅后背垂直坐于座位上, 至车身占镜子的四分之一;\",\"调整右后视镜上下位置, 使屁股紧贴座椅后背垂直坐于座位上, 将前车窗后下角与右后视镜左上角对齐. 并紧闭左眼可以在后视镜上边缘看到后车门把手末端;\",\"扎紧安全带;\"]},\"294\":{\"h\":\"倒车入库\",\"t\":[\"[准备] 将方向盘十二点位置对准库边线左起第二个虚线缺口;\",\"[准备] 将车开至坐于库边线上, 停车;\",\"[右倒库] 挂入倒车挡, 开始右倒库. 车动开始计时(全程需要210秒内完成);\",\"[右倒库] 屁股紧贴座椅, 紧闭左眼, 当库边线内侧与左后视镜裂纹处重合后, 迅速将方向盘向右打满;\",\"[右倒库] 观察右后视镜, 当前门把手接触库口线右侧第一段虚线四分之一处时. 将方向盘向左回半圈;\",\"[右倒库] 观察右后视镜, 当车身与库线平行时. 将方向盘向左回一圈(即回正);\",\"[右倒库] 屁股紧贴座椅, 紧闭左眼, 观察左后视镜. 当库口延长线与左后视镜裂纹处重合后. 踩刹车停车;\",\"[左出库] 挂入前进挡, 开始左出库;\",\"[左出库] 当车头左凸起棱与库边线重合后, 迅速将方向盘左打死;\",\"[左出库] 观察车前远方, 车正后回正方向.\",\"[左出库] 观察库边线, 当坐于库边线时. 踩刹车停车;\",\"[左倒库] 挂入倒车挡, 开始左倒库;\",\"[左倒库] 屁股紧贴座椅, 紧闭左眼, 当库边线内侧与左后视镜裂纹处重合后, 迅速将方向盘向左打满;\",\"[左倒库] 观察左后视镜, 当前车门把手接触库口线左侧第一段虚线四分之一处时, 将方向盘向右回半圈;\",\"[左倒库] 观察左后视镜, 当车身与库线平行时. 将方向盘向右回一圈(即回正);\",\"[左倒库] 屁股紧贴座椅, 紧闭左眼, 观察左后视镜. 当库口延长线与左后视镜裂纹处重合后. 踩刹车停车;\",\"[右出库] 挂入前进挡, 开始右出库;\",\"当车头左凸起棱与库边线重合后, 迅速将方向盘向右打死;\",\"[右出库] 观察车前远方, 车正后回正方向.\",\"驶出倒车入库区域, 计时结束;\",\"异常处理:\",\"[正常情况] 倒车入库中. 当库口虚线与前门把手接触时, 如果接触的是门把手后端(后视镜中远我端)正常回半圈等待车身平行再操作即可;\",\"[方向打晚了或倒库前车身靠外] 当库口虚线与前门把手接触时, 如果接触的是门把手的前端(后视镜中近我端)则无须回半圈方向. 直接等待车身平行再操作即可;\",\"[方向打早了或倒库前车身靠内] 当库口虚线与前门把手迟迟不接触, 且眼看着车门把手笔直奔着前库角去了时, 迅速将方向回正. 待前门把手前端(后视镜中近我端)与库口第一段虚线重合后, 迅速将方向再次打死(这时,就和第二种情况一样了). 直接等待车身平行再操作即可;\",\"[库内调整] 方向回正后, 只要两侧后视镜能看到库线内一点点地面(即后视镜中只要不全是库线).就不要调整方向.笔直倒进去即可.\",\"[库内调整] 调整时, 哪边车尾宽往那边打方向盘. 但每向一个方向调整后必须逆方向调整同样的角度. 车身才会正于库内;\",\"[库内调整] 基于上条, 当库口延长线已经接触后视镜下沿时. 不得调整方向. 因为很难再逆方向调整回来;\"]},\"295\":{\"h\":\"侧方停车\",\"t\":[\"[入库] 将方向盘十二点方向对准道路中线(可稍微向右,但绝不可向左);\",\"[入库] 查看右后视镜, 当左前库角线出现在后视镜的中心位置时. 刹车;\",\"[入库] 挂入倒车档倒车, 计时开始;\",\"[入库] 查看右后视镜下沿, 当其触及库口第一个虚线段前边缘时, 向方向盘向右打死;\",\"[入库] 查看左后视镜, 当前车门把手末端触及库口虚线时, 将方向盘回正;\",\"[入库] 继续看左后视镜, 当前门把手前端进入库口虚线时, 将方向盘向左打死;\",\"[入库] 当车头左凸起棱与库延长线重合后, 踩下刹车;\",\"[出库] 开启左转向灯,挂入前进挡起步;\",\"[出库] 当车头左三分之一处触及道路中线时, 将方向盘回正;\",\"[出库] 当车头中心处触及道路中线时, 方向向右打一圈;\",\"[出库] 车正后回正方向盘,驶出库区.如转向灯未关闭,可在驶出库区后手动关闭. 计时结束(90秒内完成);\",\"异常处理:\",\"[正常情况] 侧方停车可分为三个部分, 第一部分(右打满后至回正前)是将与道路平行的车身通过倒车调整至与库口虚线呈120度夹角, 且车尾落于库口虚线近延长线端二分之一之内. 第二部分(回正后至左打满前)是以这个120度的夹角将车的左后轮退至库口虚线内. 第三部分(左打满后)是将这个120度夹角重新调整回与道路平行. 夹角度数可通过左后视镜查看左车身与库口线的夹角判断\",\"[方向打早了] 此时夹角小于120度, 应在进行第二部分时适当左打半圈方向至车身与库口虚线的角度接近120度( 这也是为了给右侧车身留出空间);\",\"[方向打晚了] 此时夹角大于120度, 应在进入第二部分时适当右打半圈方向至车身与库口虚线的角度接近120度( 这也是为了给左侧车身留出空间);\",\"[PS] 侧方停车只能在第二部分修复第一部分犯的错, 且应在车前门把手完全进入库口虚线前;\",\"[PPS] 错犯的越早越好修复, 如果第二部分和第三部分出问题了. 只能说 下辈子做个好人.\"]},\"296\":{\"h\":\"曲线行驶\",\"t\":[\"将方向盘12点方向, 与道路中心对齐;\",\"当车头左边缘处, 触及右边线时. 将方向盘向左打一圈;\",\"可适当调整方向盘, 使车头左边缘处始终与右边线重合行驶;;\",\"当车头左凸起棱与左边线重合时, 将方向盘向右打一圈(方向回正);\",\"当车头右凸起棱处, 触及左边线时, 将方向盘向右打一圈;\",\"可适当调整方向盘, 使车头右凸起棱处始终与左边线重合行驶;\",\"驶出曲线区域, 车正时方向盘向左打一圈(方向回正);\"]},\"297\":{\"h\":\"直角转弯\",\"t\":[\"将方向盘12点方向, 与道路中心对齐;\",\"听到 “直角转弯” 播报语音后, 开启左转向灯;\",\"查看左车门把手, 当其与左侧边缘线重合时. 将方向盘向左打死;\",\"车正后方向盘向右打一圈半(方向回正). 驶出直角区域;\",\"如转向灯未关闭, 可在驶出库区后手动关闭;\"]},\"298\":{\"c\":[\"驾照考试\"]},\"299\":{\"c\":[\"科目二\"]},\"300\":{\"h\":\"科目三 - 灯光模拟练习小程序\"},\"301\":{\"h\":\"写在之前\",\"t\":[\"今天是五一, 大后天就要科三上车练习了. 这几天了解了下科三的考察内容. 知道科三里面第一项就是夜间灯光模拟, 而且需要在五秒内做出应答操作. 作为一个奔三的汉子,就担心五秒反应不过来. 那就多练呗.\",\"在 驾考宝典 上倒是有灯光模拟练习, 但是得收费才能练习. 好吧, 我心疼钱了. 趁着自己最近一直在休息, 就自己写了个小程序自己在家练反应吧.\"]},\"302\":{\"h\":\"使用方式\",\"t\":[\"当控制台打印 --- 嘀 --- 字符时, 开始答题;\",\"共需输入三个数字, 以空格分割;\",\"第一个数字代表 灯光总开关, 输入 1 代表顺时针拨动一下. 输入 -1 代表逆时针拨动一下;\",\"第二个数字代表 左拨杆开关, 输入 1 代表向近怀方向拨动一下. 输入 -1 代表向远怀方向拨动一下;\",\"第三个数字代表 双闪灯开关, 输入 1 代表按动 双闪一次, 以此类推;\",\"输入完成后, 单击回车提交答案. 等待评判和下一题;\"]},\"303\":{\"h\":\"注意事项\",\"t\":[\"一共会随机生成六道题. 第一道恒等于 \\\"开启前照灯\\\", 最后一道题恒等于 \\\"关闭所有灯光,开始其他考试\\\";\",\"使用过程中. 程序会记录上一题操作后所有灯光的开启状态. 所以, 每一题的操作步骤均与上一题后的灯光位置强相关;\",\"就像上一条说的. 比如上一题是开启远光灯, 当前题需要远近交替. 此时需要至少拨动5次拨杆才能判定打光正确;\",\"需要远近光灯交替时, 需要向近怀方向拨动四次;\",\"所有操作必须在5秒内完成, 否则会超时退出考试;\",\"\\\"嘀\\\"声在出题1秒后出现, 弥补打印比口播快的客观事实;\"]},\"304\":{\"h\":\"运行环境\"},\"305\":{\"h\":\"代码片段\",\"t\":[\"package com.github.guocay.util; import java.util.AbstractMap.SimpleImmutableEntry; import java.util.Map.Entry; import java.util.Random; import java.util.Scanner; import java.util.concurrent.Callable; import java.util.concurrent.ExecutorService; import java.util.concurrent.Executors; import java.util.concurrent.TimeUnit; import java.util.logging.Logger; import java.util.stream.IntStream; import static java.lang.Math.max; import static java.lang.Math.min; /** * 科目三 灯光模拟 * @author aCay * @since 2023.05.01 */ public class LightingSimulation { /** * 程序中用到了 System.in 对象. 所以必须是单例模式 */ public static final LightingSimulation INSTANCE; /** * 日志对象和一些常量 */ private static final Logger logger = Logger.getLogger(LightingSimulation.class.getName()); private static final String RUN_TIME_OUT = \\\"java.util.concurrent.TimeoutException\\\"; private static final String RUN_EXECUTION = \\\"java.util.concurrent.ExecutionException\\\"; /** * 配置信息 */ private static final int CONFIG_MAX_TOPIC_TIMEOUT = 5; private static final int CONFIG_MAX_ALTERNATE_COUNT = 4; private static final int CONFIG_TOTAL_TOPIC = 5; /** * 拨杆状态 枚举 */ private static final int LEVER_NEAR_LIGHT_STATUS = 0; private static final int LEVER_PARALLEL_LIGHT_STATUS = -1; private static final int LEVER_ALTERNATE_LIGHT_STATUS = CONFIG_MAX_ALTERNATE_COUNT; /** * 总控状态 枚举 */ private static final int MASTER_CLOSE_LIGHT_STATUS = 0; private static final int MASTER_CONTOUR_LIGHT_STATUS = 1; private static final int MASTER_FRONT_LIGHT_STATUS = 2; /** * 创建线程池 */ private static final ExecutorService THREAD_POOL; /** * 拉取用户输入答案的线程 */ private static final Callable<Operation> PULL_ANSWER; /** * 灯光模拟考试题库及答案 */ @SuppressWarnings(\\\"unchecked\\\") private static final Entry<String, LightStatus>[] QUESTIONS = new Entry[10]; /** * 随机数生成器 */ private final Random random; /** * 计时器 */ private final StopWatch stopWatch; /** * 记录车辆当前灯光状态 */ private final LightStatus currentLightStatus; static { LightStatus nearLightStatus = new LightStatus(MASTER_FRONT_LIGHT_STATUS, LEVER_NEAR_LIGHT_STATUS, false); LightStatus alternateLightStatus = new LightStatus(MASTER_FRONT_LIGHT_STATUS, LEVER_ALTERNATE_LIGHT_STATUS, false); LightStatus parallelLightStatus = new LightStatus(MASTER_FRONT_LIGHT_STATUS, LEVER_PARALLEL_LIGHT_STATUS, false); LightStatus closeLightStatus = new LightStatus(MASTER_CLOSE_LIGHT_STATUS, LEVER_NEAR_LIGHT_STATUS, false); LightStatus emergencyLightStatus = new LightStatus(MASTER_CONTOUR_LIGHT_STATUS, LEVER_NEAR_LIGHT_STATUS, true); // 设置题库及答案 QUESTIONS[0] = new SimpleImmutableEntry<>(\\\"请开启前照灯\\\", nearLightStatus); QUESTIONS[1] = new SimpleImmutableEntry<>(\\\"同方向近距离跟车驾驶\\\", nearLightStatus); QUESTIONS[2] = new SimpleImmutableEntry<>(\\\"通过有交通信号灯控制的路口\\\", nearLightStatus); QUESTIONS[3] = new SimpleImmutableEntry<>(\\\"夜间在窄路窄桥与非机动车会车\\\", nearLightStatus); QUESTIONS[4] = new SimpleImmutableEntry<>(\\\"夜间在有路灯照明良好的道路上行驶\\\", nearLightStatus); QUESTIONS[5] = new SimpleImmutableEntry<>(\\\"夜间通过没有交通信号灯控制的路口\\\", alternateLightStatus); QUESTIONS[6] = new SimpleImmutableEntry<>(\\\"夜间超越前方车辆\\\", alternateLightStatus); QUESTIONS[7] = new SimpleImmutableEntry<>(\\\"夜间在没有路灯或照明条件不良条件下行驶\\\", parallelLightStatus); QUESTIONS[8] = new SimpleImmutableEntry<>(\\\"路边临时停车\\\", emergencyLightStatus); QUESTIONS[9] = new SimpleImmutableEntry<>(\\\"关闭所有灯光,开始其他考试\\\", closeLightStatus); // 设置拉取答案的线程和线程池 THREAD_POOL = Executors.newFixedThreadPool(1); final Scanner SCANNER = new Scanner(System.in); PULL_ANSWER = () -> Operation.of(SCANNER.nextLine()); // 设置单例模式下的实例 INSTANCE = new LightingSimulation(); } private LightingSimulation(){ this.random = new Random(); this.stopWatch = new StopWatch(); this.currentLightStatus = QUESTIONS[QUESTIONS.length - 1].getValue(); } /** * 启动灯光模拟考试 */ public void startup(){ // 加 1 是为了将 \\\"关闭所有灯光\\\" 算进去. startup(CONFIG_TOTAL_TOPIC + 1, CONFIG_MAX_TOPIC_TIMEOUT); } /** * 启动灯光模拟考试 * @param topicTotal 总出题数 * @param topicTimeout 超时时间 */ public void startup(int topicTotal, int topicTimeout){ // 打印准备信息 printPrepareMessage(); // 循环出六道题 IntStream.range(0, topicTotal).forEach(index -> { // 通过 Future 的超时异常, 实现五秒内答题. try { // 从题库中抽取考题后,打印题目. 并返回期望答案. LightStatus els = printQuestions(index); // 1. 提交任务, 并指定拉取的最大时间; 2. 将操作追加至当前状态; appendOperation(THREAD_POOL.submit(PULL_ANSWER).get(topicTimeout, TimeUnit.SECONDS)); // 校验状态是否符合要求 judgmentStatus(els); }catch (Exception ex){ String errorInfo = switch (ex.getClass().getName()){ case RUN_TIME_OUT -> \\\"答题超时, 成绩不合格!!!\\\"; case RUN_EXECUTION -> \\\"输入值非法, 成绩不合格!!!\\\"; default -> \\\"发生未预期错误, 成绩不合格!!!\\\"; }; applicationExit(errorInfo); } // 准备下一轮, 回退远近光交替至近光. prepareNextRound(); }); logger.info(\\\"考试结束, 成绩合格!!!\\\"); THREAD_POOL.shutdownNow(); } /** * 打印准备信息 */ private void printPrepareMessage() { logger.info(\\\"\\\"\\\" 答题时需要输入三个数字,并以空格分开. `1. 第一个数字代表灯光总开关拨动次数, 输入 1 代表顺时针拨动一下, -1 代表逆时针拨动一下. `2. 第二个数字代表左拨杆拨动次数. 输入 1 代表向近怀拨动一下, -1 代表向远怀拨动一下. `3. 第三个数字代表双闪控制开关, 输入正整数. 表示按动几次. 输入完毕后,必须按回车键提交. \\\"\\\"\\\" ); logger.info(\\\"\\\"\\\" 下面将开始模拟夜间灯光的考试!!! 请在嘀声后五秒内完成答题. \\\"\\\"\\\" ); } /** * 打印当前的灯光状态 */ private void printCurrentStatus() { // 获取总灯光状态 String master = switch (currentLightStatus.master){ case MASTER_CLOSE_LIGHT_STATUS -> \\\"关闭\\\"; case MASTER_CONTOUR_LIGHT_STATUS -> \\\"示廓灯\\\"; default -> \\\"前照灯\\\"; }; // 获取左拨杆状态 String lever = switch (currentLightStatus.lever){ case LEVER_PARALLEL_LIGHT_STATUS -> \\\"远光灯\\\"; case LEVER_NEAR_LIGHT_STATUS -> currentLightStatus.master == MASTER_CLOSE_LIGHT_STATUS ? \\\"关闭\\\" : \\\"近光灯\\\"; default -> \\\"远近光交替\\\"; }; // 获取双闪灯状态 String emergency = currentLightStatus.emergency ? \\\"开启\\\" : \\\"关闭\\\"; System.err.printf(\\\"\\\"\\\" 操作耗时: %d毫秒. 操作后的灯: 总控[%s], 拨杆[%s], 双闪[%s]. \\\"\\\"\\\", stopWatch.end(), master, lever, emergency ); } /** * 准备下一轮, 回退远近光交替至近光. */ private void prepareNextRound() { currentLightStatus.lever = min(LEVER_NEAR_LIGHT_STATUS, currentLightStatus.lever); } /** * 程序退出, 打印提示语 * @param msg 提示信息 */ private void applicationExit(String msg) { logger.severe(msg); THREAD_POOL.shutdownNow(); System.exit(0); } /** * 校验状态是否符合要求 * @param expectationLightStatus 期望灯光状态 */ private void judgmentStatus(LightStatus expectationLightStatus) { if (!currentLightStatus.equals(expectationLightStatus)){ applicationExit(\\\"答案错误, 成绩不合格!!!\\\"); } } /** * 将操作追加至当前状态 * @param operation 动作 */ private void appendOperation(Operation operation) { currentLightStatus.setMaster(operation.master); currentLightStatus.setLever(operation.lever); currentLightStatus.setEmergency(operation.emergency); // 打印当前灯光状态 printCurrentStatus(); } /** * 打印题目并 返回期望的目标灯光 * @param index 第几题 * @return 期望的目标灯光 */ private LightStatus printQuestions(int index) throws InterruptedException { TimeUnit.SECONDS.sleep(1); Entry<String, LightStatus> question = (switch (index){ case 0 -> QUESTIONS[0]; case CONFIG_TOTAL_TOPIC -> QUESTIONS[QUESTIONS.length - 1]; default -> { Entry<String, LightStatus> _temp = null; while (_temp == null){ // 加 1 是为了 错开下标为 0 的题. int num = random.nextInt(7) + 1; _temp = QUESTIONS[num]; QUESTIONS[num] = null; } yield _temp; } }); logger.info(question.getKey()); TimeUnit.SECONDS.sleep(1); System.err.println(\\\"--- 嘀 ---\\\"); stopWatch.begin(); return question.getValue(); } /** * 操作内容, 答卷 */ private record Operation(int master, int lever, int emergency) { /** * 解析输入, 生成操作 * @param input 输入字符 * @return 操作 */ public static Operation of(String input) { String[] info = input.split(\\\" \\\"); return new Operation(Integer.parseInt(info[0]), Integer.parseInt(info[1]), Integer.parseInt(info[2])); } } /** * 灯光状态 */ private static class LightStatus { /** * 总开关 * <li>0: 代表关闭总开关</li> * <li>1: 代表开启示廓灯</li> * <li>2: 代表开启前照灯</li> */ private int master; /** * 左拨杆 * <li>-1: 代表开启远光灯</li> * <li>0: 代表开启近光灯</li> * <li>1: 开启远近交替</li> */ private int lever; /** * 双闪灯 * <li>true: 开启双闪灯</li> * <li>false: 关闭双闪灯</li> */ private boolean emergency; private LightStatus(int master, int lever, boolean emergency) { this.master = master; this.lever = lever; this.emergency = emergency; } public void setMaster(int master) { // 如果操作后的结果大于2, 则回退至2. // 如果操作后的结果小于0, 则回退至0. this.master = max(min(this.master + master, MASTER_FRONT_LIGHT_STATUS), MASTER_CLOSE_LIGHT_STATUS); } public void setLever(int lever) { // 如果操作后的结果小于 -1, 则回退至 -1. // 如果操作后的结果大于 4, 则回退至 4. this.lever = max(min(this.lever + lever, CONFIG_MAX_ALTERNATE_COUNT), LEVER_PARALLEL_LIGHT_STATUS); } public void setEmergency(int emergency) { // 判断操作的次数是奇数还是偶数, 是奇数则不改变灯光状态. 反之则改变状态. this.emergency = (emergency % 2 == 0) == this.emergency; } @Override public boolean equals(Object o) { return this == o || (o instanceof LightStatus that && master == that.master && emergency == that.emergency && lever == that.lever); } } /** * 计时器 */ private static class StopWatch { /** * 记录当前时间 */ private Long currentTimeMillis; /** * 计时器开始工作. */ public void begin(){ this.currentTimeMillis = System.currentTimeMillis(); } /** * 计数器结束工作, 并返回持续时间. * @return 返回时间间隔 */ public Long end(){ return currentTimeMillis == null ? null : System.currentTimeMillis() - currentTimeMillis; } } public static void main(String[] args) { INSTANCE.startup(); // INSTANCE.startup(5, 5); } } \"]},\"306\":{\"c\":[\"驾照考试\"]},\"307\":{\"c\":[\"科目三\"]},\"308\":{\"h\":\"科目三道路驾驶技能考试 - 海淀驾校(东三考场)\",\"t\":[\"东三考场 示意图\",\"序号\",\"阶段\",\"起始车道\",\"结束车道\",\"行驶时速\",\"注意事项\",\"1\",\"起步阶段\",\"停车道\",\"最右侧机车道\",\"<5\",\"安全带, 手刹, 压实线\",\"2\",\"直行路口阶段\",\"直行车道(中间)\",\"最右侧车道\",\"<10\",\"压实线, 刹车减速\",\"3\",\"路口右转阶段\",\"右转车道(最右侧)\",\"最右侧车道\",\"<10\",\"转向灯,压实线, 刹车减速, 人行道停车\",\"4\",\"连续变道阶段\",\"最右侧车道\",\"左侧第二车道\",\"<20\",\"转向灯\",\"5\",\"超车阶段\",\"左侧第二车道\",\"最左侧车道\",\"<25\",\"转向灯\",\"6\",\"通过公交车站阶段\",\"最左侧车道\",\"最左侧车道\",\"<15\",\"刹车减速\",\"7\",\"路口掉头阶段\",\"最左侧车道\",\"最左侧车道\",\"<3\",\"转向灯, 补灯, 压实线\",\"8\",\"通过人行横道阶段\",\"最左侧车道\",\"最左侧车道\",\"<15\",\"刹车减速\",\"9\",\"直线行驶阶段\",\"最左侧车道\",\"最左侧车道\",\"<29\",\"方向盘幅度大, 压实线\",\"10\",\"路口左转阶段\",\"左转车道(左侧第二车道)\",\"左侧第二车道\",\"<10\",\"转向灯, 刹车减速, 人行道停车\",\"11\",\"会车阶段\",\"左侧第二车道\",\"左侧第二车道\",\"<15\",\"刹车减速\",\"12\",\"直行路口阶段\",\"直行车道(左侧第二车道)\",\"最右侧车道\",\"<10\",\"压实线, 刹车减速\",\"13\",\"通过学校阶段\",\"最右侧车道\",\"最右侧车道\",\"<15\",\"刹车减速\",\"14\",\"直行路口阶段\",\"直行车道(最右侧车道)\",\"最右侧车道\",\"<10\",\"压实线, 刹车减速\",\"15\",\"靠边停车阶段\",\"最右侧车道\",\"停车道\",\"<3\",\"停车距离\",\"注意事项\",\"考试全程除 \\\"直线行驶\\\" 阶段略快(但不得大于30, 东三直线路段是桥梁), \\\"转弯\\\"和\\\"掉头\\\"阶段低于5码外. 全程时速维持在20码左右;\",\"考试全程除 \\\"超车\\\"和\\\"直线行驶\\\" 指令外, 其他指令在听到后均需先减速;\",\"考试全程除 \\\"起步\\\"和\\\"停车\\\" 阶段外, 任何阶段不得压任何车道实线;\",\"考试全程所有 \\\"转向灯\\\" 均需点亮三秒后才可进行操作;\",\"考试全程所有的 \\\"转向灯\\\" 必须在车辆回正前持续亮起, 关闭后必须立即再次打开;\",\"考试全程的刹车减速, 均不得将车刹停;\",\"考试全程不得在人行横道上 \\\"停车\\\" 或 \\\"蠕行\\\", 其他时刻可在车道内 \\\"蠕行\\\", 但不得停车;\",\"考试全程每做一个操作前, 必须观察对应方向情况;\"]},\"309\":{\"h\":\"起步阶段\"},\"310\":{\"h\":\"上车阶段\",\"t\":[\"在开始考试时, 先站到副驾驶门口处;\",\"双手向监考官递出身份证. 并 虔诚 的打招呼: 考官好, 这是我的证件;\",\"当考官接过证件后, 行至车头左前方. 等候监考官发出开始考试指令;\",\"接到监考官发出考试指令后, 以逆时针方向绕车一周. 依次触摸并按压左后方,右后方,右前方,左前方雷达;\",\"绕车结束后. 面向车身,站于主驾门略后侧. 查看车后方是否有非机动车, 确认无误后, 使用右手盖住车门角. 左手开启车门;\",\"开启车门后. 如车座太靠前背, 可先探身进入车内将座椅向后调整. 再背靠车身坐入主驾.\",\"进入车内后, 先调整座椅高度至最高. 然后调整座椅靠背至垂直略靠后一格. 最后调整座椅前后角度至右脚垂直与刹车踏板可将其拆至底. 并可倾斜踩踏加速踏板;\",\"系安全带;\",\"检查灯光总控是否处于关闭状态. 检查档位是否处于驻车档. 检查手刹是否拉起;\",\"启动发动机, 准备开始灯光模拟考试;\"]},\"311\":{\"h\":\"灯光考试\",\"t\":[\"爱丽舍(雪铁龙) 车型 灯光操作说明\",\"关闭前照灯 -> 灯光拨杆末端旋钮 处于 最上端;\",\"开启示廓灯 -> 灯光拨杆末端旋钮 处于 中间位置;\",\"开启前照灯 -> 灯光拨杆末端旋钮 处于 最下端;\",\"开启近光灯 -> 默认状态, 仪表板左下角 近光图标 亮起;\",\"开启远光灯 -> 将灯光拨杆向近怀端拨动一下, 仪表板左下角会 远光图标 亮起;\",\"关闭远光灯 -> 将灯光拨杆向近怀端拨动一下, 仪表板左下角 远光图标 熄灭, 近光图标 亮起;\",\"开启远近交替(近光状态) -> 将灯光拨杆向近怀端拨动四下, 远光图标 与 近光图标 交替闪烁;\",\"开启远近交替(远光状态) -> 将灯光拨杆向近怀端拨动三下, 远光图标 与 近光图标 交替闪烁;\",\"灯光考试题库\",\"播报顺序\",\"题目\",\"答案\",\"备注\",\"固定第一项\",\"请开启前照灯\",\"开启近光灯\",\"九选四\",\"同方向近距离跟车行驶行驶\",\"近光灯\",\"通过有交通信号灯控制的路口\",\"近光灯\",\"夜间在窄路窄桥与非机动车会车\",\"近光灯\",\"夜间在有路灯照明良好的道路上行驶\",\"近光灯\",\"夜间通过没有交通信号灯控制的路口\",\"远近交替\",\"超车\",\"远近交替\",\"夜间通过急弯,坡道,拱桥,人行横道灯路段\",\"远近交替\",\"几率极小\",\"夜间在没有路灯或照明不良条件下行驶\",\"远光灯\",\"路边临时停车\",\"示廓灯\",\"科目三-灯光模拟练习小程序(Java版)\",\"等待监考系统播放语音: \\\"下面将进行模拟夜间灯光使用的考试，请跟距语音播报情形，在语音播报结束后5秒内完成相应的灯光操作\\\". 开始灯光模拟考试;\",\"考试共五道题, 第一题恒等于 请开启前照灯;\",\"开始进行考试;\",\"等待监考系统播报语音: \\\"模拟灯光操作完成，请起步.\\\", 关闭所有灯光;\"]},\"312\":{\"h\":\"开始考试\",\"t\":[\"待关闭了所有灯光后, 开启左转向灯准备起步. 在心中默数三秒;\",\"依次查看 内后视镜, 右后视镜. 判断后方是否具备起步条件;\",\"脚踩刹车, 并将操作杆档位挂入D档;\",\"查看左后视镜, 判断后方是否具备起步条件. 当具备后, 立即松开手刹. 在十秒内将车辆起步;\",\"方向盘向左打方向45度, 缓慢进入机动车最右侧车道行驶;\",\"当 车头左三分之一 处, 覆盖 车道虚线 后, 方向盘回正;\",\"当 车头中心 处, 覆盖 车道虚线 后, 方向盘向右打45度;\",\"目视远方, 车正后将方向盘回正;\",\"此时, 如 左转向灯 未关闭, 则手动关闭;\"]},\"313\":{\"h\":\"直行路口阶段\",\"t\":[\"等待系统播报语音: \\\"直行通过前方路口\\\";\",\"立即轻踩两脚刹车, 选择 最中间车道 准备直行;\",\"查看前方红绿灯. 在绿灯后通过当前路口;\",\"通过路口后, 选择机动车最右侧车道行驶;\"]},\"314\":{\"h\":\"路口右转阶段\",\"t\":[\"等待系统播报语音: \\\"前方路口请右转\\\";\",\"立即轻踩两脚刹车, 缓慢右转至最右侧 右转专用车道;\",\"到达车道停止线前, 查看 右后视镜 车后方向是否具备右转条件. 不具备则在停止线前停车;\",\"到达车道停止线前, 查看 前方 和 右前方 路口的人行道是否具备右转条件. 不具备则在停止线前停车;\",\"具备条件后右转. 当车头完全盖过人行横道后, 方向盘向右打45度;\",\"右转后选择机动车最右侧车道行驶. 目视前方, 车正后回正;\"]},\"315\":{\"h\":\"连续变道阶段\",\"t\":[\"此处无系统语音播报;\",\"右转后, 立即开启 左转向灯. 在心中默数3秒;\",\"查看 左后视镜, 判断是否具备左转条件. 具备后向左变道(变道过程同起步阶段5,6,7,8,9);\",\"再次开启 左转向灯. 在心中默数3秒;\",\"查看 左后视镜, 判断是否具备左转条件. 具备后向左变道(变道过程同起步阶段5,6,7,8,9);\"]},\"316\":{\"h\":\"超车阶段\",\"t\":[\"等待系统播报语音: \\\"前方超车\\\";\",\"立即开启 左转向灯, 在心中默数3秒. 此处不可减速;\",\"查看 左后视镜, 判断是否具备左转条件. 具备后向左变道(变道过程同起步阶段5,6,7,8,9);\",\"等待系统播报: \\\"超车结束\\\" 后, 阶段结束;\"]},\"317\":{\"h\":\"通过公交车站阶段\",\"t\":[\"此处无系统语音播报;\",\"查看道路右侧 公交站牌 指示杆, 当车辆过指示杆后, 立即清点两次刹车;\",\"等待系统播报: \\\"通过公交站\\\" 后, 阶段结束;\"]},\"318\":{\"h\":\"路口掉头阶段\",\"t\":[\"注意事项\",\"掉头后半段可查看车前方掉头专用道左右线, 凭感觉左右调整;\",\"正常的掉头过程, 在驶出掉头专用道之前是不会掉转向灯的. 如果出现掉灯基本出现在第6步和第七步中;\",\"等待系统播报语音: \\\"前方寻找合适地点掉头\\\";\",\"轻踩两次刹车减速, 进入 掉头专用车道. 不可压车道两侧实线;\",\"降低车速至尽可能低;\",\"使 右车道线 对准 车头左侧凸起棱处(大致左车头三分之一) 后, 迅速将 方向盘向左打一圈;\",\"维持 左凸起棱 与 车道右线 交叉行进. 过程中需一直向左调方向直至再四分之一(当前方向盘向左一圈又四分之一);\",\"刹车停在原地, 查看右前方是否有车辆驶来. 目之所及有车就等它开过去再启动;\",\"启动后, 开始向右回方向. 在驶出掉头车道前将第5步的四分之一回完(当前方向盘向左一圈).\",\"待车辆驶出掉头车道,进入对向车道后. 通过车道线凭感觉回正方向;\"]},\"319\":{\"h\":\"通过人行横道阶段\",\"t\":[\"此处无系统语音播报;\",\"查看道路右侧 人行横道 指示杆, 当车辆过指示杆后, 立即轻踩两次刹车;\",\"过 人行横道 时, 注意行人. 如有在 停车线 前等候;\",\"等待系统播报: \\\"通过人行横道\\\" 后, 阶段结束;\"]},\"320\":{\"h\":\"直线行驶阶段\",\"t\":[\"准备阶段\",\"在上一个 通过人行横道 结束后, 应立即将车身仅可能置于车道中央;\",\"判断方式可以是查看 左右后视镜, 车辆车身与车道线的距离是否一致. 也可以是将自己的右腿置于道路中心;\",\"提示\",\"直线行驶全程一百米, 大致在桥梁上;\",\"过程中调整方向盘的角度不得大于等于 正负5度;\",\"过程中尽可能加速. 一是因为车速快的话能尽早结束这一百米, 二是因为车速快调整方向需转动的方向盘角度更小;\",\"等待系统播报语音: \\\"前方请直行\\\";\",\"握紧方向盘, 目视远方. 保证车辆行驶于车道内维持100米;\",\"等待系统播报: \\\"直行路段结束\\\" 后, 阶段结束;\"]},\"321\":{\"h\":\"路口左转阶段\",\"t\":[\"等待系统语音播报: \\\"前方路口请左转\\\";\",\"轻踩两次刹车, 开启 左转向灯;\",\"驶入 路口左侧第二车道, 等待左转;\",\"如 左转红灯并直行绿灯 时, 进入左转待转车道. 当左转待转车道有两辆车及以上后, 就不要再进入了;\",\"具备条件后左转. 当车头完全盖过人行横道后, 方向盘向左打45度. 沿 左转待转车道虚线 行驶;\",\"左转后选择 左侧第二道车道 行驶. 目视远方, 车正后方向回正;\"]},\"322\":{\"h\":\"会车阶段\",\"t\":[\"等待系统语音播报: \\\"前方会车\\\";\",\"轻踩刹车两次;\",\"等待系统播报 \\\"会车结束\\\"后, 阶段结束;\"]},\"323\":{\"h\":\"直行路口阶段\",\"t\":[\"此阶段无系统播报;\",\"注意查看红绿灯. 过路口后, 依车流汇入 最右侧机动车道;\"]},\"324\":{\"h\":\"通过学校阶段\",\"t\":[\"此阶段无系统播报;\",\"查看道路右侧 学校 指示杆, 当车辆过指示杆后, 立即清点两次刹车;\",\"等待系统播报: \\\"通过学校\\\" 后, 阶段结束;\"]},\"325\":{\"h\":\"直行路口阶段\",\"t\":[\"等待系统播报: \\\"前方路口直行\\\";\",\"步骤同上, 通过后车道不变;\"]},\"326\":{\"h\":\"靠边停车阶段\",\"t\":[\"注意事项\",\"整个停车过程是: 右靠, 回正, 右靠, 回正. 无限循环. 绝不可一次性右靠后再回正, 右前轮绝对压线;\",\"越靠右调整方向越得小, 全过程方向盘调整均不可超过25度;\",\"等待系统语音播报: \\\"前方选择合适地点靠边停车\\\";\",\"轻踩刹车两次, 立即开启 右转向灯, 心中默数三秒;\",\"查看右后视镜是否具备进入非机动车道条件;\",\"条件具备, 则方向盘向右打45度;\",\"查看 车头左雨刮器顶点(即车头二分之一) 处, 接触路边缘实线后. 开始回方向盘, 并维持右侧停车线一直在雨刮器顶点行进;\",\"方向盘回正后, 一定一定要让车辆再运行一段时间(行进两三米). 查看远方车正后停车;\",\"踩住刹车. 拉起手刹, 挂入P档;\",\"查看 左后视镜 是否具备开门条件, 心中默数三秒;\",\"左手放入车门卡槽处, 右手拉动门把手开门至5cm左右. 心中默数三秒;\",\"再次关闭车门;\",\"等待系统播报: \\\"考试合格\\\" 后. 松开脚刹, 重复11和12条下车;\"]},\"327\":{\"c\":[\"驾照考试\"]},\"328\":{\"c\":[\"科目三\"]},\"329\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"松开脚刹\",{\"1\":{\"326\":1}}],[\"条件具备\",{\"1\":{\"326\":1}}],[\"心中默数三秒\",{\"1\":{\"326\":3}}],[\"心理高度\",{\"1\":{\"111\":1}}],[\"越靠右调整方向越得小\",{\"1\":{\"326\":1}}],[\"越质量于那些无足轻重的底线与小自尊心\",{\"1\":{\"110\":1}}],[\"绝不可一次性右靠后再回正\",{\"1\":{\"326\":1}}],[\"整个停车过程是\",{\"1\":{\"326\":1}}],[\"步骤同上\",{\"1\":{\"325\":1}}],[\"学校\",{\"1\":{\"324\":1}}],[\"学习需要费脑子\",{\"1\":{\"115\":1}}],[\"沿\",{\"1\":{\"321\":1}}],[\"驶入\",{\"1\":{\"321\":1}}],[\"驶出直角区域\",{\"1\":{\"297\":1}}],[\"驶出曲线区域\",{\"1\":{\"296\":1}}],[\"驶出库区\",{\"1\":{\"295\":1}}],[\"驶出倒车入库区域\",{\"1\":{\"294\":1}}],[\"握紧方向盘\",{\"1\":{\"320\":1}}],[\"目之所及有车就等它开过去再启动\",{\"1\":{\"318\":1}}],[\"目视前方\",{\"1\":{\"314\":1}}],[\"目视远方\",{\"1\":{\"312\":1,\"320\":1,\"321\":1}}],[\"过路口后\",{\"1\":{\"323\":1}}],[\"过程中尽可能加速\",{\"1\":{\"320\":1}}],[\"过程中调整方向盘的角度不得大于等于\",{\"1\":{\"320\":1}}],[\"过程中需一直向左调方向直至再四分之一\",{\"1\":{\"318\":1}}],[\"过\",{\"1\":{\"319\":1}}],[\"过滤流中的数据\",{\"1\":{\"47\":1}}],[\"过滤掉长度大于\",{\"1\":{\"47\":1}}],[\"过滤出需要转换的类\",{\"1\":{\"9\":2}}],[\"过滤出需要拆箱的字段\",{\"1\":{\"9\":2}}],[\"维持\",{\"1\":{\"318\":1}}],[\"迅速将\",{\"1\":{\"318\":1}}],[\"迅速将方向再次打死\",{\"1\":{\"294\":1}}],[\"迅速将方向回正\",{\"1\":{\"294\":1}}],[\"迅速将方向盘向右打死\",{\"1\":{\"294\":1}}],[\"迅速将方向盘向右打满\",{\"1\":{\"294\":1}}],[\"迅速将方向盘向左打满\",{\"1\":{\"294\":1}}],[\"迅速将方向盘左打死\",{\"1\":{\"294\":1}}],[\"凭感觉左右调整\",{\"1\":{\"318\":1}}],[\"缓慢右转至最右侧\",{\"1\":{\"314\":1}}],[\"缓慢进入机动车最右侧车道行驶\",{\"1\":{\"312\":1}}],[\"选择机动车最右侧车道行驶\",{\"1\":{\"313\":1}}],[\"选择\",{\"1\":{\"313\":1}}],[\"选民容易被控制\",{\"1\":{\"135\":1}}],[\"选民群体\",{\"0\":{\"135\":1}}],[\"立即轻踩两次刹车\",{\"1\":{\"319\":1}}],[\"立即轻踩两脚刹车\",{\"1\":{\"313\":1,\"314\":1}}],[\"立即清点两次刹车\",{\"1\":{\"317\":1,\"324\":1}}],[\"立即开启\",{\"1\":{\"315\":1,\"316\":1,\"326\":1}}],[\"立即松开手刹\",{\"1\":{\"312\":1}}],[\"未关闭\",{\"1\":{\"312\":1}}],[\"覆盖\",{\"1\":{\"312\":2}}],[\"覆盖容器内的对象\",{\"1\":{\"47\":1}}],[\"脚踩刹车\",{\"1\":{\"312\":1}}],[\"待车辆驶出掉头车道\",{\"1\":{\"318\":1}}],[\"待关闭了所有灯光后\",{\"1\":{\"312\":1}}],[\"待前门把手前端\",{\"1\":{\"294\":1}}],[\"几率极小\",{\"1\":{\"311\":1}}],[\"几乎所有的高级编程语言都对指针的概念进行尽可能的模糊\",{\"1\":{\"44\":1}}],[\"几乎所有的关系型数据库中都会有这个概念\",{\"1\":{\"33\":1}}],[\"几乎不会使用\",{\"1\":{\"33\":1}}],[\"拱桥\",{\"1\":{\"311\":1}}],[\"坡道\",{\"1\":{\"311\":1}}],[\"九选四\",{\"1\":{\"311\":1}}],[\"固定第一项\",{\"1\":{\"311\":1}}],[\"题目\",{\"1\":{\"311\":1}}],[\"播报顺序\",{\"1\":{\"311\":1}}],[\"播报语音后\",{\"1\":{\"297\":1}}],[\"交叉行进\",{\"1\":{\"318\":1}}],[\"交替闪烁\",{\"1\":{\"311\":2}}],[\"交通标志识别\",{\"1\":{\"289\":1}}],[\"交通\",{\"1\":{\"289\":1}}],[\"熄灭\",{\"1\":{\"311\":1}}],[\"亮起\",{\"1\":{\"311\":3}}],[\"近光状态\",{\"1\":{\"311\":1}}],[\"近光图标\",{\"1\":{\"311\":4}}],[\"近光灯\",{\"1\":{\"305\":1,\"311\":4}}],[\"仪表板左下角会\",{\"1\":{\"311\":1}}],[\"仪表板左下角\",{\"1\":{\"311\":2}}],[\"处\",{\"1\":{\"312\":2,\"326\":1}}],[\"处于\",{\"1\":{\"311\":3}}],[\"处理\",{\"1\":{\"213\":1}}],[\"处理完成后\",{\"1\":{\"31\":1}}],[\"雪铁龙\",{\"1\":{\"311\":1}}],[\"爱丽舍\",{\"1\":{\"311\":1}}],[\"检查手刹是否拉起\",{\"1\":{\"310\":1}}],[\"检查档位是否处于驻车档\",{\"1\":{\"310\":1}}],[\"检查灯光总控是否处于关闭状态\",{\"1\":{\"310\":1}}],[\"检查类名\",{\"0\":{\"74\":1}}],[\"系安全带\",{\"1\":{\"310\":1}}],[\"系统\",{\"1\":{\"289\":1}}],[\"系统变量\",{\"1\":{\"244\":1}}],[\"系统表和视图\",{\"1\":{\"15\":1}}],[\"确认无误后\",{\"1\":{\"310\":1}}],[\"确定保护域\",{\"0\":{\"73\":1}}],[\"站于主驾门略后侧\",{\"1\":{\"310\":1}}],[\"站3\",{\"1\":{\"289\":1}}],[\"面向车身\",{\"1\":{\"310\":1}}],[\"绕车结束后\",{\"1\":{\"310\":1}}],[\"绕过权限校验\",{\"1\":{\"9\":2}}],[\"依车流汇入\",{\"1\":{\"323\":1}}],[\"依次查看\",{\"1\":{\"312\":1}}],[\"依次触摸并按压左后方\",{\"1\":{\"310\":1}}],[\"依赖于抽象而不依赖于具体\",{\"1\":{\"146\":1}}],[\"依赖于java中的类加载器appclassloader中关于加载资源时定义的是个数组\",{\"1\":{\"18\":1}}],[\"依赖倒转原则\",{\"1\":{\"146\":1}}],[\"依赖对象\",{\"1\":{\"25\":2}}],[\"考官好\",{\"1\":{\"310\":1}}],[\"考试合格\",{\"1\":{\"326\":1}}],[\"考试共五道题\",{\"1\":{\"311\":1}}],[\"考试全程每做一个操作前\",{\"1\":{\"308\":1}}],[\"考试全程不得在人行横道上\",{\"1\":{\"308\":1}}],[\"考试全程的刹车减速\",{\"1\":{\"308\":1}}],[\"考试全程所有的\",{\"1\":{\"308\":1}}],[\"考试全程所有\",{\"1\":{\"308\":1}}],[\"考试全程除\",{\"1\":{\"308\":3}}],[\"考试结束\",{\"1\":{\"305\":1}}],[\"虔诚\",{\"1\":{\"310\":1}}],[\"蠕行\",{\"1\":{\"308\":2}}],[\"均不得将车刹停\",{\"1\":{\"308\":1}}],[\"均需点亮三秒后才可进行操作\",{\"1\":{\"308\":1}}],[\"必须观察对应方向情况\",{\"1\":{\"308\":1}}],[\"必须在车辆回正前持续亮起\",{\"1\":{\"308\":1}}],[\"必须按回车键提交\",{\"1\":{\"305\":1}}],[\"任何阶段不得压任何车道实线\",{\"1\":{\"308\":1}}],[\"任何基类可以出现的地方\",{\"1\":{\"146\":1}}],[\"东三直线路段是桥梁\",{\"1\":{\"308\":1}}],[\"东三考场\",{\"0\":{\"308\":1},\"1\":{\"308\":1}}],[\"靠边停车阶段\",{\"0\":{\"326\":1},\"1\":{\"308\":1}}],[\"补灯\",{\"1\":{\"308\":1}}],[\"连续变道阶段\",{\"0\":{\"315\":1},\"1\":{\"308\":1}}],[\"转弯\",{\"1\":{\"308\":1}}],[\"转向灯\",{\"1\":{\"308\":7}}],[\"转换集合中的每一个元素\",{\"1\":{\"47\":1}}],[\"转换和可以不再写更多的相同类\",{\"1\":{\"7\":1}}],[\"压实线\",{\"1\":{\"308\":7}}],[\"安全带\",{\"1\":{\"308\":1}}],[\"起步\",{\"1\":{\"308\":1}}],[\"起步阶段\",{\"0\":{\"309\":1},\"1\":{\"308\":1}}],[\"起始车道\",{\"1\":{\"308\":1}}],[\"阶段结束\",{\"1\":{\"316\":1,\"317\":1,\"319\":1,\"320\":1,\"322\":1,\"324\":1}}],[\"阶段外\",{\"1\":{\"308\":1}}],[\"阶段低于5码外\",{\"1\":{\"308\":1}}],[\"阶段略快\",{\"1\":{\"308\":1}}],[\"阶段\",{\"1\":{\"308\":1}}],[\"阶级\",{\"1\":{\"132\":1}}],[\"序号\",{\"1\":{\"308\":1}}],[\"海淀驾校\",{\"0\":{\"308\":1}}],[\"海特\",{\"1\":{\"107\":1}}],[\"question\",{\"1\":{\"305\":3}}],[\"questions\",{\"1\":{\"305\":18}}],[\"期望的目标灯光\",{\"1\":{\"305\":1}}],[\"期望灯光状态\",{\"1\":{\"305\":1}}],[\"动作\",{\"1\":{\"305\":1}}],[\"答案\",{\"1\":{\"311\":1}}],[\"答案错误\",{\"1\":{\"305\":1}}],[\"答卷\",{\"1\":{\"305\":1}}],[\"答题时需要输入三个数字\",{\"1\":{\"305\":1}}],[\"答题超时\",{\"1\":{\"305\":1}}],[\"拨杆\",{\"1\":{\"305\":1}}],[\"拨杆状态\",{\"1\":{\"305\":1}}],[\"远近交替\",{\"1\":{\"311\":3}}],[\"远近光交替\",{\"1\":{\"305\":1}}],[\"远光状态\",{\"1\":{\"311\":1}}],[\"远光图标\",{\"1\":{\"311\":4}}],[\"远光灯\",{\"1\":{\"305\":1,\"311\":1}}],[\"远车门的手开启车门\",{\"1\":{\"293\":1}}],[\"示意图\",{\"1\":{\"308\":1}}],[\"示廓灯\",{\"1\":{\"305\":1,\"311\":1}}],[\"示例\",{\"1\":{\"34\":2}}],[\"表示按动几次\",{\"1\":{\"305\":1}}],[\"`3\",{\"1\":{\"305\":1}}],[\"`2\",{\"1\":{\"305\":1}}],[\"`1\",{\"1\":{\"305\":1}}],[\"``\",{\"1\":{\"100\":8}}],[\"提示\",{\"1\":{\"320\":1}}],[\"提示信息\",{\"1\":{\"305\":1}}],[\"提交任务\",{\"1\":{\"305\":1}}],[\"提供了依赖于包含值的存在或不存在的其他方法\",{\"1\":{\"47\":1}}],[\"提供了一个注解\",{\"1\":{\"38\":1}}],[\"算进去\",{\"1\":{\"305\":1}}],[\"7\",{\"1\":{\"305\":2,\"308\":1,\"315\":2,\"316\":1}}],[\"7座以上\",{\"1\":{\"289\":1}}],[\"夜间通过急弯\",{\"1\":{\"311\":1}}],[\"夜间通过没有交通信号灯控制的路口\",{\"1\":{\"305\":1,\"311\":1}}],[\"夜间超越前方车辆\",{\"1\":{\"305\":1}}],[\"夜间在没有路灯或照明不良条件下行驶\",{\"1\":{\"311\":1}}],[\"夜间在没有路灯或照明条件不良条件下行驶\",{\"1\":{\"305\":1}}],[\"夜间在有路灯照明良好的道路上行驶\",{\"1\":{\"305\":1,\"311\":1}}],[\"夜间在窄路窄桥与非机动车会车\",{\"1\":{\"305\":1,\"311\":1}}],[\"请起步\",{\"1\":{\"311\":1}}],[\"请跟距语音播报情形\",{\"1\":{\"311\":1}}],[\"请在嘀声后五秒内完成答题\",{\"1\":{\"305\":1}}],[\"请开启前照灯\",{\"1\":{\"305\":1,\"311\":2}}],[\"请注意\",{\"1\":{\"39\":2}}],[\"随机数生成器\",{\"1\":{\"305\":1}}],[\"拉起手刹\",{\"1\":{\"326\":1}}],[\"拉取用户输入答案的线程\",{\"1\":{\"305\":1}}],[\"拉罗什富科说\",{\"1\":{\"111\":1}}],[\"枚举\",{\"1\":{\"305\":2}}],[\"枚举大小写\",{\"1\":{\"40\":1}}],[\"运行环境\",{\"0\":{\"304\":1}}],[\"运行声明的\",{\"0\":{\"285\":1}}],[\"弥补打印比口播快的客观事实\",{\"1\":{\"303\":1}}],[\"声在出题1秒后出现\",{\"1\":{\"303\":1}}],[\"声明策略对象\",{\"1\":{\"170\":1}}],[\"声明一个命令执行类\",{\"1\":{\"169\":1}}],[\"程序退出\",{\"1\":{\"305\":1}}],[\"程序中用到了\",{\"1\":{\"305\":1}}],[\"程序会记录上一题操作后所有灯光的开启状态\",{\"1\":{\"303\":1}}],[\"程序员最亲切的异常\",{\"1\":{\"44\":1}}],[\"程序员应该总是在它有效的最深嵌套元素上使用这个注解\",{\"1\":{\"39\":1}}],[\"双手向监考官递出身份证\",{\"1\":{\"310\":1}}],[\"双闪灯\",{\"1\":{\"305\":1}}],[\"双闪灯开关\",{\"1\":{\"302\":1}}],[\"双闪\",{\"1\":{\"305\":1}}],[\"双闪一次\",{\"1\":{\"302\":1}}],[\"双冒号语法及行为对象化\",{\"1\":{\"47\":1}}],[\"双冒号语法\",{\"1\":{\"45\":1,\"47\":1}}],[\"输入字符\",{\"1\":{\"305\":1}}],[\"输入完毕后\",{\"1\":{\"305\":1}}],[\"输入完成后\",{\"1\":{\"302\":1}}],[\"输入正整数\",{\"1\":{\"305\":1}}],[\"输入值非法\",{\"1\":{\"305\":1}}],[\"输入\",{\"1\":{\"302\":5,\"305\":2}}],[\"灯光拨杆末端旋钮\",{\"1\":{\"311\":3}}],[\"灯光操作说明\",{\"1\":{\"311\":1}}],[\"灯光考试题库\",{\"1\":{\"311\":1}}],[\"灯光考试\",{\"0\":{\"311\":1}}],[\"灯光状态\",{\"1\":{\"305\":1}}],[\"灯光模拟考试题库及答案\",{\"1\":{\"305\":1}}],[\"灯光模拟\",{\"1\":{\"305\":1}}],[\"灯光模拟练习小程序\",{\"0\":{\"300\":1},\"1\":{\"311\":1}}],[\"灯光总开关\",{\"1\":{\"302\":1}}],[\"共需输入三个数字\",{\"1\":{\"302\":1}}],[\"嘀\",{\"1\":{\"302\":1,\"303\":1,\"305\":1}}],[\"趁着自己最近一直在休息\",{\"1\":{\"301\":1}}],[\"好吧\",{\"1\":{\"301\":1}}],[\"好了\",{\"1\":{\"47\":1}}],[\"作为一个奔三的汉子\",{\"1\":{\"301\":1}}],[\"作为一种风格\",{\"1\":{\"39\":1}}],[\"知道科三里面第一项就是夜间灯光模拟\",{\"1\":{\"301\":1}}],[\"今天是五一\",{\"1\":{\"301\":1}}],[\"今年初在做项目的时候\",{\"1\":{\"23\":1}}],[\"写在之前\",{\"0\":{\"301\":1}}],[\"写在最后\",{\"0\":{\"48\":1}}],[\"听到\",{\"1\":{\"297\":1}}],[\"触及左边线时\",{\"1\":{\"296\":1}}],[\"触及右边线时\",{\"1\":{\"296\":1}}],[\"触发运行\",{\"1\":{\"246\":1}}],[\"曲线行驶\",{\"0\":{\"296\":1}}],[\"下面将进行模拟夜间灯光使用的考试\",{\"1\":{\"311\":1}}],[\"下面将开始模拟夜间灯光的考试\",{\"1\":{\"305\":1}}],[\"下面这样\",{\"1\":{\"47\":1}}],[\"下辈子做个好人\",{\"1\":{\"295\":1}}],[\"错开下标为\",{\"1\":{\"305\":1}}],[\"错犯的越早越好修复\",{\"1\":{\"295\":1}}],[\"错不在我\",{\"1\":{\"113\":1}}],[\"应立即将车身仅可能置于车道中央\",{\"1\":{\"320\":1}}],[\"应在进入第二部分时适当右打半圈方向至车身与库口虚线的角度接近120度\",{\"1\":{\"295\":1}}],[\"应在进行第二部分时适当左打半圈方向至车身与库口虚线的角度接近120度\",{\"1\":{\"295\":1}}],[\"应用上下文的后置处理\",{\"0\":{\"267\":1}}],[\"应用启动后回调\",{\"1\":{\"189\":1}}],[\"应用层\",{\"1\":{\"103\":1}}],[\"夹角度数可通过左后视镜查看左车身与库口线的夹角判断\",{\"1\":{\"295\":1}}],[\"回正\",{\"1\":{\"326\":2}}],[\"回正后至左打满前\",{\"1\":{\"295\":1}}],[\"回退远近光交替至近光\",{\"1\":{\"305\":2}}],[\"回调的优先级高于activity中的定义\",{\"1\":{\"25\":3}}],[\"出库\",{\"1\":{\"295\":4}}],[\"踩住刹车\",{\"1\":{\"326\":1}}],[\"踩下刹车\",{\"1\":{\"295\":1}}],[\"踩刹车停车\",{\"1\":{\"294\":3}}],[\"继续看左后视镜\",{\"1\":{\"295\":1}}],[\"继承是否合法\",{\"1\":{\"82\":1}}],[\"继承\",{\"1\":{\"9\":1}}],[\"刹车停在原地\",{\"1\":{\"318\":1}}],[\"刹车减速\",{\"1\":{\"308\":9}}],[\"刹车\",{\"1\":{\"295\":1}}],[\"入库\",{\"1\":{\"295\":7}}],[\"侧方停车只能在第二部分修复第一部分犯的错\",{\"1\":{\"295\":1}}],[\"侧方停车可分为三个部分\",{\"1\":{\"295\":1}}],[\"侧方停车\",{\"0\":{\"295\":1}}],[\"哪边车尾宽往那边打方向盘\",{\"1\":{\"294\":1}}],[\"笔直倒进去即可\",{\"1\":{\"294\":1}}],[\"库内调整\",{\"1\":{\"294\":3}}],[\"正负5度\",{\"1\":{\"320\":1}}],[\"正常的掉头过程\",{\"1\":{\"318\":1}}],[\"正常回半圈等待车身平行再操作即可\",{\"1\":{\"294\":1}}],[\"正常情况\",{\"1\":{\"294\":1,\"295\":1}}],[\"正整数\",{\"1\":{\"100\":1}}],[\"挂入p档\",{\"1\":{\"326\":1}}],[\"挂入倒车档倒车\",{\"1\":{\"295\":1}}],[\"挂入倒车挡\",{\"1\":{\"294\":2}}],[\"挂入前进挡起步\",{\"1\":{\"295\":1}}],[\"挂入前进挡\",{\"1\":{\"294\":2}}],[\"紧闭左眼\",{\"1\":{\"294\":4}}],[\"紧急制动辅助\",{\"1\":{\"289\":1}}],[\"紧急制动辅助bsa\",{\"1\":{\"289\":1}}],[\"紧急制动\",{\"1\":{\"289\":1}}],[\"屁股紧贴座椅\",{\"1\":{\"294\":4}}],[\"全过程方向盘调整均不可超过25度\",{\"1\":{\"326\":1}}],[\"全程时速维持在20码左右\",{\"1\":{\"308\":1}}],[\"全程需要210秒内完成\",{\"1\":{\"294\":1}}],[\"全球定位系统\",{\"1\":{\"289\":1}}],[\"倒车入库中\",{\"1\":{\"294\":1}}],[\"倒车入库\",{\"0\":{\"294\":1}}],[\"倒车掉头1分\",{\"1\":{\"289\":1}}],[\"扎紧安全带\",{\"1\":{\"293\":1}}],[\"至车身占镜子的四分之一\",{\"1\":{\"293\":2}}],[\"至双手合十垂于方向盘十二点位置手踝处略靠前\",{\"1\":{\"293\":1}}],[\"至垂直位置\",{\"1\":{\"293\":1}}],[\"至最高\",{\"1\":{\"293\":1}}],[\"调整时\",{\"1\":{\"294\":1}}],[\"调整右后视镜上下位置\",{\"1\":{\"293\":1}}],[\"调整右后视镜左右位置\",{\"1\":{\"293\":1}}],[\"调整左后视镜上下位置\",{\"1\":{\"293\":1}}],[\"调整左后视镜左右位置\",{\"1\":{\"293\":1}}],[\"调节座椅前后位置\",{\"1\":{\"293\":1}}],[\"调节座椅靠背位置\",{\"1\":{\"293\":1}}],[\"调节座椅上下位置\",{\"1\":{\"293\":1}}],[\"调用getbean\",{\"1\":{\"230\":1}}],[\"调用\",{\"0\":{\"231\":1},\"1\":{\"157\":1}}],[\"调用当前类加载器的findclass\",{\"0\":{\"66\":1}}],[\"调用父加载器的loadclass\",{\"0\":{\"60\":1}}],[\"调用接口中唯一的方法\",{\"1\":{\"47\":2}}],[\"场地驾驶技能考试\",{\"0\":{\"292\":1}}],[\"场景模拟\",{\"1\":{\"47\":1}}],[\"科目三道路驾驶技能考试\",{\"0\":{\"308\":1}}],[\"科目三\",{\"0\":{\"300\":1},\"1\":{\"305\":1,\"311\":1},\"2\":{\"307\":1,\"328\":1}}],[\"科目二\",{\"0\":{\"292\":1},\"2\":{\"299\":1}}],[\"科目一\",{\"0\":{\"289\":1},\"2\":{\"291\":1}}],[\"雾天跑高速\",{\"1\":{\"289\":1}}],[\"雾天高速跑\",{\"1\":{\"289\":1}}],[\"五十二十快跑路\",{\"1\":{\"289\":1}}],[\"酒过三巡\",{\"1\":{\"289\":1}}],[\"定速巡航系统acc\",{\"1\":{\"289\":1}}],[\"定义\",{\"1\":{\"152\":1}}],[\"定义一个命名包\",{\"0\":{\"92\":1}}],[\"定义类后的处理逻辑\",{\"0\":{\"91\":1}}],[\"定义类资源位置\",{\"0\":{\"78\":1}}],[\"定义类前的处理逻辑\",{\"0\":{\"73\":1}}],[\"定义静态方法时\",{\"1\":{\"47\":1}}],[\"定义消费者\",{\"1\":{\"47\":1}}],[\"定义生产者\",{\"1\":{\"47\":1}}],[\"定义接口\",{\"1\":{\"47\":1}}],[\"巡航\",{\"1\":{\"289\":1}}],[\"包含\",{\"1\":{\"289\":3}}],[\"包装启动参数为\",{\"0\":{\"247\":1}}],[\"包装成lambda式的匿名实现\",{\"1\":{\"47\":1}}],[\"包装成了predicate接口的匿名实现\",{\"1\":{\"47\":1}}],[\"牵引力控制系统gps\",{\"1\":{\"289\":1}}],[\"防抱死系统tcs\",{\"1\":{\"289\":1}}],[\"盲点检测\",{\"1\":{\"289\":1}}],[\"盲点\",{\"1\":{\"289\":1}}],[\"盲点辅助bsd\",{\"1\":{\"289\":1}}],[\"盲点辅助\",{\"1\":{\"289\":1}}],[\"电子制动力分配\",{\"1\":{\"289\":1}}],[\"电子稳定ebd\",{\"1\":{\"289\":1}}],[\"电子收费esp\",{\"1\":{\"289\":1}}],[\"电子\",{\"1\":{\"289\":1}}],[\"预警\",{\"1\":{\"289\":1}}],[\"辅助\",{\"1\":{\"289\":1}}],[\"例子\",{\"1\":{\"289\":1}}],[\"例如用于通过命令行激活配置文件\",{\"0\":{\"253\":1}}],[\"例如orelse\",{\"1\":{\"47\":1}}],[\"例如\",{\"1\":{\"39\":1}}],[\"规则\",{\"1\":{\"289\":1}}],[\"规范化beanname\",{\"1\":{\"231\":1}}],[\"英文缩写\",{\"1\":{\"289\":1}}],[\"违者罚一分\",{\"1\":{\"289\":1}}],[\"违反了2pl的语义\",{\"1\":{\"34\":1}}],[\"消防站\",{\"1\":{\"289\":1}}],[\"路口左侧第二车道\",{\"1\":{\"321\":1}}],[\"路口左转阶段\",{\"0\":{\"321\":1},\"1\":{\"308\":1}}],[\"路口的人行道是否具备右转条件\",{\"1\":{\"314\":1}}],[\"路口掉头阶段\",{\"0\":{\"318\":1},\"1\":{\"308\":1}}],[\"路口右转阶段\",{\"0\":{\"314\":1},\"1\":{\"308\":1}}],[\"路口等特殊路段不得五十米内停车\",{\"1\":{\"289\":1}}],[\"路边临时停车\",{\"1\":{\"305\":1,\"311\":1}}],[\"路权排序\",{\"1\":{\"289\":1}}],[\"拿不准的都30\",{\"1\":{\"289\":1}}],[\"口5\",{\"1\":{\"289\":1}}],[\"危\",{\"1\":{\"289\":1}}],[\"旅\",{\"1\":{\"289\":1}}],[\"公交站牌\",{\"1\":{\"317\":1}}],[\"公\",{\"1\":{\"289\":1}}],[\"校\",{\"1\":{\"289\":2}}],[\"校验状态是否符合要求\",{\"1\":{\"305\":2}}],[\"校验类名不以\",{\"0\":{\"75\":1}}],[\"校验名称是否合法\",{\"0\":{\"62\":1}}],[\"校验是否为空\",{\"1\":{\"47\":1}}],[\"分值\",{\"1\":{\"289\":1}}],[\"分代年龄\",{\"1\":{\"97\":3}}],[\"||\",{\"1\":{\"305\":1}}],[\"|\",{\"1\":{\"289\":128}}],[\"超车结束\",{\"1\":{\"316\":1}}],[\"超车\",{\"1\":{\"308\":1,\"311\":1}}],[\"超车阶段\",{\"0\":{\"316\":1},\"1\":{\"308\":1}}],[\"超时时间\",{\"1\":{\"305\":1}}],[\"超载范围\",{\"1\":{\"289\":1}}],[\"超载\",{\"1\":{\"289\":1}}],[\"超员范围\",{\"1\":{\"289\":1}}],[\"超员\",{\"1\":{\"289\":1}}],[\"超速范围\",{\"1\":{\"289\":1}}],[\"超速\",{\"1\":{\"289\":1}}],[\"超文本传输协议\",{\"1\":{\"103\":1}}],[\"方向盘向左打45度\",{\"1\":{\"321\":1}}],[\"方向盘向左打一圈\",{\"1\":{\"318\":1}}],[\"方向盘向左打方向45度\",{\"1\":{\"312\":1}}],[\"方向盘向右打45度\",{\"1\":{\"312\":1,\"314\":1}}],[\"方向盘回正后\",{\"1\":{\"326\":1}}],[\"方向盘回正\",{\"1\":{\"312\":1}}],[\"方向盘幅度大\",{\"1\":{\"308\":1}}],[\"方向盘后左操纵杆管灯光\",{\"1\":{\"289\":1}}],[\"方向回正\",{\"1\":{\"296\":2,\"297\":1}}],[\"方向回正后\",{\"1\":{\"294\":1}}],[\"方向向右打一圈\",{\"1\":{\"295\":1}}],[\"方向打晚了\",{\"1\":{\"295\":1}}],[\"方向打晚了或倒库前车身靠外\",{\"1\":{\"294\":1}}],[\"方向打早了\",{\"1\":{\"295\":1}}],[\"方向打早了或倒库前车身靠内\",{\"1\":{\"294\":1}}],[\"方法解析\",{\"0\":{\"89\":1}}],[\"扇前方后\",{\"1\":{\"289\":1}}],[\"遮挡扣9分\",{\"1\":{\"289\":1}}],[\"假的号牌扣12分\",{\"1\":{\"289\":1}}],[\"假的12分\",{\"1\":{\"289\":1}}],[\"假1\",{\"1\":{\"289\":1}}],[\"停车线\",{\"1\":{\"319\":1}}],[\"停车距离\",{\"1\":{\"308\":1}}],[\"停车道\",{\"1\":{\"308\":2}}],[\"停车\",{\"1\":{\"294\":1,\"308\":2}}],[\"停车9分\",{\"1\":{\"289\":1}}],[\"停止使用临时类加载器\",{\"0\":{\"222\":1}}],[\"普路\",{\"1\":{\"289\":1}}],[\"普车\",{\"1\":{\"289\":2}}],[\"普通道路逆行3分\",{\"1\":{\"289\":1}}],[\"普倒掉1\",{\"1\":{\"289\":1}}],[\"普逆3\",{\"1\":{\"289\":1}}],[\"普遍特征\",{\"0\":{\"121\":1}}],[\"证变30天必须报备\",{\"1\":{\"289\":1}}],[\"证满90天必须更换\",{\"1\":{\"289\":1}}],[\"变道过程同起步阶段5\",{\"1\":{\"315\":2,\"316\":1}}],[\"变3\",{\"1\":{\"289\":1}}],[\"变量的值\",{\"1\":{\"244\":1}}],[\"满9\",{\"1\":{\"289\":1}}],[\"满减组织作弊的\",{\"1\":{\"289\":1}}],[\"满减三二\",{\"1\":{\"289\":1}}],[\"满减也得一千块\",{\"1\":{\"289\":1}}],[\"增驾就核发\",{\"1\":{\"289\":1}}],[\"增加对应的配置以在解析到\",{\"1\":{\"18\":1}}],[\"车辆车身与车道线的距离是否一致\",{\"1\":{\"320\":1}}],[\"车辆类型\",{\"1\":{\"289\":1}}],[\"车后方向是否具备右转条件\",{\"1\":{\"314\":1}}],[\"车头左雨刮器顶点\",{\"1\":{\"326\":1}}],[\"车头左侧凸起棱处\",{\"1\":{\"318\":1}}],[\"车头左三分之一\",{\"1\":{\"312\":1}}],[\"车头中心\",{\"1\":{\"312\":1}}],[\"车型\",{\"1\":{\"311\":1}}],[\"车正后方向回正\",{\"1\":{\"321\":1}}],[\"车正后方向盘向右打一圈半\",{\"1\":{\"297\":1}}],[\"车正后回正\",{\"1\":{\"314\":1}}],[\"车正后回正方向盘\",{\"1\":{\"295\":1}}],[\"车正后回正方向\",{\"1\":{\"294\":2}}],[\"车正后将方向盘回正\",{\"1\":{\"312\":1}}],[\"车正时方向盘向左打一圈\",{\"1\":{\"296\":1}}],[\"车身才会正于库内\",{\"1\":{\"294\":1}}],[\"车动开始计时\",{\"1\":{\"294\":1}}],[\"车速20\",{\"1\":{\"289\":1}}],[\"车速40\",{\"1\":{\"289\":1}}],[\"车速60\",{\"1\":{\"289\":1}}],[\"车速拿不准的地方都三十\",{\"1\":{\"289\":1}}],[\"车没错共承担\",{\"1\":{\"289\":1}}],[\"车有错车承担\",{\"1\":{\"289\":1}}],[\"车道右线\",{\"1\":{\"318\":1}}],[\"车道虚线\",{\"1\":{\"312\":2}}],[\"车道偏离预警\",{\"1\":{\"289\":1}}],[\"车道\",{\"1\":{\"289\":1}}],[\"车登记\",{\"1\":{\"289\":1}}],[\"车类中有一个已实现的run方法\",{\"1\":{\"47\":1}}],[\"机动车号牌没按规定挂好扣3分\",{\"1\":{\"289\":1}}],[\"机动车号牌\",{\"1\":{\"289\":1}}],[\"保证车辆行驶于车道内维持100米\",{\"1\":{\"320\":1}}],[\"保证其他事务不会再并发修改这条记录\",{\"1\":{\"30\":1}}],[\"保险标\",{\"1\":{\"289\":1}}],[\"年检标\",{\"1\":{\"289\":1}}],[\"年数\",{\"1\":{\"47\":1}}],[\"少一个就扣车\",{\"1\":{\"289\":1}}],[\"醉酒的5年\",{\"1\":{\"289\":1}}],[\"醉5\",{\"1\":{\"289\":1}}],[\"撤销和吸毒的3年\",{\"1\":{\"289\":1}}],[\"撤毒3\",{\"1\":{\"289\":1}}],[\"吊销的2年\",{\"1\":{\"289\":1}}],[\"吊2\",{\"1\":{\"289\":1}}],[\"虚假信息的1年不得再考驾照\",{\"1\":{\"289\":1}}],[\"逃出人命七年起\",{\"1\":{\"289\":1}}],[\"逃了三七年\",{\"1\":{\"289\":1}}],[\"逃逸致人死亡的七年以上\",{\"1\":{\"289\":1}}],[\"逃逸了的三年以上七年以下\",{\"1\":{\"289\":1}}],[\"逃逸死了12\",{\"1\":{\"289\":1}}],[\"逃逸构成犯罪的终身不得考\",{\"1\":{\"289\":1}}],[\"逃罪下辈子\",{\"1\":{\"289\":1}}],[\"逃避现实更愿意营造一个属于自己的小世界\",{\"1\":{\"112\":1}}],[\"逃避现实\",{\"0\":{\"112\":1}}],[\"傍山\",{\"1\":{\"289\":1}}],[\"涉水\",{\"1\":{\"289\":1}}],[\"进入左转待转车道\",{\"1\":{\"321\":1}}],[\"进入对向车道后\",{\"1\":{\"318\":1}}],[\"进入\",{\"1\":{\"318\":1}}],[\"进入车内后\",{\"1\":{\"310\":1}}],[\"进入后不得停车\",{\"1\":{\"289\":1}}],[\"进入特殊路段\",{\"1\":{\"289\":1}}],[\"进了焊车门\",{\"1\":{\"289\":1}}],[\"进行加锁\",{\"1\":{\"34\":1}}],[\"进行自定义操作\",{\"1\":{\"18\":1}}],[\"罚款三倍收益\",{\"1\":{\"289\":2}}],[\"罚款两千\",{\"1\":{\"289\":1}}],[\"罚款两百以上两千以下\",{\"1\":{\"289\":1}}],[\"驾照考试\",{\"2\":{\"290\":1,\"298\":1,\"306\":1,\"327\":1}}],[\"驾考宝典\",{\"1\":{\"301\":1}}],[\"驾考组织作弊的\",{\"1\":{\"289\":1}}],[\"驾考三五\",{\"1\":{\"289\":1}}],[\"驾考两千\",{\"1\":{\"289\":1}}],[\"驾驶证可以任何地点办理业务\",{\"1\":{\"289\":1}}],[\"驾驶证\",{\"1\":{\"289\":1}}],[\"驾驶拼装\",{\"1\":{\"289\":1}}],[\"驾驶员理论考试\",{\"0\":{\"289\":1}}],[\"达到报废标准\",{\"1\":{\"289\":1}}],[\"拼装报废超50\",{\"1\":{\"289\":1}}],[\"三车道及以上的右侧60\",{\"1\":{\"289\":1}}],[\"三道左边一百一\",{\"1\":{\"289\":1}}],[\"三个记分周期内不得有酒驾处理记录\",{\"1\":{\"289\":1}}],[\"三无别碍事\",{\"1\":{\"289\":1}}],[\"三有就报警\",{\"1\":{\"289\":1}}],[\"三分钟热度\",{\"0\":{\"109\":1},\"1\":{\"109\":1}}],[\"掉头专用车道\",{\"1\":{\"318\":1}}],[\"掉头后半段可查看车前方掉头专用道左右线\",{\"1\":{\"318\":1}}],[\"掉头\",{\"1\":{\"289\":1,\"308\":1}}],[\"右手拉动门把手开门至5cm左右\",{\"1\":{\"326\":1}}],[\"右前轮绝对压线\",{\"1\":{\"326\":1}}],[\"右前方\",{\"1\":{\"310\":1,\"314\":1}}],[\"右靠\",{\"1\":{\"326\":2}}],[\"右车道线\",{\"1\":{\"318\":1}}],[\"右后视镜\",{\"1\":{\"312\":1,\"314\":1}}],[\"右后方\",{\"1\":{\"310\":1}}],[\"右打满后至回正前\",{\"1\":{\"295\":1}}],[\"右出库\",{\"1\":{\"294\":2}}],[\"右倒库\",{\"1\":{\"294\":5}}],[\"右侧60\",{\"1\":{\"289\":1}}],[\"右操纵杆管雨刷\",{\"1\":{\"289\":1}}],[\"右转向灯\",{\"1\":{\"326\":1}}],[\"右转后\",{\"1\":{\"315\":1}}],[\"右转后选择机动车最右侧车道行驶\",{\"1\":{\"314\":1}}],[\"右转专用车道\",{\"1\":{\"314\":1}}],[\"右转车道\",{\"1\":{\"308\":1}}],[\"右转\",{\"1\":{\"289\":1}}],[\"右移操作的本质是将数字转换为二进制\",{\"1\":{\"100\":1}}],[\"右移\",{\"1\":{\"100\":1}}],[\"左手放入车门卡槽处\",{\"1\":{\"326\":1}}],[\"左手开启车门\",{\"1\":{\"310\":1}}],[\"左右后视镜\",{\"1\":{\"320\":1}}],[\"左凸起棱\",{\"1\":{\"318\":1}}],[\"左后视镜\",{\"1\":{\"315\":2,\"316\":1,\"326\":1}}],[\"左前方雷达\",{\"1\":{\"310\":1}}],[\"左拨杆\",{\"1\":{\"305\":1}}],[\"左拨杆开关\",{\"1\":{\"302\":1}}],[\"左打满后\",{\"1\":{\"295\":1}}],[\"左倒库\",{\"1\":{\"294\":5}}],[\"左出库\",{\"1\":{\"294\":4}}],[\"左侧第二道车道\",{\"1\":{\"321\":1}}],[\"左侧第二车道\",{\"1\":{\"308\":7}}],[\"左侧\",{\"1\":{\"289\":1}}],[\"左侧100\",{\"1\":{\"289\":1}}],[\"左边飚一百\",{\"1\":{\"289\":1}}],[\"左灯右水\",{\"1\":{\"289\":1}}],[\"左转后选择\",{\"1\":{\"321\":1}}],[\"左转待转车道虚线\",{\"1\":{\"321\":1}}],[\"左转红灯并直行绿灯\",{\"1\":{\"321\":1}}],[\"左转向灯\",{\"1\":{\"312\":1,\"315\":2,\"316\":1,\"321\":1}}],[\"左转车道\",{\"1\":{\"308\":1}}],[\"左转\",{\"1\":{\"289\":1}}],[\"左移操作的本质是将数字转换为二进制\",{\"1\":{\"100\":1}}],[\"左移操作相当于\",{\"1\":{\"100\":1}}],[\"左移数\",{\"1\":{\"100\":1}}],[\"左移\",{\"1\":{\"100\":1}}],[\"直线行驶全程一百米\",{\"1\":{\"320\":1}}],[\"直线行驶\",{\"1\":{\"308\":2}}],[\"直线行驶阶段\",{\"0\":{\"320\":1},\"1\":{\"308\":1}}],[\"直角转弯\",{\"0\":{\"297\":1},\"1\":{\"297\":1}}],[\"直行路段结束\",{\"1\":{\"320\":1}}],[\"直行路口阶段\",{\"0\":{\"313\":1,\"323\":1,\"325\":1},\"1\":{\"308\":3}}],[\"直行通过前方路口\",{\"1\":{\"313\":1}}],[\"直行车道\",{\"1\":{\"308\":3}}],[\"直行\",{\"1\":{\"289\":1}}],[\"直接等待车身平行再操作即可\",{\"1\":{\"294\":2}}],[\"直接成因\",{\"0\":{\"139\":1}}],[\"直接包装成代码块实现就好了\",{\"1\":{\"47\":1}}],[\"儿子右转掉头孙\",{\"1\":{\"289\":1}}],[\"爷爷直行左转爹\",{\"1\":{\"289\":1}}],[\"打印当前灯光状态\",{\"1\":{\"305\":1}}],[\"打印当前的灯光状态\",{\"1\":{\"305\":1}}],[\"打印提示语\",{\"1\":{\"305\":1}}],[\"打印题目并\",{\"1\":{\"305\":1}}],[\"打印题目\",{\"1\":{\"305\":1}}],[\"打印准备信息\",{\"1\":{\"305\":2}}],[\"打印启动日志\",{\"0\":{\"283\":1}}],[\"打开你需要集成的工具框架\",{\"1\":{\"18\":1}}],[\"存在则使用日志对象打印\",{\"1\":{\"262\":1}}],[\"信息\",{\"0\":{\"262\":1}}],[\"信念和意见的变化\",{\"0\":{\"141\":1}}],[\"信念的毁灭也需要时间\",{\"1\":{\"138\":1}}],[\"信念的建立需要时间\",{\"1\":{\"138\":1}}],[\"绑定到\",{\"1\":{\"258\":1}}],[\"移动默认属性\",{\"0\":{\"256\":1}}],[\"环境就绪事件\",{\"0\":{\"255\":1}}],[\"删除属性源中原来的值\",{\"1\":{\"254\":1}}],[\"断言\",{\"0\":{\"257\":1,\"279\":1},\"1\":{\"254\":1}}],[\"断言空指针\",{\"1\":{\"47\":1}}],[\"替换原有的属性值\",{\"1\":{\"252\":1}}],[\"合并已有的参数和新加的参数后\",{\"1\":{\"252\":1}}],[\"合成复用原则是指\",{\"1\":{\"146\":1}}],[\"合成复用原则\",{\"1\":{\"146\":1}}],[\"属性中定义的资源\",{\"1\":{\"278\":2}}],[\"属性的值为true\",{\"0\":{\"276\":1}}],[\"属性的值\",{\"0\":{\"274\":1}}],[\"属性不为空\",{\"1\":{\"267\":3}}],[\"属性为真\",{\"1\":{\"267\":1}}],[\"属性为\",{\"1\":{\"264\":1}}],[\"属性为一个arraylist\",{\"0\":{\"225\":1}}],[\"属性打印\",{\"1\":{\"262\":1}}],[\"属性将\",{\"1\":{\"259\":1}}],[\"属性源不是可用的数据源\",{\"1\":{\"254\":1}}],[\"属性源\",{\"1\":{\"254\":1,\"258\":1}}],[\"属性源中\",{\"1\":{\"252\":1}}],[\"属性是否为空集合\",{\"1\":{\"252\":1}}],[\"属性\",{\"0\":{\"251\":1},\"1\":{\"262\":1,\"263\":1}}],[\"监听器\",{\"0\":{\"246\":1,\"255\":1,\"269\":1,\"281\":1,\"284\":1,\"286\":1}}],[\"配置信息\",{\"0\":{\"271\":1},\"1\":{\"305\":1}}],[\"配置忽略的bean信息\",{\"0\":{\"261\":1}}],[\"配置环境\",{\"0\":{\"250\":1}}],[\"配置属性源\",{\"0\":{\"252\":1}}],[\"配置属性\",{\"0\":{\"244\":1}}],[\"配置beandefinitionreader\",{\"1\":{\"200\":1}}],[\"参与\",{\"0\":{\"238\":1}}],[\"参数都是怎么对应的啊\",{\"1\":{\"47\":1}}],[\"启动后\",{\"1\":{\"318\":1}}],[\"启动发动机\",{\"1\":{\"310\":1}}],[\"启动灯光模拟考试\",{\"1\":{\"305\":2}}],[\"启动完成事件\",{\"0\":{\"284\":1}}],[\"启动参数的封装\",{\"0\":{\"272\":1}}],[\"启动参数\",{\"1\":{\"252\":1}}],[\"启动bean的生命周期\",{\"1\":{\"236\":1}}],[\"启动上下文\",{\"1\":{\"190\":1,\"270\":1}}],[\"刷新生命周期管理器\",{\"0\":{\"236\":1}}],[\"清空\",{\"1\":{\"234\":1}}],[\"清空资源缓存\",{\"0\":{\"234\":1}}],[\"清空已有的监听器\",{\"1\":{\"195\":1}}],[\"循环出六道题\",{\"1\":{\"305\":1}}],[\"循环上上一步创建的集合\",{\"0\":{\"232\":1}}],[\"循环上一步包装的集合\",{\"0\":{\"226\":1}}],[\"循环获取当前类的字段\",{\"1\":{\"9\":2}}],[\"赋值\",{\"1\":{\"223\":1}}],[\"标识符设置为\",{\"1\":{\"236\":1}}],[\"标示符\",{\"1\":{\"223\":1}}],[\"标签解析器\",{\"0\":{\"220\":1}}],[\"冻结\",{\"1\":{\"223\":1}}],[\"冻结所有bean定义信息\",{\"0\":{\"223\":1}}],[\"尽快驶离高速\",{\"1\":{\"289\":1}}],[\"尽早初始化\",{\"0\":{\"221\":1}}],[\"尽量使用合成\",{\"1\":{\"146\":1}}],[\"结尾的一般与\",{\"1\":{\"289\":2}}],[\"结束后\",{\"1\":{\"320\":1}}],[\"结束车道\",{\"1\":{\"308\":1}}],[\"结束刷新\",{\"0\":{\"233\":1}}],[\"结束beanfactory初始化\",{\"0\":{\"218\":1}}],[\"结构类\",{\"0\":{\"156\":1}}],[\"判断方式可以是查看\",{\"1\":{\"320\":1}}],[\"判断后方是否具备起步条件\",{\"1\":{\"312\":2}}],[\"判断操作的次数是奇数还是偶数\",{\"1\":{\"305\":1}}],[\"判断如果\",{\"0\":{\"276\":1}}],[\"判断如果beanfactory是\",{\"0\":{\"275\":1}}],[\"判断如果beanfactory是abstractautowirecapablebeanfactory的实例\",{\"0\":{\"274\":1}}],[\"判断日志对象是否存在\",{\"1\":{\"262\":1}}],[\"判断应用类型\",{\"1\":{\"249\":3}}],[\"判断当前环境是否为空\",{\"1\":{\"249\":1}}],[\"判断当前bean工厂中是否存在\",{\"1\":{\"214\":1,\"215\":1}}],[\"判断bean工厂中是否存在\",{\"1\":{\"235\":1}}],[\"判断\",{\"0\":{\"251\":1},\"1\":{\"230\":1,\"252\":2}}],[\"判断获取的beandefinition所代表的bean\",{\"0\":{\"228\":1}}],[\"判断是否具备左转条件\",{\"1\":{\"315\":2,\"316\":1}}],[\"判断是否打印启动信息\",{\"0\":{\"271\":1}}],[\"判断是否开启了\",{\"1\":{\"262\":1}}],[\"判断是否存在\",{\"1\":{\"252\":1,\"262\":1}}],[\"判断是否为smartfactroybean的子类实例\",{\"1\":{\"230\":1}}],[\"判断是否为factorybean的子类\",{\"0\":{\"229\":1}}],[\"判断是否包含某个活动的插件\",{\"1\":{\"25\":1}}],[\"判断是否执行当前插件\",{\"1\":{\"25\":1}}],[\"通知子容器beanfactory准备好了\",{\"0\":{\"211\":1}}],[\"通过后车道不变\",{\"1\":{\"325\":1}}],[\"通过学校\",{\"1\":{\"324\":1}}],[\"通过学校阶段\",{\"0\":{\"324\":1},\"1\":{\"308\":1}}],[\"通过人行横道\",{\"1\":{\"319\":1,\"320\":1}}],[\"通过人行横道阶段\",{\"0\":{\"319\":1},\"1\":{\"308\":1}}],[\"通过车道线凭感觉回正方向\",{\"1\":{\"318\":1}}],[\"通过公交站\",{\"1\":{\"317\":1}}],[\"通过公交车站阶段\",{\"0\":{\"317\":1},\"1\":{\"308\":1}}],[\"通过路口后\",{\"1\":{\"313\":1}}],[\"通过有交通信号灯控制的路口\",{\"1\":{\"305\":1,\"311\":1}}],[\"通过上下文的\",{\"1\":{\"237\":1}}],[\"通过beanpostprocessorchecker\",{\"1\":{\"213\":1}}],[\"通过修改策略改变执行动作\",{\"1\":{\"170\":1}}],[\"通过修改执行类中的命令类型\",{\"1\":{\"169\":1}}],[\"通过中间件解耦组件间的依赖关系\",{\"1\":{\"167\":1}}],[\"通过模版对象实现共有逻辑\",{\"1\":{\"166\":1}}],[\"通过桥接将抽象部分与实现部分解耦\",{\"1\":{\"163\":1}}],[\"通过装饰器去增加原组件的功能\",{\"1\":{\"162\":1}}],[\"通过共享减少对象数量\",{\"1\":{\"161\":1}}],[\"通过代理对象增加目标组件的服务行为\",{\"1\":{\"159\":1}}],[\"通过这个门面对象暴露自己的多个模块\",{\"1\":{\"158\":1}}],[\"通过适配器在新接口中来适配\",{\"1\":{\"157\":1}}],[\"通过同一个工厂的不同方法创建不同的对象\",{\"1\":{\"151\":1}}],[\"通过工厂来创建使用的对象\",{\"1\":{\"150\":1}}],[\"通过\",{\"0\":{\"63\":1},\"1\":{\"263\":1,\"285\":1,\"305\":1}}],[\"通过二级索引匹配到的数据会先在二级索引上加锁\",{\"1\":{\"34\":1}}],[\"通过对读取到的记录加锁实现\",{\"1\":{\"33\":2}}],[\"通过对现状的评估\",{\"1\":{\"16\":1}}],[\"通过对jdbc标准的了解\",{\"1\":{\"15\":1}}],[\"通过查看flowable的文档和源码\",{\"1\":{\"15\":1}}],[\"添加到第一个位置\",{\"1\":{\"254\":1}}],[\"添加\",{\"1\":{\"213\":1}}],[\"添加beanpostprocessor处理器\",{\"1\":{\"213\":1}}],[\"添加临时类加载器\",{\"1\":{\"212\":1}}],[\"添加loadtimeweaverawareprocessor\",{\"1\":{\"212\":1}}],[\"添加一个用于aware感知的postprocessor\",{\"0\":{\"205\":1}}],[\"添加当前活动已执行成功的插件\",{\"1\":{\"25\":1}}],[\"加\",{\"1\":{\"305\":2}}],[\"加油站等不得三十米内停车\",{\"1\":{\"289\":1}}],[\"加载上上步中获取的资源\",{\"0\":{\"280\":1}}],[\"加载bean定义信息\",{\"0\":{\"200\":1},\"1\":{\"200\":1}}],[\"加锁阶段\",{\"1\":{\"32\":1}}],[\"加锁阶段和解锁阶段\",{\"1\":{\"32\":1}}],[\"钩子函数\",{\"0\":{\"211\":1,\"216\":1,\"253\":1,\"282\":1},\"1\":{\"195\":1}}],[\"容器可用标示符设置为true\",{\"1\":{\"195\":1}}],[\"容器关闭标示符设置为false\",{\"1\":{\"195\":1}}],[\"抛出错误会影响应用启动\",{\"1\":{\"189\":1}}],[\"扩展对象初始化时的行为\",{\"1\":{\"187\":1}}],[\"扩展对象销毁时的行为\",{\"1\":{\"186\":1}}],[\"扩展了一些更细粒度的对象生命周期回调\",{\"1\":{\"185\":1}}],[\"资源加载器\",{\"1\":{\"177\":1}}],[\"责任链模式\",{\"0\":{\"173\":1}}],[\"备忘录模式\",{\"0\":{\"172\":1}}],[\"备注\",{\"1\":{\"100\":1,\"311\":1}}],[\"策略模式\",{\"0\":{\"170\":1}}],[\"命令模式\",{\"0\":{\"169\":1}}],[\"命令名\",{\"1\":{\"15\":1}}],[\"组织作弊更可恶\",{\"1\":{\"289\":1}}],[\"组件注册一个观察者\",{\"1\":{\"168\":1}}],[\"组合模式\",{\"0\":{\"160\":1}}],[\"观察库边线\",{\"1\":{\"294\":1}}],[\"观察车前远方\",{\"1\":{\"294\":2}}],[\"观察左后视镜\",{\"1\":{\"294\":4}}],[\"观察右后视镜\",{\"1\":{\"294\":2}}],[\"观察者模式\",{\"0\":{\"168\":1}}],[\"观念能否影响人与其对错\",{\"1\":{\"127\":1}}],[\"观念只有足够简单才能易于被群体接受\",{\"1\":{\"127\":1}}],[\"模拟灯光操作完成\",{\"1\":{\"311\":1}}],[\"模版方法模式\",{\"0\":{\"166\":1}}],[\"模式\",{\"0\":{\"158\":1}}],[\"封装集合迭代逻辑\",{\"1\":{\"165\":1}}],[\"封装了一些获取某个特定日期和时间的接口\",{\"1\":{\"47\":1}}],[\"迭代器模式\",{\"0\":{\"165\":1}}],[\"迭代器只能命令式地\",{\"1\":{\"47\":1}}],[\"桥接模式\",{\"0\":{\"163\":1}}],[\"装饰器模式\",{\"0\":{\"162\":1}}],[\"装箱\",{\"1\":{\"9\":1}}],[\"装箱后的对象\",{\"1\":{\"9\":1}}],[\"装箱的类\",{\"1\":{\"9\":2}}],[\"装箱的类型\",{\"1\":{\"9\":1}}],[\"装箱的类描述\",{\"1\":{\"9\":1}}],[\"减少内存占用和提高性能\",{\"1\":{\"161\":1}}],[\"主要应用于层级结构数据\",{\"1\":{\"160\":1}}],[\"门面\",{\"0\":{\"158\":1}}],[\"老接口的逻辑\",{\"1\":{\"157\":1}}],[\"适配器模式\",{\"0\":{\"157\":1}}],[\"能见度50米\",{\"1\":{\"289\":1}}],[\"能见度100米\",{\"1\":{\"289\":1}}],[\"能见度200米\",{\"1\":{\"289\":1}}],[\"能够复制已有对象\",{\"1\":{\"155\":1}}],[\"能与我们产生兼容性联系的基本都在系统表和视图这部分的差异弥补\",{\"1\":{\"15\":1}}],[\"建造者模式\",{\"0\":{\"154\":1}}],[\"抽象工厂模式\",{\"0\":{\"152\":1}}],[\"抽象出这个类是为了映射视图\",{\"1\":{\"9\":1}}],[\"工程中一个对象仅存在一个实例\",{\"1\":{\"153\":1}}],[\"工厂方法模式\",{\"0\":{\"151\":1}}],[\"工厂模式\",{\"0\":{\"149\":1}}],[\"工作流实例和历史数据等\",{\"1\":{\"14\":1}}],[\"工作经历\",{\"0\":{\"4\":1}}],[\"聚合的方式\",{\"1\":{\"146\":1}}],[\"聚合操作\",{\"1\":{\"47\":1}}],[\"使\",{\"1\":{\"318\":1}}],[\"使车头右凸起棱处始终与左边线重合行驶\",{\"1\":{\"296\":1}}],[\"使车头左边缘处始终与右边线重合行驶\",{\"1\":{\"296\":1}}],[\"使屁股紧贴座椅后背垂直坐于座位上\",{\"1\":{\"293\":4}}],[\"使得系统功能模块相对独立\",{\"1\":{\"146\":1}}],[\"使用右手盖住车门角\",{\"1\":{\"310\":1}}],[\"使用过程中\",{\"1\":{\"303\":1}}],[\"使用方式\",{\"0\":{\"302\":1}}],[\"使用defaultlistablebeanfactory对象\",{\"0\":{\"198\":1}}],[\"使用备忘录保存中间数据\",{\"1\":{\"172\":1}}],[\"使用多个隔离的接口\",{\"1\":{\"146\":1}}],[\"使用fork\",{\"1\":{\"47\":1}}],[\"使用例子\",{\"1\":{\"9\":1,\"25\":1}}],[\"使用优化\",{\"1\":{\"1\":2}}],[\"又称最少知道原则\",{\"1\":{\"146\":1}}],[\"又在代码块中调用工具类\",{\"1\":{\"47\":1}}],[\"迪米特法则\",{\"1\":{\"146\":1}}],[\"降低车速至尽可能低\",{\"1\":{\"318\":1}}],[\"降低耦合\",{\"1\":{\"146\":1}}],[\"降低类之间的耦合度\",{\"1\":{\"146\":1}}],[\"便于升级和维护的软件设计思想\",{\"1\":{\"146\":1}}],[\"便又不甘心与瓦砾为伍\",{\"1\":{\"114\":1}}],[\"具备条件后左转\",{\"1\":{\"321\":1}}],[\"具备条件后右转\",{\"1\":{\"314\":1}}],[\"具备后向左变道\",{\"1\":{\"315\":2,\"316\":1}}],[\"具体内容\",{\"1\":{\"146\":1}}],[\"具有局限性\",{\"1\":{\"136\":1}}],[\"子类一定可以出现\",{\"1\":{\"146\":1}}],[\"里氏代换原则是对开闭原则的补充\",{\"1\":{\"146\":1}}],[\"里氏代换原则是面向对象设计的基本原则之一\",{\"1\":{\"146\":1}}],[\"里氏代换原则中说\",{\"1\":{\"146\":1}}],[\"里氏代换原则\",{\"1\":{\"146\":1}}],[\"想要达到这样的效果\",{\"1\":{\"146\":1}}],[\"想当然\",{\"1\":{\"47\":1}}],[\"简言之\",{\"1\":{\"146\":1}}],[\"简单工厂模式\",{\"0\":{\"150\":1}}],[\"简单邮件传输协议\",{\"1\":{\"103\":1}}],[\"简单说\",{\"1\":{\"47\":1}}],[\"设计模式\",{\"2\":{\"175\":1}}],[\"设计模式分类\",{\"0\":{\"147\":1}}],[\"设计模式原则\",{\"0\":{\"146\":1}}],[\"设计模式关系图\",{\"1\":{\"145\":1}}],[\"设计模式关系\",{\"0\":{\"145\":1}}],[\"设置单例模式下的实例\",{\"1\":{\"305\":1}}],[\"设置拉取答案的线程和线程池\",{\"1\":{\"305\":1}}],[\"设置题库及答案\",{\"1\":{\"305\":1}}],[\"设置为\",{\"1\":{\"267\":1}}],[\"设置启动步骤\",{\"0\":{\"264\":1}}],[\"设置启动时间\",{\"1\":{\"195\":1}}],[\"设置临时类加载器为null\",{\"0\":{\"222\":1}}],[\"设置\",{\"0\":{\"209\":1,\"266\":1},\"1\":{\"223\":1,\"264\":1,\"280\":3}}],[\"设置属性编辑注册器\",{\"0\":{\"204\":1}}],[\"设置属性间关系\",{\"1\":{\"9\":1}}],[\"设置bean工厂的类加载器\",{\"0\":{\"202\":1}}],[\"设置值\",{\"1\":{\"9\":2}}],[\"设置字段反射\",{\"1\":{\"9\":2}}],[\"软件开发设计模式浅谈\",{\"0\":{\"144\":1}}],[\"牢固的信念\",{\"1\":{\"141\":1}}],[\"手刹\",{\"1\":{\"308\":1}}],[\"手段\",{\"1\":{\"140\":1}}],[\"手动到数据库创建视图\",{\"1\":{\"17\":1}}],[\"特征\",{\"1\":{\"140\":1}}],[\"特别是在项目启动的过程中就会创建一批数据表用于存储bmpn模型\",{\"1\":{\"14\":1}}],[\"幻觉存在于所有文明的起源中\",{\"1\":{\"139\":1}}],[\"幻觉\",{\"1\":{\"139\":1}}],[\"幻想中睥睨天下\",{\"1\":{\"112\":1}}],[\"词语和口号展现的力量由其所唤起的形象决定\",{\"1\":{\"139\":1}}],[\"词语和口号\",{\"1\":{\"139\":1}}],[\"教育会影响群众的错误理念\",{\"1\":{\"138\":1}}],[\"教育\",{\"1\":{\"138\":1}}],[\"教育经历\",{\"0\":{\"3\":1}}],[\"政治与社会制度由民族性质决定\",{\"1\":{\"138\":1}}],[\"政治与社会制度\",{\"1\":{\"138\":1}}],[\"政治派别\",{\"1\":{\"132\":1}}],[\"传染从社会下层向上层传播\",{\"1\":{\"140\":1}}],[\"传统是种族精神的综合性反映\",{\"1\":{\"138\":1}}],[\"传统\",{\"1\":{\"138\":1}}],[\"传输层\",{\"1\":{\"103\":1}}],[\"种族的影响至关重要\",{\"1\":{\"138\":1}}],[\"种族\",{\"1\":{\"138\":1}}],[\"间接成因\",{\"0\":{\"138\":1}}],[\"议员群体易受暗示\",{\"1\":{\"136\":1}}],[\"议会\",{\"0\":{\"136\":1}}],[\"领导的权威对议员的影响很大\",{\"1\":{\"136\":1}}],[\"轻踩刹车两次\",{\"1\":{\"322\":1,\"326\":1}}],[\"轻踩两次刹车\",{\"1\":{\"321\":1}}],[\"轻踩两次刹车减速\",{\"1\":{\"318\":1}}],[\"轻信\",{\"1\":{\"135\":1}}],[\"轻量级锁\",{\"1\":{\"97\":1}}],[\"易于维护和升级\",{\"1\":{\"146\":1}}],[\"易怒\",{\"1\":{\"135\":1}}],[\"易受暗示和轻信\",{\"1\":{\"124\":1}}],[\"注意查看红绿灯\",{\"1\":{\"323\":1}}],[\"注意行人\",{\"1\":{\"319\":1}}],[\"注意事项\",{\"0\":{\"303\":1},\"1\":{\"308\":2,\"318\":1,\"326\":1}}],[\"注册监听\",{\"0\":{\"217\":1}}],[\"注册内部后置处理器\",{\"1\":{\"213\":1}}],[\"注册不支持排序的后置处理器\",{\"1\":{\"213\":1}}],[\"注册支持优先排序的后置处理器\",{\"1\":{\"213\":1}}],[\"注册bean的后置处理器\",{\"0\":{\"213\":1}}],[\"注册一个用于监听探测的postprocessor类\",{\"0\":{\"208\":1}}],[\"注册一批环境变量\",{\"0\":{\"210\":1}}],[\"注册一批\",{\"0\":{\"207\":1}}],[\"注重情感\",{\"1\":{\"134\":1}}],[\"注解用法详解\",{\"0\":{\"38\":1}}],[\"愿意屈服于威望\",{\"1\":{\"134\":1}}],[\"刑事案件的陪审团\",{\"0\":{\"134\":1}}],[\"农民阶级\",{\"1\":{\"132\":1}}],[\"劳工\",{\"1\":{\"132\":1}}],[\"僧录\",{\"1\":{\"132\":1}}],[\"身份团体\",{\"1\":{\"132\":1}}],[\"宗教派别\",{\"1\":{\"132\":1}}],[\"派别\",{\"1\":{\"132\":1}}],[\"陪审团的判决独立于他们的人员成分\",{\"1\":{\"134\":1}}],[\"陪审团\",{\"1\":{\"131\":1}}],[\"崇高与否无关\",{\"1\":{\"127\":1}}],[\"推理和想象力\",{\"0\":{\"126\":1}}],[\"法不责众\",{\"1\":{\"125\":1}}],[\"专横和保守\",{\"1\":{\"124\":1}}],[\"偏执\",{\"1\":{\"124\":1}}],[\"偏向锁\",{\"1\":{\"97\":1}}],[\"情绪的专张与单纯\",{\"1\":{\"124\":1}}],[\"冲动和易变\",{\"1\":{\"124\":1}}],[\"急躁\",{\"1\":{\"124\":1}}],[\"行进两三米\",{\"1\":{\"326\":1}}],[\"行至车头左前方\",{\"1\":{\"310\":1}}],[\"行驶\",{\"1\":{\"321\":2}}],[\"行驶时速\",{\"1\":{\"308\":1}}],[\"行驶证只能在登记地办理业务\",{\"1\":{\"289\":1}}],[\"行驶证\",{\"1\":{\"289\":1}}],[\"行为类\",{\"0\":{\"164\":1}}],[\"行为受本能支配\",{\"1\":{\"122\":1}}],[\"行锁加间歇锁\",{\"1\":{\"33\":1}}],[\"形象\",{\"1\":{\"139\":1}}],[\"形成原因\",{\"0\":{\"122\":1}}],[\"形式参数明明是一个接口类型\",{\"1\":{\"47\":1}}],[\"感情和行为易受感染\",{\"1\":{\"122\":1}}],[\"感情和思想朝既定方向发展\",{\"1\":{\"120\":1}}],[\"感到被拒绝\",{\"1\":{\"110\":1}}],[\"个体自觉让个性消失\",{\"1\":{\"120\":1}}],[\"个人优势\",{\"0\":{\"1\":1}}],[\"群体不是思想者\",{\"1\":{\"140\":1}}],[\"群体不受理性影响\",{\"1\":{\"128\":1}}],[\"群体都有服从领袖的本能\",{\"1\":{\"140\":1}}],[\"群体领袖\",{\"0\":{\"140\":1}}],[\"群体更喜欢幻觉\",{\"1\":{\"139\":1}}],[\"群体行为具有绝对的无意识性\",{\"1\":{\"133\":1}}],[\"群体在犯罪时也许并不是心理犯罪\",{\"1\":{\"133\":1}}],[\"群体容易感动于神奇的事物\",{\"1\":{\"129\":1}}],[\"群体接受的相似性只存在于表面\",{\"1\":{\"128\":1}}],[\"群体有时比独处时高尚\",{\"1\":{\"125\":1}}],[\"群体中的个体有\",{\"1\":{\"125\":1}}],[\"群体中的个体分散在不同地点\",{\"1\":{\"120\":1}}],[\"群体间的暗示\",{\"1\":{\"122\":1}}],[\"群体易于无畏也易于犯罪\",{\"1\":{\"121\":1}}],[\"群体受无意识支配\",{\"1\":{\"121\":1}}],[\"群体的意见和信念\",{\"0\":{\"137\":1}}],[\"群体的分类\",{\"0\":{\"130\":1}}],[\"群体的形象思维\",{\"1\":{\"129\":1}}],[\"群体的想象力极其强大\",{\"1\":{\"129\":1}}],[\"群体的想象力\",{\"0\":{\"129\":1}}],[\"群体的推理能力低下\",{\"1\":{\"128\":1}}],[\"群体的推理能力\",{\"0\":{\"128\":1}}],[\"群体的观念\",{\"0\":{\"126\":1,\"127\":1}}],[\"群体的道德特征\",{\"0\":{\"125\":1}}],[\"群体的情感特征\",{\"0\":{\"124\":1}}],[\"群体的情感及道德观\",{\"0\":{\"123\":1}}],[\"群体的智力低于个体\",{\"1\":{\"121\":1}}],[\"群体的构成\",{\"0\":{\"120\":1}}],[\"群体的普通特征\",{\"0\":{\"119\":1}}],[\"乌合之众\",{\"0\":{\"118\":1},\"2\":{\"143\":1}}],[\"江湖散记\",{\"2\":{\"116\":1}}],[\"基类才能真正被复用\",{\"1\":{\"146\":1}}],[\"基本上都是吃饱了没事干闲的\",{\"1\":{\"115\":1}}],[\"基于上条\",{\"1\":{\"294\":1}}],[\"基于面向对象设计\",{\"1\":{\"171\":1}}],[\"基于这样的诉求\",{\"1\":{\"47\":1}}],[\"基于事件机制的服务内削峰和低耦合\",{\"0\":{\"22\":1}}],[\"基于此\",{\"1\":{\"8\":1,\"16\":1}}],[\"拖着疲倦的身子回家的人感叹过\",{\"1\":{\"115\":1}}],[\"拖延\",{\"0\":{\"108\":1}}],[\"生活态度\",{\"2\":{\"117\":1}}],[\"生活过的比你好时\",{\"1\":{\"115\":1}}],[\"生成操作\",{\"1\":{\"305\":1}}],[\"生成的静态代码\",{\"1\":{\"90\":1}}],[\"生成一个新的流\",{\"1\":{\"47\":1}}],[\"拒绝学习\",{\"0\":{\"115\":1}}],[\"头发和胸和腰和屁股比脸蛋重要\",{\"1\":{\"114\":1}}],[\"煲汤比写诗重要\",{\"1\":{\"114\":1}}],[\"王朔曾经跟他女儿说\",{\"1\":{\"114\":1}}],[\"然而心中有存着一丝希翼\",{\"1\":{\"114\":1}}],[\"然后调整座椅靠背至垂直略靠后一格\",{\"1\":{\"310\":1}}],[\"然后等看到同龄人薪资比你高\",{\"1\":{\"115\":1}}],[\"然后从中寻找自我安慰\",{\"1\":{\"113\":1}}],[\"然后将结果一起输出\",{\"1\":{\"47\":1}}],[\"然后入参按顺序写入\",{\"1\":{\"47\":1}}],[\"然后通过汇总得知\",{\"1\":{\"15\":1}}],[\"怕终于知道自己并非珠玉\",{\"1\":{\"114\":1}}],[\"害怕自己的付出得不到回报\",{\"1\":{\"114\":1}}],[\"害怕犯错\",{\"1\":{\"114\":1}}],[\"害怕被别人知道自己的缺点\",{\"1\":{\"114\":1}}],[\"害怕被领导批评\",{\"1\":{\"114\":1}}],[\"害怕别人觉得自己无能\",{\"1\":{\"114\":1}}],[\"害怕拒绝\",{\"0\":{\"110\":1}}],[\"谨小慎微的懦弱\",{\"1\":{\"114\":1}}],[\"恐惧\",{\"0\":{\"114\":1}}],[\"要退缩\",{\"1\":{\"113\":1}}],[\"遇到挑战\",{\"1\":{\"113\":1}}],[\"遇到风险\",{\"1\":{\"113\":1}}],[\"遇到困难\",{\"1\":{\"113\":1}}],[\"遇到压力\",{\"1\":{\"113\":1}}],[\"喜欢找借口的人\",{\"1\":{\"113\":1}}],[\"喜欢随心所欲\",{\"1\":{\"112\":1}}],[\"人行横道\",{\"1\":{\"319\":2}}],[\"人行横道灯路段\",{\"1\":{\"311\":1}}],[\"人行道停车\",{\"1\":{\"308\":2}}],[\"人故意车没动\",{\"1\":{\"289\":1}}],[\"人员死亡事故中逃逸\",{\"1\":{\"289\":1}}],[\"人员轻伤事故中逃逸\",{\"1\":{\"289\":1}}],[\"人随意\",{\"1\":{\"289\":1}}],[\"人生没有一个坚定的信念\",{\"1\":{\"113\":1}}],[\"人一旦犯了错\",{\"1\":{\"113\":1}}],[\"人的悲剧在于眼高手低\",{\"1\":{\"112\":1}}],[\"人的天性又是好逸恶劳\",{\"1\":{\"109\":1}}],[\"你又在朋友圈感叹时运不济\",{\"1\":{\"115\":1}}],[\"你才能找到安全感\",{\"1\":{\"112\":1}}],[\"你应该注释那个方法而不是它的类\",{\"1\":{\"39\":1}}],[\"觉得现实世界很残酷\",{\"1\":{\"112\":1}}],[\"沉迷游戏或是魔幻小说\",{\"1\":{\"112\":1}}],[\"经验可以让真理在群体心中扎根\",{\"1\":{\"139\":1}}],[\"经验\",{\"1\":{\"139\":1}}],[\"经常做白日梦\",{\"1\":{\"112\":1}}],[\"经过一些讨论\",{\"1\":{\"14\":1}}],[\"白日梦患者\",{\"1\":{\"112\":1}}],[\"平庸的人总是在抱怨自己不懂的东西\",{\"1\":{\"111\":1}}],[\"平台内对于应用事件的包装\",{\"1\":{\"25\":1}}],[\"往上再走一步\",{\"1\":{\"111\":1}}],[\"却也剥夺了我\",{\"1\":{\"111\":1}}],[\"暂时维护我的自我价值感\",{\"1\":{\"111\":1}}],[\"尝尝暗示自己\",{\"1\":{\"111\":1}}],[\"尝试调用\",{\"0\":{\"61\":1}}],[\"杀死自己的潜能力\",{\"1\":{\"111\":1}}],[\"痛\",{\"1\":{\"110\":1}}],[\"厚重而脆弱的自尊\",{\"1\":{\"110\":1}}],[\"世界上有80\",{\"1\":{\"109\":1}}],[\"懒惰是很奇怪的东西\",{\"1\":{\"108\":1}}],[\"罗兰说\",{\"1\":{\"108\":1}}],[\"罗曼\",{\"1\":{\"108\":1}}],[\"抱着能拖一天是一天的心态各种借口逃避\",{\"1\":{\"108\":1}}],[\"望而却步\",{\"1\":{\"108\":1}}],[\"把横在面前的困难放大\",{\"1\":{\"108\":1}}],[\"计数器结束工作\",{\"1\":{\"305\":1}}],[\"计时器开始工作\",{\"1\":{\"305\":1}}],[\"计时器\",{\"1\":{\"305\":2}}],[\"计时开始\",{\"1\":{\"295\":1}}],[\"计时结束\",{\"1\":{\"294\":1,\"295\":1}}],[\"计划很丰满\",{\"1\":{\"108\":1}}],[\"计算机科学\",{\"2\":{\"104\":1,\"174\":1}}],[\"计算两个时间的秒数差\",{\"1\":{\"47\":1}}],[\"计算两个日期的差\",{\"1\":{\"47\":1}}],[\"计算两个日期间的天数\",{\"1\":{\"47\":1}}],[\"计算类\",{\"1\":{\"47\":2}}],[\"畏惧错误就是毁灭进步\",{\"1\":{\"107\":1}}],[\"黑德说\",{\"1\":{\"107\":1}}],[\"雷厉风行难免会犯错\",{\"1\":{\"107\":1}}],[\"像墙头草一样摇摆不定的人\",{\"1\":{\"107\":1}}],[\"像java一样的高级编程语言都在尽可能的模糊指针的概念\",{\"1\":{\"47\":1}}],[\"比使用单个接口要好\",{\"1\":{\"146\":1}}],[\"比鲁莽更糟糕的是犹豫不决\",{\"1\":{\"107\":1}}],[\"比如上一题是开启远光灯\",{\"1\":{\"303\":1}}],[\"比如非懒加载的bean\",{\"0\":{\"218\":1}}],[\"比如说消息队列实现的功能\",{\"1\":{\"167\":1}}],[\"比如说\",{\"1\":{\"159\":1}}],[\"比如你给了对方一个微笑的眼神\",{\"1\":{\"110\":1}}],[\"比如爱人突然的离去或者被朋友背叛和疏远\",{\"1\":{\"110\":1}}],[\"比如某月的第一天或最后一天\",{\"1\":{\"47\":1}}],[\"比如\",{\"1\":{\"24\":1,\"47\":1,\"88\":1}}],[\"比如pg\",{\"1\":{\"16\":1}}],[\"犹豫不决\",{\"0\":{\"107\":1}}],[\"决不能碰的九种人生状态\",{\"0\":{\"106\":1}}],[\"域名服务器协议\",{\"1\":{\"103\":1}}],[\"文件传输协议\",{\"1\":{\"103\":1}}],[\"文件格式验证\",{\"0\":{\"81\":1}}],[\"控制传输协议\",{\"1\":{\"103\":1}}],[\"报文段\",{\"1\":{\"103\":1}}],[\"地址解析协议\",{\"1\":{\"103\":1}}],[\"网际控制消息协议\",{\"1\":{\"103\":1}}],[\"网络通信\",{\"2\":{\"105\":1}}],[\"网络通信四层模型\",{\"0\":{\"103\":1}}],[\"网络文件系统协议\",{\"1\":{\"103\":1}}],[\"网络层\",{\"1\":{\"103\":1}}],[\"网络接口\",{\"1\":{\"103\":1}}],[\"国际协议\",{\"1\":{\"103\":1}}],[\"负责实现一切与应用程序相关的功能\",{\"1\":{\"103\":1}}],[\"负责实际数据的传输\",{\"1\":{\"103\":1}}],[\"负责提供可靠的传输服务\",{\"1\":{\"103\":1}}],[\"负责网络间的寻址数据传输\",{\"1\":{\"103\":1}}],[\"点对点协议\",{\"1\":{\"103\":1}}],[\"帧\",{\"1\":{\"103\":1}}],[\"协议\",{\"1\":{\"103\":1}}],[\"功能\",{\"1\":{\"103\":1}}],[\"层次名称\",{\"1\":{\"103\":1}}],[\"层级\",{\"1\":{\"34\":1}}],[\"取反\",{\"1\":{\"100\":1}}],[\"位非\",{\"1\":{\"100\":1}}],[\"位异或\",{\"1\":{\"100\":1}}],[\"~\",{\"1\":{\"100\":1}}],[\"^\",{\"1\":{\"100\":1}}],[\"仅当同位都为1时输出1\",{\"1\":{\"100\":1}}],[\"仅仅有极少量的辅助型方法\",{\"1\":{\"47\":1}}],[\"空虚寂寞冷\",{\"1\":{\"115\":1}}],[\"空位补0\",{\"1\":{\"100\":1}}],[\"空指针异常\",{\"1\":{\"47\":1}}],[\"空指针是我们永远也绕不开的一个痛点\",{\"1\":{\"44\":1}}],[\"忽略一部分aware的实现类\",{\"0\":{\"206\":1}}],[\"忽略符号位\",{\"1\":{\"100\":1}}],[\"忽略流中的后几个元素\",{\"1\":{\"47\":1}}],[\"忽略流中的前几个元素\",{\"1\":{\"47\":1}}],[\"向方向盘向右打死\",{\"1\":{\"295\":1}}],[\"向前补n个0\",{\"1\":{\"100\":1}}],[\"向后补n个0\",{\"1\":{\"100\":1}}],[\"舍弃后n位\",{\"1\":{\"100\":1}}],[\"舍弃前n位\",{\"1\":{\"100\":1}}],[\"乘以2的n次幂\",{\"1\":{\"100\":1}}],[\"实时交通信息tsr\",{\"1\":{\"289\":1}}],[\"实例封装启动参数\",{\"1\":{\"252\":1}}],[\"实例\",{\"0\":{\"272\":1,\"276\":1,\"277\":1},\"1\":{\"100\":1,\"249\":1,\"252\":1,\"254\":1,\"262\":1,\"263\":2,\"264\":1,\"280\":1}}],[\"实现五秒内答题\",{\"1\":{\"305\":1}}],[\"实现开闭原则的关键步骤就是抽象化\",{\"1\":{\"146\":1}}],[\"实现一个热插拔的效果\",{\"1\":{\"146\":1}}],[\"实现哪个抽象函数的\",{\"1\":{\"47\":1}}],[\"实现的\",{\"1\":{\"29\":1}}],[\"实现方案\",{\"0\":{\"9\":1,\"17\":1}}],[\"线程id\",{\"1\":{\"97\":1}}],[\"前等候\",{\"1\":{\"319\":1}}],[\"前方选择合适地点靠边停车\",{\"1\":{\"326\":1}}],[\"前方路口直行\",{\"1\":{\"325\":1}}],[\"前方路口请左转\",{\"1\":{\"321\":1}}],[\"前方路口请右转\",{\"1\":{\"314\":1}}],[\"前方会车\",{\"1\":{\"322\":1}}],[\"前方请直行\",{\"1\":{\"320\":1}}],[\"前方寻找合适地点掉头\",{\"1\":{\"318\":1}}],[\"前方超车\",{\"1\":{\"316\":1}}],[\"前方\",{\"1\":{\"314\":1}}],[\"前方防碰撞预警\",{\"1\":{\"289\":1}}],[\"前照灯\",{\"1\":{\"305\":1}}],[\"前车窗是扇形灯标\",{\"1\":{\"289\":1}}],[\"前25位无用\",{\"1\":{\"97\":1}}],[\"前n天\",{\"1\":{\"47\":1}}],[\"锁标记\",{\"1\":{\"97\":1}}],[\"状态模式\",{\"0\":{\"171\":1}}],[\"状态\",{\"1\":{\"97\":1}}],[\"放到当前classloader中\",{\"0\":{\"92\":1}}],[\"收集编译器生产的赋值操作后\",{\"1\":{\"90\":1}}],[\"收集当前类中的静态代码块信息\",{\"1\":{\"90\":1}}],[\"非机行人\",{\"1\":{\"289\":1}}],[\"非机行人是祖宗\",{\"1\":{\"289\":1}}],[\"非则\",{\"0\":{\"231\":1}}],[\"非懒加载\",{\"0\":{\"228\":1}}],[\"非抽象类\",{\"0\":{\"228\":1}}],[\"非applicationcontext上下文\",{\"1\":{\"190\":1}}],[\"非构造函数\",{\"0\":{\"90\":1}}],[\"非静态函数还可以这么包装\",{\"1\":{\"47\":1}}],[\"非静态方法\",{\"1\":{\"47\":1}}],[\"初始化回调\",{\"0\":{\"268\":1}}],[\"初始化生命周期管理\",{\"0\":{\"235\":1}}],[\"初始化非懒加载的bean\",{\"0\":{\"224\":1}}],[\"初始化上下文转换服务\",{\"0\":{\"219\":1}}],[\"初始化事件传播器\",{\"0\":{\"215\":1}}],[\"初始化消息源\",{\"0\":{\"214\":1}}],[\"初始化这个reader对象\",{\"1\":{\"200\":1}}],[\"初始化属性资源\",{\"1\":{\"195\":1}}],[\"初始化\",{\"0\":{\"90\":1}}],[\"供对象后续调用时使用\",{\"1\":{\"89\":1}}],[\"伴随着解析部分\",{\"1\":{\"84\":1}}],[\"符号引用验证\",{\"0\":{\"84\":1}}],[\"魔数开头\",{\"1\":{\"81\":1}}],[\"折中的方法可以让虚拟机预热类\",{\"0\":{\"80\":1}}],[\"认证当前类所属的包是否在签名内\",{\"0\":{\"77\":1}}],[\"开启远近交替\",{\"1\":{\"311\":2}}],[\"开启远近交替<\",{\"1\":{\"305\":1}}],[\"开启远光灯\",{\"1\":{\"311\":1}}],[\"开启近光灯\",{\"1\":{\"311\":2}}],[\"开启示廓灯\",{\"1\":{\"311\":1}}],[\"开启车门后\",{\"1\":{\"310\":1}}],[\"开启双闪灯<\",{\"1\":{\"305\":1}}],[\"开启\",{\"1\":{\"305\":1,\"321\":1}}],[\"开启前照灯\",{\"1\":{\"303\":1,\"311\":1}}],[\"开启左转向灯准备起步\",{\"1\":{\"312\":1}}],[\"开启左转向灯\",{\"1\":{\"295\":1,\"297\":1}}],[\"开始回方向盘\",{\"1\":{\"326\":1}}],[\"开始向右回方向\",{\"1\":{\"318\":1}}],[\"开始考试\",{\"0\":{\"312\":1}}],[\"开始进行考试\",{\"1\":{\"311\":1}}],[\"开始灯光模拟考试\",{\"1\":{\"311\":1}}],[\"开始其他考试\",{\"1\":{\"303\":1,\"305\":1}}],[\"开始答题\",{\"1\":{\"302\":1}}],[\"开始右出库\",{\"1\":{\"294\":1}}],[\"开始右倒库\",{\"1\":{\"294\":1}}],[\"开始左倒库\",{\"1\":{\"294\":1}}],[\"开始左出库\",{\"1\":{\"294\":1}}],[\"开闭原则的意思是\",{\"1\":{\"146\":1}}],[\"开闭原则\",{\"1\":{\"146\":1}}],[\"开头的一般与\",{\"1\":{\"289\":5}}],[\"开头\",{\"0\":{\"75\":1}}],[\"开发笔记\",{\"2\":{\"12\":1,\"21\":1,\"28\":1,\"193\":1,\"240\":1,\"288\":1}}],[\"准备阶段\",{\"1\":{\"320\":1}}],[\"准备直行\",{\"1\":{\"313\":1}}],[\"准备开始灯光模拟考试\",{\"1\":{\"310\":1}}],[\"准备下一轮\",{\"1\":{\"305\":2}}],[\"准备上下文\",{\"0\":{\"265\":1}}],[\"准备环境\",{\"0\":{\"248\":1}}],[\"准备bean工厂\",{\"0\":{\"201\":1}}],[\"准备刷新\",{\"0\":{\"195\":1}}],[\"准备\",{\"0\":{\"72\":1,\"85\":1,\"262\":1},\"1\":{\"294\":2}}],[\"验证必要属性必须存在\",{\"1\":{\"195\":1}}],[\"验证指令是否合法\",{\"1\":{\"83\":1}}],[\"验证\",{\"0\":{\"72\":1,\"80\":1}}],[\"记录车辆当前灯光状态\",{\"1\":{\"305\":1}}],[\"记录启动时间\",{\"0\":{\"242\":1}}],[\"记录加载类找到的类个数\",{\"0\":{\"70\":1}}],[\"记录加载器开始查找时间\",{\"0\":{\"69\":1}}],[\"记录去父加载器中查找的耗时\",{\"0\":{\"68\":1}}],[\"记录类加载器指标\",{\"0\":{\"67\":1}}],[\"记录当前时间\",{\"0\":{\"58\":1},\"1\":{\"305\":1}}],[\"再背靠车身坐入主驾\",{\"1\":{\"310\":1}}],[\"再次关闭车门\",{\"1\":{\"326\":1}}],[\"再次开启\",{\"1\":{\"315\":1}}],[\"再次为环境添加附加源\",{\"0\":{\"260\":1}}],[\"再次通过getbean加载此对象\",{\"1\":{\"230\":1}}],[\"再次记录当前时间\",{\"0\":{\"65\":1}}],[\"再不需要在项目初次启动时先运行数据库建表脚本\",{\"1\":{\"19\":1}}],[\"查看远方车正后停车\",{\"1\":{\"326\":1}}],[\"查看右前方是否有车辆驶来\",{\"1\":{\"318\":1}}],[\"查看右后视镜是否具备进入非机动车道条件\",{\"1\":{\"326\":1}}],[\"查看右后视镜下沿\",{\"1\":{\"295\":1}}],[\"查看右后视镜\",{\"1\":{\"295\":1}}],[\"查看道路右侧\",{\"1\":{\"317\":1,\"319\":1,\"324\":1}}],[\"查看\",{\"1\":{\"314\":2,\"315\":2,\"316\":1,\"326\":2}}],[\"查看前方红绿灯\",{\"1\":{\"313\":1}}],[\"查看车后方是否有非机动车\",{\"1\":{\"310\":1}}],[\"查看左车门把手\",{\"1\":{\"297\":1}}],[\"查看左后视镜\",{\"1\":{\"295\":1,\"312\":1}}],[\"查看是否设置了父加载器\",{\"0\":{\"59\":1}}],[\"查验类名是否符合规范\",{\"0\":{\"55\":1}}],[\"查询条件是否唯一索引和sql的执行计划都有着很大的关系\",{\"1\":{\"34\":1}}],[\"查询条件是否二级索引\",{\"1\":{\"34\":1}}],[\"查询条件是否主键\",{\"1\":{\"34\":1}}],[\"咱们已经落伍了\",{\"1\":{\"48\":1}}],[\"咱们都会这么写吧\",{\"1\":{\"47\":1}}],[\"每一题的操作步骤均与上一题后的灯光位置强相关\",{\"1\":{\"303\":1}}],[\"每一个版本的更新都或多或少有一些新的编程思想在里面\",{\"1\":{\"48\":1}}],[\"每天从早忙到晚\",{\"1\":{\"115\":1}}],[\"每个item读完后再读下一个item\",{\"1\":{\"47\":1}}],[\"每个程序员都希望自己的代码即简洁又易懂\",{\"1\":{\"47\":1}}],[\"原型模式\",{\"0\":{\"155\":1}}],[\"原流中符合要求的\",{\"1\":{\"47\":1}}],[\"原始版本的iterator\",{\"1\":{\"47\":1}}],[\"新生成的流中的数据是\",{\"1\":{\"47\":1}}],[\"新的日期包如下所示\",{\"1\":{\"47\":1}}],[\"惰性求值\",{\"1\":{\"47\":1}}],[\"产生一个最终结果\",{\"1\":{\"47\":1}}],[\"来拆分任务和加速处理过程\",{\"1\":{\"47\":1}}],[\"顾名思义\",{\"1\":{\"47\":1}}],[\"串行线路接口协议\",{\"1\":{\"103\":1}}],[\"串行流创建\",{\"1\":{\"47\":1}}],[\"串行化操作\",{\"1\":{\"47\":1}}],[\"串并行流机制也成为衡量的指标之一\",{\"1\":{\"44\":1}}],[\"遍历过一次后即用尽了\",{\"1\":{\"47\":1}}],[\"做出相应的数据转换\",{\"1\":{\"47\":1}}],[\"做一些缓存以优化性能\",{\"1\":{\"10\":1}}],[\"等待左转\",{\"1\":{\"321\":1}}],[\"等待系统语音播报\",{\"1\":{\"321\":1,\"322\":1,\"326\":1}}],[\"等待系统播报\",{\"1\":{\"316\":1,\"317\":1,\"319\":1,\"320\":1,\"322\":1,\"324\":1,\"325\":1,\"326\":1}}],[\"等待系统播报语音\",{\"1\":{\"313\":1,\"314\":1,\"316\":1,\"318\":1,\"320\":1}}],[\"等待监考系统播报语音\",{\"1\":{\"311\":1}}],[\"等待监考系统播放语音\",{\"1\":{\"311\":1}}],[\"等待评判和下一题\",{\"1\":{\"302\":1}}],[\"等候监考官发出开始考试指令\",{\"1\":{\"310\":1}}],[\"等效于\",{\"1\":{\"100\":1}}],[\"等\",{\"1\":{\"47\":1}}],[\"等等\",{\"1\":{\"47\":1}}],[\"高快路\",{\"1\":{\"289\":1}}],[\"高速上只能跑一百码\",{\"1\":{\"289\":1}}],[\"高速公路同向两车道\",{\"1\":{\"289\":1}}],[\"高速两道\",{\"1\":{\"289\":1}}],[\"高速逆行掉头12分\",{\"1\":{\"289\":1}}],[\"高速超速过50\",{\"1\":{\"289\":1}}],[\"高停9\",{\"1\":{\"289\":1}}],[\"高逆掉12\",{\"1\":{\"289\":1}}],[\"高度\",{\"1\":{\"111\":1}}],[\"高级链路控制协议\",{\"1\":{\"103\":1}}],[\"高级版本的stream\",{\"1\":{\"47\":1}}],[\"高效的\",{\"1\":{\"47\":1}}],[\"完成相关的聚合应用逻辑\",{\"1\":{\"47\":1}}],[\"完美解决\",{\"1\":{\"47\":1}}],[\"完美实现第二个业务场景\",{\"1\":{\"24\":1}}],[\"更易被说服\",{\"1\":{\"134\":1}}],[\"更多的时候是程序员需要用iterator来遍历集合\",{\"1\":{\"47\":1}}],[\"更新完成\",{\"1\":{\"31\":1}}],[\"更新语句执行过程\",{\"1\":{\"31\":1}}],[\"同方向近距离跟车行驶行驶\",{\"1\":{\"311\":1}}],[\"同方向近距离跟车驾驶\",{\"1\":{\"305\":1}}],[\"同上\",{\"1\":{\"260\":1}}],[\"同质性群体\",{\"0\":{\"132\":1}}],[\"同时\",{\"1\":{\"47\":1}}],[\"同步活动响应\",{\"1\":{\"25\":1}}],[\"同步活动发布\",{\"1\":{\"25\":1}}],[\"同步\",{\"0\":{\"22\":1}}],[\"极大的提高编程效率和程序可读性\",{\"1\":{\"47\":1}}],[\"或创建时有逻辑处理\",{\"1\":{\"154\":1}}],[\"或\",{\"1\":{\"100\":1,\"254\":1,\"308\":1}}],[\"或者你鼓起勇气给对方发了一个微信\",{\"1\":{\"110\":1}}],[\"或者导致一个副作用\",{\"1\":{\"47\":1}}],[\"或者以底层返回的数据为基础进行更上层的数据统计\",{\"1\":{\"47\":1}}],[\"或者大批量数据操作\",{\"1\":{\"47\":1}}],[\"或自己写一个\",{\"1\":{\"47\":2}}],[\"之后再加1\",{\"1\":{\"47\":1}}],[\"之间进行数据互转\",{\"1\":{\"6\":1}}],[\"静态和非静态最大的区别就在于方法中有无this关键字\",{\"1\":{\"47\":1}}],[\"静态方法\",{\"1\":{\"47\":1}}],[\"找一个\",{\"1\":{\"47\":2}}],[\"找到了\",{\"0\":{\"60\":1}}],[\"找到用于解析数据库类型进行后续操作的类\",{\"1\":{\"18\":1}}],[\"找到如下的函数\",{\"1\":{\"17\":1}}],[\"找到实现了java\",{\"1\":{\"17\":1}}],[\"及时不遵守也没事\",{\"1\":{\"47\":1}}],[\"冒号语法\",{\"1\":{\"47\":1}}],[\"看下面代码\",{\"1\":{\"47\":1}}],[\"看下面的两端代码\",{\"1\":{\"47\":1}}],[\"我心疼钱了\",{\"1\":{\"301\":1}}],[\"我从未见过\",{\"1\":{\"115\":1}}],[\"我不敢下苦工琢磨自己\",{\"1\":{\"114\":1}}],[\"我想做a\",{\"1\":{\"111\":1}}],[\"我写了一个代码块实现后\",{\"1\":{\"47\":1}}],[\"我们需要使用接口和抽象类\",{\"1\":{\"146\":1}}],[\"我们再来说说非静态方法\",{\"1\":{\"47\":1}}],[\"我们再回去看看这个接口的源码\",{\"1\":{\"47\":1}}],[\"我们想说静态方法\",{\"1\":{\"47\":1}}],[\"我们上面说过是一个接收一个参数\",{\"1\":{\"47\":1}}],[\"我们应该就看懂了\",{\"1\":{\"47\":1}}],[\"我们应该就知道了lambda其实就这么简单\",{\"1\":{\"47\":1}}],[\"我们希望将我们已经在类中的定义好的函数做为lambda式实参\",{\"1\":{\"47\":1}}],[\"我们聊了聊jdk8新引入的函数指针\",{\"1\":{\"47\":1}}],[\"我们就又要问了\",{\"1\":{\"47\":1}}],[\"我们先来看看jdk为我们提供了哪些像consumer一样的接口\",{\"1\":{\"47\":1}}],[\"我们看的可能有点闷\",{\"1\":{\"47\":1}}],[\"我们看看它的源码\",{\"1\":{\"47\":1}}],[\"我们看到了方法接收一个consumer接口\",{\"1\":{\"47\":1}}],[\"我们都知道\",{\"1\":{\"47\":1}}],[\"我们知道编译器在在见到lambda后\",{\"1\":{\"47\":1}}],[\"我们岂不是可以通过匿名内部类的方式实现调用\",{\"1\":{\"47\":1}}],[\"我们来看看list的父类iterable中看看foreach\",{\"1\":{\"47\":1}}],[\"我们来看看这个类的定义\",{\"1\":{\"47\":1}}],[\"我们其实还是比较喜欢用底层些的东西\",{\"1\":{\"47\":1}}],[\"我们尝试使用一种机制使程序在出现空指针的时候能够出现一个备选方案来解决这个问题\",{\"1\":{\"47\":1}}],[\"我们有java\",{\"1\":{\"47\":1}}],[\"我们有如下业务结构\",{\"1\":{\"47\":1}}],[\"我们有这样的一个需求\",{\"1\":{\"23\":2}}],[\"我们在人际关系中感受到的\",{\"1\":{\"110\":1}}],[\"我们在使用\",{\"1\":{\"47\":1}}],[\"我们在工具类中写了工具方法\",{\"1\":{\"47\":1}}],[\"我们在学习c语言的时候\",{\"1\":{\"47\":1}}],[\"我们在讨论需求后发现\",{\"1\":{\"24\":1}}],[\"我们在分析需求后觉得这必须是一个事务性的服务\",{\"1\":{\"23\":1}}],[\"我们不能等待解析完成后再对用户返回操作成功\",{\"1\":{\"23\":1}}],[\"我们觉得可以手动创建一批视图pg\",{\"1\":{\"16\":1}}],[\"我们觉得最小成本的修改应该是这样的\",{\"1\":{\"16\":1}}],[\"我们得知每一个实现了jdbc标准的driver都需要返回客户端一个字符串以表明自己的数据库名称\",{\"1\":{\"15\":1}}],[\"我们了解到这类工具在启动时会利用工具\",{\"1\":{\"15\":1}}],[\"我们的项目中需要使用工作流实现业务\",{\"1\":{\"14\":1}}],[\"我们可以看出\",{\"1\":{\"47\":1}}],[\"我们可以在借助这个包中的一些类扩展我们自己的日历系统\",{\"1\":{\"47\":1}}],[\"我们可以在调用get前使用ifpresent\",{\"1\":{\"47\":1}}],[\"我们可以通过自定义注解指定对象间互转的逻辑\",{\"1\":{\"8\":1}}],[\"我们可以抽象出对象的集成关系\",{\"1\":{\"8\":1}}],[\"我们抽象出一个\",{\"1\":{\"8\":1}}],[\"我们现在的需求是\",{\"1\":{\"7\":1}}],[\"我们发现大多数的domain对象和dto对象内的字段完全一致\",{\"1\":{\"6\":1}}],[\"我们后端在开发的过程中总是在domain\",{\"1\":{\"6\":1}}],[\"很多时候拖延就是在逃避问题和懒惰\",{\"1\":{\"108\":1}}],[\"很多时候不得不脱离\",{\"1\":{\"47\":1}}],[\"很多时候\",{\"1\":{\"47\":1}}],[\"很矛盾\",{\"1\":{\"47\":1}}],[\"了\",{\"1\":{\"47\":1}}],[\"了解flink的工作图生成过程与算子关系\",{\"1\":{\"1\":1}}],[\"了解hadoop\",{\"1\":{\"1\":1}}],[\"了解rocketmq运行机制\",{\"1\":{\"1\":1}}],[\"了解redis集群机制\",{\"1\":{\"1\":1}}],[\"了解zab选举算法运行原理\",{\"1\":{\"1\":1}}],[\"了解xa\",{\"1\":{\"1\":1}}],[\"了解\",{\"1\":{\"1\":1}}],[\"了解elasticsearch查询优化\",{\"1\":{\"1\":1}}],[\"了解mysql集群机制\",{\"1\":{\"1\":1}}],[\"了解dubbo的rpc调用逻辑\",{\"1\":{\"1\":1}}],[\"了解tcp\",{\"1\":{\"1\":1}}],[\"难不成我还得再写一遍\",{\"1\":{\"47\":1}}],[\"怎么办\",{\"1\":{\"47\":1}}],[\"上车阶段\",{\"0\":{\"310\":1}}],[\"上车准备\",{\"0\":{\"293\":1}}],[\"上倒是有灯光模拟练习\",{\"1\":{\"301\":1}}],[\"上下文加载完成事件\",{\"0\":{\"281\":1}}],[\"上下文就绪事件\",{\"0\":{\"269\":1}}],[\"上一步获取的资源不得为空\",{\"0\":{\"279\":1}}],[\"上一步获取到的对象是否为factorybean的子类实例\",{\"1\":{\"230\":1}}],[\"上一步如果不存在\",{\"1\":{\"252\":1}}],[\"上一步判断如果已经存在命令行属性\",{\"1\":{\"252\":1}}],[\"上面的内容\",{\"1\":{\"47\":1}}],[\"上面列举出来的四个典型的接口均来自java\",{\"1\":{\"47\":1}}],[\"上帝的归上帝\",{\"1\":{\"9\":1}}],[\"无限循环\",{\"1\":{\"326\":1}}],[\"无限流\",{\"1\":{\"47\":1}}],[\"无人道路最高70\",{\"1\":{\"289\":1}}],[\"无人道路40\",{\"1\":{\"289\":1}}],[\"无线34\",{\"1\":{\"289\":1}}],[\"无意识的情感是影响群体的主要因素\",{\"1\":{\"139\":1}}],[\"无名称的群体\",{\"1\":{\"131\":1}}],[\"无法面对不确定环境\",{\"1\":{\"112\":1}}],[\"无法识别的警告名称的存在不是错误\",{\"1\":{\"39\":1}}],[\"无拘无束的生活\",{\"1\":{\"112\":1}}],[\"无论其他方面多么强大\",{\"1\":{\"107\":1}}],[\"无符号右移\",{\"1\":{\"100\":1}}],[\"无用\",{\"1\":{\"97\":2}}],[\"无锁\",{\"1\":{\"97\":1}}],[\"无接收参数\",{\"1\":{\"47\":1}}],[\"无返回\",{\"1\":{\"47\":1}}],[\"还有乱借车\",{\"1\":{\"289\":1}}],[\"还不如舒舒服服躺在家玩手机看电影\",{\"1\":{\"115\":1}}],[\"还记得我们上面说的吗\",{\"1\":{\"47\":1}}],[\"还需要做别的操作\",{\"1\":{\"24\":1}}],[\"大致在桥梁上\",{\"1\":{\"320\":1}}],[\"大致左车头三分之一\",{\"1\":{\"318\":1}}],[\"大后天就要科三上车练习了\",{\"1\":{\"301\":1}}],[\"大车一百就扣分\",{\"1\":{\"289\":1}}],[\"大多数人的空虚寂寞冷\",{\"1\":{\"115\":1}}],[\"大多数人激动时佛挡杀佛\",{\"1\":{\"112\":1}}],[\"大多数时候\",{\"1\":{\"110\":1}}],[\"大意是\",{\"1\":{\"47\":1}}],[\"大部分的关系型数据库加锁的一个原则就是二阶段锁\",{\"1\":{\"32\":1}}],[\"发生未预期错误\",{\"1\":{\"305\":1}}],[\"发生交通事故并构成犯罪\",{\"1\":{\"289\":1}}],[\"发现他有一个标签修饰\",{\"1\":{\"47\":1}}],[\"发布\",{\"1\":{\"237\":1,\"270\":1}}],[\"发布上下文刷新事件\",{\"0\":{\"237\":1}}],[\"发布应用早期事件\",{\"1\":{\"217\":1}}],[\"发布活动\",{\"1\":{\"25\":4}}],[\"发布了\",{\"1\":{\"25\":1}}],[\"发布事件至\",{\"1\":{\"25\":1}}],[\"到达车道停止线前\",{\"1\":{\"314\":2}}],[\"到这里\",{\"1\":{\"47\":2}}],[\"到目前为止已经有很长时间了\",{\"1\":{\"44\":1}}],[\"接触路边缘实线后\",{\"1\":{\"326\":1}}],[\"接到监考官发出考试指令后\",{\"1\":{\"310\":1}}],[\"接下来我们说说这个\",{\"1\":{\"47\":1}}],[\"接下来\",{\"1\":{\"47\":1}}],[\"接收一个参数\",{\"1\":{\"47\":3}}],[\"接收消息后\",{\"1\":{\"24\":1}}],[\"接口实例\",{\"1\":{\"285\":2}}],[\"接口隔离原则\",{\"1\":{\"146\":1}}],[\"接口在方法区的内存位置信息\",{\"1\":{\"87\":1}}],[\"接口\",{\"0\":{\"87\":1}}],[\"接口的介绍我就不粘贴了\",{\"1\":{\"47\":1}}],[\"接口中是定义多个抽象方法的\",{\"1\":{\"47\":1}}],[\"帮助我们做了些什么吧\",{\"1\":{\"47\":1}}],[\"没逃逸的三年以下\",{\"1\":{\"289\":1}}],[\"没挂\",{\"1\":{\"289\":1}}],[\"没挂9\",{\"1\":{\"289\":1}}],[\"没挂好3\",{\"1\":{\"289\":1}}],[\"没死6\",{\"1\":{\"289\":1}}],[\"没进先停车\",{\"1\":{\"289\":1}}],[\"没事别作弊\",{\"1\":{\"289\":1}}],[\"没找到\",{\"0\":{\"61\":1}}],[\"没错\",{\"1\":{\"47\":1}}],[\"没有则创建一个\",{\"1\":{\"262\":1}}],[\"没有批判精神\",{\"1\":{\"135\":1}}],[\"没有逻辑推理能力\",{\"1\":{\"135\":1}}],[\"没有执着的追求\",{\"1\":{\"113\":1}}],[\"没有强烈的事业心\",{\"1\":{\"113\":1}}],[\"没有时区支持\",{\"1\":{\"47\":1}}],[\"没有之一\",{\"1\":{\"44\":1,\"47\":1}}],[\"居然可以传入一段代码块\",{\"1\":{\"47\":1}}],[\"既然知道原理了\",{\"1\":{\"47\":1}}],[\"既然是语法糖\",{\"1\":{\"47\":1}}],[\"既然在同一个线程中就可以实现异常的监控与控制\",{\"1\":{\"24\":1}}],[\"言归正传\",{\"1\":{\"47\":2}}],[\"那就多练呗\",{\"1\":{\"301\":1}}],[\"那就是在逻辑相同的代码中越简洁也就意味着越难懂\",{\"1\":{\"47\":1}}],[\"那非静态方法也就不特殊了\",{\"1\":{\"47\":1}}],[\"那我们现在看看是什么原理吧\",{\"1\":{\"47\":1}}],[\"那我们就自己写接口定义吧\",{\"1\":{\"47\":1}}],[\"那我们再看看consumer接口\",{\"1\":{\"47\":1}}],[\"那如果我有一个需要六个入参\",{\"1\":{\"47\":1}}],[\"那编译器是怎么知道我的lambda代码块是\",{\"1\":{\"47\":1}}],[\"那具体编译器帮我们干了什么呢\",{\"1\":{\"47\":1}}],[\"那帮写jdk的coder就使用了一种别的途径来实现了这个我们朝思暮想的功能\",{\"1\":{\"47\":1}}],[\"有人道路最高50\",{\"1\":{\"289\":1}}],[\"有人道路最高30\",{\"1\":{\"289\":1}}],[\"有人员伤亡\",{\"1\":{\"289\":1}}],[\"有线57\",{\"1\":{\"289\":1}}],[\"有违法行车行为的就报警\",{\"1\":{\"289\":1}}],[\"有点类似于简单工厂模式+模版方法模式的混合运用\",{\"1\":{\"151\":1}}],[\"有着难以改变的意见和易变的意见\",{\"1\":{\"136\":1}}],[\"有名称的群体\",{\"1\":{\"131\":1}}],[\"有时更低劣\",{\"1\":{\"125\":1}}],[\"有时候这种拒绝是很明显的\",{\"1\":{\"110\":1}}],[\"有时候\",{\"1\":{\"47\":1}}],[\"有关\",{\"1\":{\"110\":1}}],[\"有一个不成文的规定\",{\"1\":{\"47\":1}}],[\"有一种方式能让我们直接将已经定义好的isnull\",{\"1\":{\"47\":1}}],[\"有参构造器\",{\"1\":{\"47\":1}}],[\"有的人会问了\",{\"1\":{\"47\":1}}],[\"有且只有一个抽象方法\",{\"1\":{\"47\":1}}],[\"有编译器推断并帮助你转换包装为正常的代码\",{\"1\":{\"47\":1}}],[\"有可能是历史版本\",{\"1\":{\"30\":1}}],[\"虽然看起来很先进\",{\"1\":{\"47\":1}}],[\"虽然这样风险\",{\"1\":{\"47\":1}}],[\"成绩合格\",{\"1\":{\"305\":1}}],[\"成绩不合格\",{\"1\":{\"305\":4}}],[\"成本都会提升会很大\",{\"1\":{\"47\":1}}],[\"成功回调\",{\"1\":{\"25\":2}}],[\"都和\",{\"1\":{\"110\":1}}],[\"都听说过一个名词\",{\"1\":{\"47\":1}}],[\"都会加上锁\",{\"1\":{\"30\":1}}],[\"zoneid\",{\"1\":{\"47\":8}}],[\"zone包\",{\"1\":{\"47\":1}}],[\"芝加哥\",{\"1\":{\"47\":1}}],[\"默认状态\",{\"1\":{\"311\":1}}],[\"默认为\",{\"1\":{\"244\":1}}],[\"默认时区\",{\"1\":{\"47\":1}}],[\"默认事件描述\",{\"1\":{\"25\":1}}],[\"时\",{\"1\":{\"319\":1,\"321\":1}}],[\"时区\",{\"1\":{\"47\":2}}],[\"时间\",{\"1\":{\"138\":1}}],[\"时间戳\",{\"1\":{\"47\":1}}],[\"时间类的定义并不一致\",{\"1\":{\"47\":1}}],[\"时间api之前\",{\"1\":{\"47\":1}}],[\"月数\",{\"1\":{\"47\":1}}],[\"周数\",{\"1\":{\"47\":1}}],[\"构建时间\",{\"1\":{\"47\":1}}],[\"构建时间对象\",{\"1\":{\"47\":1}}],[\"构造器本质上也是一个静态方法嘛\",{\"1\":{\"47\":1}}],[\"构造器\",{\"1\":{\"25\":2,\"47\":1}}],[\"根据springapplication类中设置banner属性\",{\"1\":{\"262\":1}}],[\"根据\",{\"1\":{\"259\":1}}],[\"根据beanname获取已经创建好的bean\",{\"0\":{\"232\":1}}],[\"根据beanname获取本地bean定义信息缓存\",{\"0\":{\"227\":1}}],[\"根据beanname创建bean\",{\"0\":{\"226\":1}}],[\"根据类名获取锁对象\",{\"0\":{\"53\":1}}],[\"根据lambda返回的值\",{\"1\":{\"47\":1}}],[\"根据年月日\",{\"1\":{\"47\":1}}],[\"根据对象创建容器\",{\"1\":{\"47\":1}}],[\"格式化打印\",{\"1\":{\"47\":1}}],[\"格式化和解析日期时间对象\",{\"1\":{\"47\":1}}],[\"格式化以及解析\",{\"1\":{\"47\":1}}],[\"日常生活中却没法鼓起勇气和每个周末早上都要拿电钻钻墙的邻居好好谈一谈\",{\"1\":{\"112\":1}}],[\"日期类并不提供国际化\",{\"1\":{\"47\":1}}],[\"日志对象和一些常量\",{\"1\":{\"305\":1}}],[\"日志对象\",{\"1\":{\"25\":1}}],[\"因此我们可以使用更少的代码来实现同样的功能\",{\"1\":{\"47\":1}}],[\"因此java引入了java\",{\"1\":{\"47\":1}}],[\"因此他们都不是线程安全的\",{\"1\":{\"47\":1}}],[\"因为很难再逆方向调整回来\",{\"1\":{\"294\":1}}],[\"因为这个时候还无法感知这部分动作\",{\"0\":{\"206\":1}}],[\"因为找借口是最容易办到的事情\",{\"1\":{\"113\":1}}],[\"因为在你营造的白日梦里\",{\"1\":{\"112\":1}}],[\"因为b\",{\"1\":{\"111\":1}}],[\"因为坚持的过程总是枯燥又充满挫折的\",{\"1\":{\"109\":1}}],[\"因为为了避免其他事务在此时更新id列\",{\"1\":{\"34\":1}}],[\"因为无法保证事务的隔离性\",{\"1\":{\"33\":1}}],[\"此阶段无系统播报\",{\"1\":{\"323\":1,\"324\":1}}],[\"此处不可减速\",{\"1\":{\"316\":1}}],[\"此处无系统语音播报\",{\"1\":{\"315\":1,\"317\":1,\"319\":1}}],[\"此时\",{\"1\":{\"312\":1}}],[\"此时需要至少拨动5次拨杆才能判定打光正确\",{\"1\":{\"303\":1}}],[\"此时夹角大于120度\",{\"1\":{\"295\":1}}],[\"此时夹角小于120度\",{\"1\":{\"295\":1}}],[\"此时只需要在聚簇索引上对应行上加行锁即可实现\",{\"1\":{\"34\":1}}],[\"此外用于格式化和解析的类在java\",{\"1\":{\"47\":1}}],[\"现在我们一一说明\",{\"1\":{\"47\":1}}],[\"现在\",{\"1\":{\"47\":2}}],[\"现在jdk8提供了一个default关键字\",{\"1\":{\"47\":1}}],[\"现有的与日期和时间相关的类存在诸多问题\",{\"1\":{\"47\":1}}],[\"让你逃避日常现实生活\",{\"1\":{\"112\":1}}],[\"让我们先来看一下为什么我们需要这样一个新的api\",{\"1\":{\"47\":1}}],[\"让其始终认为自己连接的是pgsql\",{\"1\":{\"16\":1}}],[\"否则会超时退出考试\",{\"1\":{\"303\":1}}],[\"否则会unsupportedtemporaltypeexception\",{\"1\":{\"47\":1}}],[\"否则就一分\",{\"1\":{\"289\":1}}],[\"否则可自行解决\",{\"1\":{\"289\":1}}],[\"否则通过\",{\"1\":{\"262\":1}}],[\"否则输出0\",{\"1\":{\"100\":1}}],[\"否则抛出安全异常\",{\"0\":{\"77\":1},\"1\":{\"75\":1}}],[\"否则报错\",{\"1\":{\"47\":1}}],[\"否则运行内部类并返回内部类的return\",{\"1\":{\"47\":2}}],[\"否则\",{\"1\":{\"47\":1}}],[\"返回时间间隔\",{\"1\":{\"305\":1}}],[\"返回期望的目标灯光\",{\"1\":{\"305\":1}}],[\"返回值的类型都是通过最后一个泛型来定义的\",{\"1\":{\"47\":1}}],[\"返回值为你在内部类中返回的对象加工而成的容器\",{\"1\":{\"47\":1}}],[\"返回一个值\",{\"1\":{\"47\":1}}],[\"返回一个布尔\",{\"1\":{\"47\":1}}],[\"返回一个参数的接口\",{\"1\":{\"47\":1}}],[\"返回一个参数\",{\"1\":{\"47\":3}}],[\"返回一个空的容器\",{\"1\":{\"47\":1}}],[\"返回来\",{\"1\":{\"47\":1}}],[\"返回对象\",{\"1\":{\"47\":2}}],[\"返回当前对象\",{\"1\":{\"47\":1}}],[\"返回给server层进行处理\",{\"1\":{\"34\":1}}],[\"访问容器中的对象\",{\"1\":{\"47\":1}}],[\"区别是当dto为空时\",{\"1\":{\"47\":1}}],[\"翻译\",{\"1\":{\"47\":1}}],[\"首先\",{\"1\":{\"47\":1}}],[\"首先将文档保存至服务器后再上传到es数据库中解析文档\",{\"1\":{\"23\":1}}],[\"体验感极差\",{\"1\":{\"47\":1}}],[\"总开关\",{\"1\":{\"305\":1}}],[\"总控\",{\"1\":{\"305\":1}}],[\"总控状态\",{\"1\":{\"305\":1}}],[\"总出题数\",{\"1\":{\"305\":1}}],[\"总找借口\",{\"0\":{\"113\":1}}],[\"总关注在他人对自己的态度\",{\"1\":{\"110\":1}}],[\"总觉得它无处不在\",{\"1\":{\"47\":1}}],[\"总结\",{\"1\":{\"34\":1}}],[\"货车类也不需要关心这两个方法的实现\",{\"1\":{\"47\":1}}],[\"支持子类对刷新的扩展\",{\"0\":{\"216\":1}}],[\"支持我们在接口中定义实现\",{\"1\":{\"47\":1}}],[\"支持的思考与解决方案\",{\"0\":{\"13\":1}}],[\"物体类中有一个已实现的getcolor方法\",{\"1\":{\"47\":1}}],[\"单击回车提交答案\",{\"1\":{\"302\":1}}],[\"单词\",{\"1\":{\"289\":1}}],[\"单例模式\",{\"0\":{\"153\":1}}],[\"单位\",{\"1\":{\"103\":1}}],[\"单继承的局限性越来越大\",{\"1\":{\"47\":1}}],[\"单继承多实现\",{\"1\":{\"47\":1}}],[\"单向\",{\"1\":{\"7\":1,\"47\":1}}],[\"一定一定要让车辆再运行一段时间\",{\"1\":{\"326\":1}}],[\"一是因为车速快的话能尽早结束这一百米\",{\"1\":{\"320\":1}}],[\"一共会随机生成六道题\",{\"1\":{\"303\":1}}],[\"一百四十和五十\",{\"1\":{\"289\":1}}],[\"一种复杂的工厂模式\",{\"1\":{\"152\":1}}],[\"一些最普通的信念是不容易改变的\",{\"1\":{\"141\":1}}],[\"一去不复返\",{\"1\":{\"47\":1}}],[\"一般java\",{\"1\":{\"47\":1}}],[\"一直以来都是程序员最头疼的一个点\",{\"1\":{\"47\":1}}],[\"一直以来java的以\",{\"1\":{\"47\":1}}],[\"一个门面对象封装了自己的多个模块\",{\"1\":{\"158\":1}}],[\"一个实体应当尽量少地与其他实体之间发生相互作用\",{\"1\":{\"146\":1}}],[\"一个人越是百无一用的时候\",{\"1\":{\"110\":1}}],[\"一个能放下自尊去做事情的人\",{\"1\":{\"110\":1}}],[\"一个是服务细节影响最终结果\",{\"1\":{\"24\":1}}],[\"一个接口仅能实现一个特定类转换到另一个特定类\",{\"1\":{\"7\":1}}],[\"部分新特性\",{\"0\":{\"47\":1}}],[\"尚可\",{\"1\":{\"44\":1}}],[\"针对接口编程\",{\"1\":{\"146\":1}}],[\"针对以上的这些问题\",{\"1\":{\"44\":1}}],[\"针对与写操作\",{\"1\":{\"34\":1}}],[\"针对与读操作\",{\"1\":{\"34\":1}}],[\"50\",{\"1\":{\"289\":8}}],[\"54位\",{\"1\":{\"97\":1}}],[\"56\",{\"1\":{\"47\":1}}],[\"55\",{\"1\":{\"47\":1}}],[\"5\",{\"1\":{\"44\":1,\"47\":2,\"305\":5,\"308\":1}}],[\"相当于工厂中仅生产\",{\"1\":{\"152\":1}}],[\"相对于真理\",{\"1\":{\"139\":1}}],[\"相反为1\",{\"1\":{\"100\":1}}],[\"相反他们会返回一个持有结果的新的stream\",{\"1\":{\"47\":1}}],[\"相同位置的数相同为0\",{\"1\":{\"100\":1}}],[\"相关\",{\"1\":{\"289\":10}}],[\"相关操作\",{\"1\":{\"47\":1}}],[\"相关度算法\",{\"1\":{\"1\":1}}],[\"相较于c语言\",{\"1\":{\"44\":1}}],[\"造成这个结果的还有一部分原因是使用的是关系数据库\",{\"1\":{\"44\":1}}],[\"他让你以为那是安逸\",{\"1\":{\"108\":1}}],[\"他允许将我们把已经定义在类中的函数\",{\"1\":{\"47\":1}}],[\"他们在工作中总会有这样的感受\",{\"1\":{\"114\":1}}],[\"他们就不承担\",{\"1\":{\"113\":1}}],[\"他们都有一个共同的特点\",{\"1\":{\"113\":1}}],[\"他们可以引领你走进那个神奇浩繁的世界\",{\"1\":{\"112\":1}}],[\"他们还没去做之前\",{\"1\":{\"111\":1}}],[\"他们经常这样说\",{\"1\":{\"111\":1}}],[\"他们均来源自java\",{\"1\":{\"47\":1}}],[\"他们大多数的理由是herbinate对于优化的成本偏高\",{\"1\":{\"44\":1}}],[\"他的实现机制时通过运行时反射将同名属性之间进行拷贝\",{\"1\":{\"7\":1}}],[\"反之则改变状态\",{\"1\":{\"305\":1}}],[\"反向地址解析协议\",{\"1\":{\"103\":1}}],[\"反倒更喜欢用mybatis这种需要直接操作过程语言sql这样的orm\",{\"1\":{\"44\":1}}],[\"反编译kingbase数据库连接驱动kingbase8\",{\"1\":{\"17\":1}}],[\"举个例子\",{\"1\":{\"44\":1,\"47\":2}}],[\"也可以是将自己的右腿置于道路中心\",{\"1\":{\"320\":1}}],[\"也不想承担\",{\"1\":{\"113\":1}}],[\"也不需要再针对数据库加字段什么的汇总脚本各个环境先同步数据库\",{\"1\":{\"19\":1}}],[\"也保障了类的静态代码块有且仅运行一次\",{\"1\":{\"60\":1}}],[\"也许\",{\"1\":{\"47\":1}}],[\"也就意味着在没改变虚拟机的情况下\",{\"1\":{\"47\":1}}],[\"也是最头疼的异常\",{\"1\":{\"44\":1}}],[\"也发现了一些jdk5的局限性\",{\"1\":{\"44\":1}}],[\"也将成为我们优化代码效率一个事倍功半的思路\",{\"1\":{\"44\":1}}],[\"多变\",{\"1\":{\"141\":1}}],[\"多痛苦啊\",{\"1\":{\"115\":1}}],[\"多线程机制等等\",{\"1\":{\"44\":1}}],[\"多出来的数据也会被加上行锁\",{\"1\":{\"34\":1}}],[\"垃圾回收机制\",{\"1\":{\"44\":1}}],[\"集合机制\",{\"1\":{\"44\":1}}],[\"衡量一个高级编程语言的实用性有很多方面\",{\"1\":{\"44\":1}}],[\"字符时\",{\"1\":{\"302\":1}}],[\"字符串文字相关的警告\",{\"1\":{\"40\":1}}],[\"字符串\",{\"1\":{\"39\":1}}],[\"字段解析\",{\"0\":{\"88\":1}}],[\"字段相关的警告\",{\"1\":{\"40\":1}}],[\"字节码验证\",{\"0\":{\"83\":1}}],[\"语句中缺失条目相关的警告\",{\"1\":{\"40\":1}}],[\"语句中缺少中断相关的警告\",{\"1\":{\"40\":1}}],[\"块不返回的警告\",{\"1\":{\"40\":1}}],[\"抑制相对于\",{\"1\":{\"40\":1}}],[\"抑制与未使用代码相关的警告\",{\"1\":{\"40\":1}}],[\"抑制与未经检查的操作相关的警告\",{\"1\":{\"40\":1}}],[\"抑制与不合格的字段访问相关的警告\",{\"1\":{\"40\":1}}],[\"抑制与不正确的静态访问相关的警告\",{\"1\":{\"40\":1}}],[\"抑制与来自内部类的未优化访问相关的警告\",{\"1\":{\"40\":1}}],[\"抑制与可序列化类的缺少\",{\"1\":{\"40\":1}}],[\"抑制与使用不鼓励或禁止的引用有关的警告\",{\"1\":{\"40\":1}}],[\"抑制与空分析相关的警告\",{\"1\":{\"40\":1}}],[\"抑制与非\",{\"1\":{\"40\":1}}],[\"抑制与隐藏变量的局部变量相关的警告\",{\"1\":{\"40\":1}}],[\"抑制与\",{\"1\":{\"40\":2}}],[\"抑制与弃用相关的警告\",{\"1\":{\"40\":1}}],[\"抑制与弃用注释相关的警告\",{\"1\":{\"40\":1}}],[\"抑制与转换操作相关的警告\",{\"1\":{\"40\":1}}],[\"抑制与装箱\",{\"1\":{\"40\":1}}],[\"抑制所有警告\",{\"1\":{\"40\":1}}],[\"鼓励他们合作以确保相同的名称在多个编译器中工作\",{\"1\":{\"39\":1}}],[\"它强调降低依赖\",{\"1\":{\"146\":1}}],[\"它还有另外一个意思是\",{\"1\":{\"146\":1}}],[\"它更像一个高级版本的iterator\",{\"1\":{\"47\":1}}],[\"它是有关算法和计算的\",{\"1\":{\"47\":1}}],[\"它不是数据结构并不保存数据\",{\"1\":{\"47\":1}}],[\"它提供串行和并行两种模式进行汇聚操作\",{\"1\":{\"47\":1}}],[\"它专注于对容器对象进行各种非常便利\",{\"1\":{\"47\":1}}],[\"它与java\",{\"1\":{\"47\":1}}],[\"它允许我们在jvm上运行特定的js应用\",{\"1\":{\"47\":1}}],[\"它确实是一个很高级的思维方式\",{\"1\":{\"44\":1}}],[\"它们可以自由发出警告\",{\"1\":{\"39\":1}}],[\"它默认的事务隔离级别为rr\",{\"1\":{\"33\":1}}],[\"名称的第二次和连续出现将被忽略\",{\"1\":{\"39\":1}}],[\"允许重复名称\",{\"1\":{\"39\":1}}],[\"编程思想\",{\"1\":{\"44\":1}}],[\"编译器就是这么找到lambda表达式要去实现哪个方法\",{\"1\":{\"47\":1}}],[\"编译器干了原来该我们干的活\",{\"1\":{\"47\":1}}],[\"编译器供应商应记录他们支持的附加警告名称以及此注释类型\",{\"1\":{\"39\":1}}],[\"编译器必须忽略它们无法识别的任何警告名称\",{\"1\":{\"39\":1}}],[\"编译器在带注释的元素中禁止显示的一组警告\",{\"1\":{\"39\":1}}],[\"编码逻辑\",{\"0\":{\"8\":1,\"16\":1}}],[\"则方向盘向右打45度\",{\"1\":{\"326\":1}}],[\"则手动关闭\",{\"1\":{\"312\":1}}],[\"则回退至\",{\"1\":{\"305\":2}}],[\"则回退至0\",{\"1\":{\"305\":1}}],[\"则回退至2\",{\"1\":{\"305\":1}}],[\"则无须回半圈方向\",{\"1\":{\"294\":1}}],[\"则创建一个\",{\"0\":{\"283\":1}}],[\"则注册到\",{\"0\":{\"273\":1}}],[\"则将env对象中的\",{\"1\":{\"267\":1}}],[\"则将其的classloader设置为context对象的classloader\",{\"1\":{\"267\":1}}],[\"则将其设置为context对象的resourceloader\",{\"1\":{\"267\":1}}],[\"则将签名放到当前class类中\",{\"0\":{\"93\":1}}],[\"则设置允许bean定义覆盖为\",{\"0\":{\"275\":1}}],[\"则设置允许循环引用为\",{\"0\":{\"274\":1}}],[\"则设置成\",{\"1\":{\"244\":1}}],[\"则设置standardbeanexpressionresolver对象用于解析spel表达式\",{\"0\":{\"203\":1}}],[\"则赋值为默认保护域\",{\"0\":{\"76\":1}}],[\"则校验class对象\",{\"0\":{\"71\":1}}],[\"则执行代码块\",{\"1\":{\"47\":1}}],[\"则返回默认值\",{\"1\":{\"47\":1}}],[\"则抑制适用于文件中的元素\",{\"1\":{\"39\":1}}],[\"则两个警告都将在该方法中被抑制\",{\"1\":{\"39\":1}}],[\"给定元素中抑制的警告集是所有包含元素中抑制的警告的超集\",{\"1\":{\"39\":1}}],[\"指示杆\",{\"1\":{\"317\":1,\"319\":1,\"324\":1}}],[\"指示应在带注释的元素\",{\"1\":{\"39\":1}}],[\"指向monitor的指针\",{\"1\":{\"97\":1}}],[\"指向持有锁线程的lockrecord的指针\",{\"1\":{\"97\":1}}],[\"指向常量池中的实际地址\",{\"1\":{\"88\":1}}],[\"指针是否合法\",{\"1\":{\"83\":1}}],[\"指令外\",{\"1\":{\"308\":1}}],[\"指令\",{\"1\":{\"31\":1}}],[\"源码是怎么定义的\",{\"1\":{\"47\":1}}],[\"源码\",{\"0\":{\"39\":1}}],[\"止疼片\",{\"1\":{\"38\":1}}],[\"就不要再进入了\",{\"1\":{\"321\":1}}],[\"就不要调整方向\",{\"1\":{\"294\":1}}],[\"就自己写了个小程序自己在家练反应吧\",{\"1\":{\"301\":1}}],[\"就担心五秒反应不过来\",{\"1\":{\"301\":1}}],[\"就和第二种情况一样了\",{\"1\":{\"294\":1}}],[\"就将其设置为true\",{\"1\":{\"261\":1}}],[\"就将出参写在最后\",{\"1\":{\"47\":2}}],[\"就通过\",{\"1\":{\"254\":1}}],[\"就新建一个\",{\"1\":{\"252\":1}}],[\"就创建一个\",{\"0\":{\"259\":1},\"1\":{\"252\":1}}],[\"就使用环境中的默认转换器进行转换\",{\"0\":{\"220\":1}}],[\"就迫使他们找借口\",{\"1\":{\"113\":1}}],[\"就退缩\",{\"1\":{\"113\":1}}],[\"就做到差不多就可以了\",{\"1\":{\"111\":1}}],[\"就先否定自己\",{\"1\":{\"111\":1}}],[\"就是将类的元信息在方法区内存中的偏移量赋给方法区中的类\",{\"1\":{\"89\":1}}],[\"就是看一下这个类是否还是空\",{\"1\":{\"71\":1}}],[\"就是把lambda代码块转换成了上面这段包含了匿名内部类的代码\",{\"1\":{\"47\":1}}],[\"就现状而言\",{\"1\":{\"48\":1}}],[\"就好比流水从面前流过\",{\"1\":{\"47\":1}}],[\"就比如驼峰命名法\",{\"1\":{\"47\":1}}],[\"就像上一条说的\",{\"1\":{\"303\":1}}],[\"就像\",{\"1\":{\"47\":1}}],[\"就像一粒\",{\"1\":{\"38\":1}}],[\"就更别说方法区的指针了\",{\"1\":{\"47\":1}}],[\"就算我们把物体和车定义成接口\",{\"1\":{\"47\":1}}],[\"就拿java引以为傲的oop来说\",{\"1\":{\"44\":1}}],[\"就拿我们朝夕相处的java来说\",{\"1\":{\"44\":1}}],[\"就会报错显示\",{\"1\":{\"14\":1}}],[\"警告\",{\"1\":{\"38\":1}}],[\"批注\",{\"1\":{\"38\":1}}],[\"批注允许您选择性地取消特定代码段\",{\"1\":{\"38\":1}}],[\"您就可以添加一个\",{\"1\":{\"38\":1}}],[\"您将调查它\",{\"1\":{\"38\":1}}],[\"其中每一个都在不同的线程中处理\",{\"1\":{\"47\":1}}],[\"其中包括如下这几个方面\",{\"1\":{\"47\":1}}],[\"其中的想法是当您看到警告时\",{\"1\":{\"38\":1}}],[\"其实设计模式就是从大型软件架构出发\",{\"1\":{\"146\":1}}],[\"其实就是心智的弱小\",{\"1\":{\"114\":1}}],[\"其实就是看这个字符串是否符合java类名命名规范\",{\"1\":{\"55\":1}}],[\"其实java中的方法本质上只有两种静态和非静态\",{\"1\":{\"47\":1}}],[\"其实lambda表达式的本质还只是一颗语法糖\",{\"1\":{\"47\":1}}],[\"其实\",{\"1\":{\"44\":2,\"47\":1}}],[\"其他时刻可在车道内\",{\"1\":{\"308\":1}}],[\"其他指令在听到后均需先减速\",{\"1\":{\"308\":1}}],[\"其他则创建并返回\",{\"1\":{\"249\":1}}],[\"其他方式\",{\"1\":{\"47\":1}}],[\"其他方案\",{\"0\":{\"18\":1}}],[\"其他\",{\"1\":{\"47\":1}}],[\"其他情况下是不会对数据进行加锁的\",{\"1\":{\"34\":1}}],[\"其他语句均加的是排它锁\",{\"1\":{\"30\":1}}],[\"告诉它对被批注的代码元素内部的某些警告保持静默\",{\"1\":{\"38\":1}}],[\"该注解的作用是给编译器一条指令\",{\"1\":{\"38\":1}}],[\"说服群体需要付出经验和代价\",{\"1\":{\"139\":1}}],[\"说白了就是向往游手好闲的生活\",{\"1\":{\"112\":1}}],[\"说明\",{\"1\":{\"38\":1}}],[\"说的是锁的操作分为两个阶段\",{\"1\":{\"32\":1}}],[\"中间位置\",{\"1\":{\"311\":1}}],[\"中间\",{\"1\":{\"289\":1,\"308\":1}}],[\"中间就九十\",{\"1\":{\"289\":1}}],[\"中介者模式\",{\"0\":{\"167\":1}}],[\"中产阶级\",{\"1\":{\"132\":1}}],[\"中抑制命名的编译器警告\",{\"1\":{\"39\":1}}],[\"中的\",{\"1\":{\"234\":1}}],[\"中的警告\",{\"1\":{\"38\":1}}],[\"中的一个概念\",{\"1\":{\"33\":1}}],[\"中\",{\"0\":{\"38\":1},\"1\":{\"289\":1}}],[\"两个以上的session对同一批共享数据的加锁顺序不一致导致的\",{\"1\":{\"35\":1}}],[\"死锁的关键在于\",{\"1\":{\"35\":1}}],[\"死锁的发生与否和执行了多少sql并没有一点关系\",{\"1\":{\"35\":1}}],[\"死锁原理与分析\",{\"0\":{\"35\":1}}],[\"最中间车道\",{\"1\":{\"313\":1}}],[\"最下端\",{\"1\":{\"311\":1}}],[\"最上端\",{\"1\":{\"311\":1}}],[\"最左侧车道\",{\"1\":{\"308\":9}}],[\"最右侧机动车道\",{\"1\":{\"323\":1}}],[\"最右侧机车道\",{\"1\":{\"308\":1}}],[\"最右侧\",{\"1\":{\"308\":1}}],[\"最右侧车道\",{\"1\":{\"308\":9}}],[\"最后调整座椅前后角度至右脚垂直与刹车踏板可将其拆至底\",{\"1\":{\"310\":1}}],[\"最后一道题恒等于\",{\"1\":{\"303\":1}}],[\"最后通过二级索引对聚簇索引加锁\",{\"1\":{\"34\":1}}],[\"最高不超过二万元\",{\"1\":{\"289\":1}}],[\"最高不超过五万元\",{\"1\":{\"289\":1}}],[\"最少知道原则是指\",{\"1\":{\"146\":1}}],[\"最复杂的部分\",{\"1\":{\"83\":1}}],[\"最终决定使用开源引擎activiti进行集成\",{\"1\":{\"14\":1}}],[\"所谓的犯罪群体\",{\"0\":{\"133\":1}}],[\"所有操作必须在5秒内完成\",{\"1\":{\"303\":1}}],[\"所有的\",{\"1\":{\"213\":1}}],[\"所有的日期类都是可变的\",{\"1\":{\"47\":1}}],[\"所有这些类都是不可变且线程安全的\",{\"1\":{\"47\":1}}],[\"所有常用的基础类都是这个包的一部分\",{\"1\":{\"47\":1}}],[\"所有dql语句走的都是快照读\",{\"1\":{\"34\":1}}],[\"所以必须是单例模式\",{\"1\":{\"305\":1}}],[\"所以里氏代换原则是对实现抽象化的具体步骤的规范\",{\"1\":{\"146\":1}}],[\"所以说\",{\"1\":{\"47\":1}}],[\"所以不会出现幻读情况\",{\"1\":{\"33\":1}}],[\"所以可以解决脏读问题\",{\"1\":{\"33\":1}}],[\"所以\",{\"1\":{\"8\":1,\"15\":1,\"18\":1,\"47\":3,\"110\":1,\"113\":1,\"303\":1}}],[\"才会启用间隙锁或nk锁\",{\"1\":{\"34\":1}}],[\"才会对符合条件的数据\",{\"1\":{\"34\":1}}],[\"二是因为车速快调整方向需转动的方向盘角度更小\",{\"1\":{\"320\":1}}],[\"二百六十和一百\",{\"1\":{\"289\":1}}],[\"二进制表达后\",{\"1\":{\"100\":2}}],[\"二级索引上还会加上红箭头指示的行锁\",{\"1\":{\"34\":1}}],[\"二阶段锁相对比较容易理解\",{\"1\":{\"32\":1}}],[\"6分\",{\"1\":{\"289\":8}}],[\"62位\",{\"1\":{\"97\":3}}],[\"6\",{\"1\":{\"47\":1,\"289\":1,\"305\":1,\"308\":1,\"315\":2,\"316\":1}}],[\"6的路子\",{\"1\":{\"44\":1}}],[\"6版本前不支持索引下推\",{\"1\":{\"34\":1}}],[\"6996847203171194108l\",{\"1\":{\"25\":1}}],[\"由观察者通知第三方\",{\"1\":{\"168\":1}}],[\"由此可见\",{\"1\":{\"146\":1}}],[\"由indexkey确定的连续范围将会加上间歇锁\",{\"1\":{\"34\":1}}],[\"由server层对数据进行再次过滤\",{\"1\":{\"34\":1}}],[\"需要向近怀方向拨动四次\",{\"1\":{\"303\":1}}],[\"需要远近光灯交替时\",{\"1\":{\"303\":1}}],[\"需要考虑int的最大值\",{\"1\":{\"100\":1}}],[\"需要使用其他where条件来进行过滤\",{\"1\":{\"34\":1}}],[\"需要根据是否节假日且用户是否设置节假日自动回复对消息进行自动回复处理\",{\"1\":{\"23\":1}}],[\"第几题\",{\"1\":{\"305\":1}}],[\"第五步\",{\"1\":{\"47\":2}}],[\"第四步\",{\"1\":{\"47\":2}}],[\"第三个数字代表双闪控制开关\",{\"1\":{\"305\":1}}],[\"第三个数字代表\",{\"1\":{\"302\":1}}],[\"第三步\",{\"1\":{\"47\":2}}],[\"第三部分\",{\"1\":{\"47\":1,\"295\":1}}],[\"第三把是在聚簇索引对应主键上加行锁\",{\"1\":{\"34\":1}}],[\"第二个数字代表左拨杆拨动次数\",{\"1\":{\"305\":1}}],[\"第二个数字代表\",{\"1\":{\"302\":1}}],[\"第二步\",{\"1\":{\"47\":2}}],[\"第二部分\",{\"1\":{\"47\":1,\"295\":1}}],[\"第二把是在非唯一索引对应记录的前后加入间歇锁\",{\"1\":{\"34\":1}}],[\"第一题恒等于\",{\"1\":{\"311\":1}}],[\"第一道恒等于\",{\"1\":{\"303\":1}}],[\"第一个数字代表灯光总开关拨动次数\",{\"1\":{\"305\":1}}],[\"第一个数字代表\",{\"1\":{\"302\":1}}],[\"第一反应常常是自我辩护\",{\"1\":{\"113\":1}}],[\"第一步\",{\"1\":{\"47\":2}}],[\"第一部分\",{\"1\":{\"47\":1,\"295\":1}}],[\"第一段\",{\"1\":{\"47\":1}}],[\"第一把是在非唯一索引对应记录上的行锁\",{\"1\":{\"34\":1}}],[\"第一把是在非唯一索引上对满足条件的行加锁\",{\"1\":{\"34\":1}}],[\"显然这是一个反范式优化\",{\"1\":{\"34\":1}}],[\"即车头二分之一\",{\"1\":{\"326\":1}}],[\"即后视镜中只要不全是库线\",{\"1\":{\"294\":1}}],[\"即回正\",{\"1\":{\"294\":2}}],[\"即使车没错也得承担至高10\",{\"1\":{\"289\":1}}],[\"即类或方法\",{\"1\":{\"38\":1}}],[\"即对数据不加锁\",{\"1\":{\"34\":1}}],[\"即当server层过滤后发现多余的数据不需要加锁后\",{\"1\":{\"34\":1}}],[\"即可实现\",{\"1\":{\"24\":1}}],[\"为上下文添加一个\",{\"0\":{\"277\":1}}],[\"为上下文设置一个\",{\"0\":{\"276\":1}}],[\"为name\",{\"1\":{\"258\":1}}],[\"为环境添加附加源\",{\"0\":{\"254\":1}}],[\"为真则创建一个\",{\"0\":{\"251\":1}}],[\"为\",{\"1\":{\"223\":1,\"267\":1,\"280\":3}}],[\"为true\",{\"1\":{\"223\":1}}],[\"为一个业务操作创建一条响应其操作的多个组件的有序组合\",{\"1\":{\"173\":1}}],[\"为类中的静态变量开辟内存空间\",{\"1\":{\"85\":1}}],[\"为什么入参却是代码块\",{\"1\":{\"47\":1}}],[\"为什么会在聚簇索引上加锁呢\",{\"1\":{\"34\":1}}],[\"为了效率考量\",{\"1\":{\"34\":1}}],[\"为例\",{\"1\":{\"34\":1}}],[\"14\",{\"1\":{\"308\":1}}],[\"1分\",{\"1\":{\"289\":1}}],[\"1int\",{\"1\":{\"100\":3}}],[\"110\",{\"1\":{\"289\":2}}],[\"11\",{\"1\":{\"97\":1,\"308\":1}}],[\"1位\",{\"1\":{\"97\":2}}],[\"100\",{\"1\":{\"289\":3}}],[\"10\",{\"1\":{\"47\":4,\"97\":2,\"289\":1,\"305\":1,\"308\":1}}],[\"13\",{\"1\":{\"47\":1,\"308\":1}}],[\"15\",{\"1\":{\"47\":2,\"308\":1}}],[\"120\",{\"1\":{\"289\":2}}],[\"12分\",{\"1\":{\"289\":9}}],[\"1234645\",{\"1\":{\"47\":1}}],[\"12\",{\"1\":{\"47\":2,\"308\":1}}],[\"18\",{\"1\":{\"47\":1}}],[\"1\",{\"1\":{\"34\":1,\"47\":9,\"100\":9,\"289\":1,\"302\":5,\"305\":21,\"308\":1}}],[\"19\",{\"1\":{\"9\":1,\"47\":1}}],[\"以逆时针方向绕车一周\",{\"1\":{\"310\":1}}],[\"以此类推\",{\"1\":{\"302\":1}}],[\"以空格分割\",{\"1\":{\"302\":1}}],[\"以上\",{\"1\":{\"289\":4}}],[\"以下\",{\"1\":{\"289\":2}}],[\"以便尽早注册其变压器\",{\"0\":{\"221\":1}}],[\"以及带注释的元素中包含的所有程序元素\",{\"1\":{\"39\":1}}],[\"以使您不会再看到警告\",{\"1\":{\"38\":1}}],[\"以\",{\"1\":{\"34\":1,\"258\":1,\"267\":1,\"289\":7}}],[\"以匹配对象在各生命周期的运行\",{\"1\":{\"6\":1}}],[\"和\",{\"0\":{\"271\":1},\"1\":{\"252\":1,\"263\":1,\"308\":3,\"314\":1}}],[\"和加出的和一致的lambda接口\",{\"1\":{\"47\":2}}],[\"和ofnullable\",{\"1\":{\"47\":1}}],[\"和ifpresent\",{\"1\":{\"47\":1}}],[\"和数据区间\",{\"1\":{\"34\":1}}],[\"和dto\",{\"1\":{\"6\":1}}],[\"避免了幻读问题\",{\"1\":{\"33\":1}}],[\"重复11和12条下车\",{\"1\":{\"326\":1}}],[\"重复读\",{\"1\":{\"33\":1}}],[\"重新包装\",{\"0\":{\"225\":1}}],[\"重量级锁\",{\"1\":{\"97\":1}}],[\"重写\",{\"1\":{\"25\":1}}],[\"是奇数则不改变灯光状态\",{\"1\":{\"305\":1}}],[\"是为了\",{\"1\":{\"305\":1}}],[\"是为了将\",{\"1\":{\"305\":1}}],[\"是为了使程序的扩展性好\",{\"1\":{\"146\":1}}],[\"是将这个120度夹角重新调整回与道路平行\",{\"1\":{\"295\":1}}],[\"是将与道路平行的车身通过倒车调整至与库口虚线呈120度夹角\",{\"1\":{\"295\":1}}],[\"是以这个120度的夹角将车的左后轮退至库口虚线内\",{\"1\":{\"295\":1}}],[\"是则打印\",{\"0\":{\"271\":1}}],[\"是则将当前环境中的属性源添加合并到\",{\"1\":{\"252\":1}}],[\"是则运行bean的aftersingletonsinstantiated函数\",{\"0\":{\"232\":1}}],[\"是则\",{\"0\":{\"230\":1},\"1\":{\"230\":1}}],[\"是则抛出空指针异常\",{\"1\":{\"71\":1}}],[\"是单例\",{\"0\":{\"228\":1}}],[\"是继承复用的基石\",{\"1\":{\"146\":1}}],[\"是遵从目标成果导向的人\",{\"1\":{\"110\":1}}],[\"是消沉\",{\"1\":{\"108\":1}}],[\"是倦怠\",{\"1\":{\"108\":1}}],[\"是福气\",{\"1\":{\"108\":1}}],[\"是休息\",{\"1\":{\"108\":1}}],[\"是否具备开门条件\",{\"1\":{\"326\":1}}],[\"是否主容器\",{\"0\":{\"271\":1}}],[\"是否包含\",{\"0\":{\"257\":1}}],[\"是否是\",{\"1\":{\"254\":1}}],[\"是否存在\",{\"1\":{\"252\":1}}],[\"是否允许循环引用\",{\"1\":{\"199\":1}}],[\"是否允许bean定义覆盖\",{\"1\":{\"199\":1}}],[\"是否偏向\",{\"1\":{\"97\":1}}],[\"是否有继承链\",{\"1\":{\"82\":1}}],[\"是否运行当前插件\",{\"1\":{\"25\":1}}],[\"是对容器对象功能的增强\",{\"1\":{\"47\":1}}],[\"是一个接收两个参数\",{\"1\":{\"47\":1}}],[\"是\",{\"1\":{\"33\":1}}],[\"事务隔离级别分为四种\",{\"1\":{\"33\":1}}],[\"事务隔离级别\",{\"0\":{\"33\":1},\"1\":{\"33\":1}}],[\"事件是个同步操作\",{\"1\":{\"25\":1}}],[\"事件是个异步操作\",{\"1\":{\"25\":1}}],[\"事件\",{\"1\":{\"25\":1,\"246\":1}}],[\"事件对象\",{\"1\":{\"25\":1}}],[\"事件执行函数\",{\"1\":{\"25\":1}}],[\"事件监听的基类\",{\"1\":{\"25\":1}}],[\"事件数据\",{\"1\":{\"25\":2}}],[\"事件备注\",{\"1\":{\"25\":2}}],[\"事件名称\",{\"1\":{\"25\":2}}],[\"事件与活动的包装\",{\"1\":{\"25\":1}}],[\"事件发布后在同一个线程中线性调用监听器的响应\",{\"1\":{\"24\":1}}],[\"彼此不相交\",{\"1\":{\"32\":1}}],[\"会车结束\",{\"1\":{\"322\":1}}],[\"会车阶段\",{\"0\":{\"322\":1},\"1\":{\"308\":1}}],[\"会抛出一个nosuchelementexception\",{\"1\":{\"47\":1}}],[\"会抛出空指针\",{\"1\":{\"47\":1}}],[\"会由server层再次过滤\",{\"1\":{\"34\":1}}],[\"会立即通知engine层将锁释放\",{\"1\":{\"34\":1}}],[\"会通过\",{\"1\":{\"31\":1}}],[\"会根据定义好的xml内容对数据库的初始化\",{\"1\":{\"19\":1}}],[\"后\",{\"1\":{\"312\":2,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"322\":1,\"324\":1,\"326\":1}}],[\"后视镜中近我端\",{\"1\":{\"294\":2}}],[\"后视镜中远我端\",{\"1\":{\"294\":1}}],[\"后车窗是方形灯标\",{\"1\":{\"289\":1}}],[\"后面的具体设计中我们会提到这点\",{\"1\":{\"146\":1}}],[\"后n天\",{\"1\":{\"47\":1}}],[\"后续我们可以使用函数指针替代匿名内部类\",{\"1\":{\"47\":1}}],[\"后续会再放到undolog中\",{\"1\":{\"31\":1}}],[\"后运行初始化表\",{\"1\":{\"15\":1}}],[\"申请一个事务id\",{\"1\":{\"31\":1}}],[\"先调整座椅高度至最高\",{\"1\":{\"310\":1}}],[\"先站到副驾驶门口处\",{\"1\":{\"310\":1}}],[\"先看有没线\",{\"1\":{\"289\":1}}],[\"先停车查看\",{\"1\":{\"289\":1}}],[\"先将第一个参数写成一个实例对象\",{\"1\":{\"47\":1}}],[\"先将入参按顺序写入\",{\"1\":{\"47\":1}}],[\"先开启一个事务\",{\"1\":{\"31\":1}}],[\"先导项目\",{\"1\":{\"2\":1}}],[\"外观\",{\"0\":{\"158\":1}}],[\"外\",{\"1\":{\"30\":1}}],[\"关闭远光灯\",{\"1\":{\"311\":1}}],[\"关闭前照灯\",{\"1\":{\"311\":1}}],[\"关闭后必须立即再次打开\",{\"1\":{\"308\":1}}],[\"关闭双闪灯<\",{\"1\":{\"305\":1}}],[\"关闭\",{\"1\":{\"305\":3}}],[\"关闭所有灯光\",{\"1\":{\"303\":1,\"305\":2,\"311\":1}}],[\"关闭发动器自动启停功能\",{\"1\":{\"293\":1}}],[\"关闭事件\",{\"1\":{\"270\":1}}],[\"关闭启动上下文\",{\"0\":{\"270\":1}}],[\"关闭则直接返回\",{\"1\":{\"262\":1}}],[\"关联上下文\",{\"1\":{\"200\":1}}],[\"关键字\",{\"1\":{\"40\":1}}],[\"关键字加的是共享锁\",{\"1\":{\"30\":1}}],[\"关于金仓数据库不被主流框架\",{\"0\":{\"13\":1}}],[\"关于domain对象与dto对象间的相互拷贝的思考与优化思路\",{\"0\":{\"5\":1}}],[\"除非人事故意的或车就没发动\",{\"1\":{\"289\":1}}],[\"除串行化模式下\",{\"1\":{\"34\":1}}],[\"除在事务隔离级别为serializable模式下\",{\"1\":{\"34\":1}}],[\"除\",{\"1\":{\"30\":1}}],[\"除自动回复外\",{\"1\":{\"24\":1}}],[\"udp\",{\"1\":{\"103\":1}}],[\"util\",{\"1\":{\"47\":6,\"305\":13}}],[\"util和java\",{\"1\":{\"47\":1}}],[\"until\",{\"1\":{\"47\":4}}],[\"unused\",{\"1\":{\"40\":1}}],[\"unqualified\",{\"1\":{\"40\":1}}],[\"unchecked\",{\"1\":{\"39\":1,\"40\":1,\"305\":1}}],[\"uncommitted\",{\"1\":{\"33\":1}}],[\"unboxing\",{\"1\":{\"9\":11}}],[\"update\",{\"1\":{\"30\":2}}],[\"warning\",{\"1\":{\"289\":1}}],[\"w\",{\"1\":{\"289\":1}}],[\"webapplicationtype属性\",{\"1\":{\"263\":1}}],[\"webapplicationtype\",{\"1\":{\"259\":1}}],[\"week\",{\"1\":{\"47\":1}}],[\"weeks\",{\"1\":{\"47\":3}}],[\"withnano\",{\"1\":{\"47\":1}}],[\"withdayofyear\",{\"1\":{\"47\":1}}],[\"withdayofmonth\",{\"1\":{\"47\":1}}],[\"with\",{\"1\":{\"47\":2}}],[\"withassertions\",{\"1\":{\"25\":1}}],[\"will\",{\"1\":{\"47\":2}}],[\"while\",{\"1\":{\"305\":1}}],[\"which\",{\"1\":{\"47\":1}}],[\"where条件中不能通过索引处理的查询条件\",{\"1\":{\"34\":1}}],[\"where\",{\"1\":{\"30\":5,\"34\":1}}],[\"当左转待转车道有两辆车及以上后\",{\"1\":{\"321\":1}}],[\"当左前库角线出现在后视镜的中心位置时\",{\"1\":{\"295\":1}}],[\"当\",{\"1\":{\"312\":2}}],[\"当具备后\",{\"1\":{\"312\":1}}],[\"当考官接过证件后\",{\"1\":{\"310\":1}}],[\"当控制台打印\",{\"1\":{\"302\":1}}],[\"当其与左侧边缘线重合时\",{\"1\":{\"297\":1}}],[\"当其触及库口第一个虚线段前边缘时\",{\"1\":{\"295\":1}}],[\"当坐于库边线时\",{\"1\":{\"294\":1}}],[\"当车辆过指示杆后\",{\"1\":{\"317\":1,\"319\":1,\"324\":1}}],[\"当车头完全盖过人行横道后\",{\"1\":{\"314\":1,\"321\":1}}],[\"当车头右凸起棱处\",{\"1\":{\"296\":1}}],[\"当车头中心处触及道路中线时\",{\"1\":{\"295\":1}}],[\"当车头左凸起棱与左边线重合时\",{\"1\":{\"296\":1}}],[\"当车头左凸起棱与库延长线重合后\",{\"1\":{\"295\":1}}],[\"当车头左凸起棱与库边线重合后\",{\"1\":{\"294\":2}}],[\"当车头左边缘处\",{\"1\":{\"296\":1}}],[\"当车头左三分之一处触及道路中线时\",{\"1\":{\"295\":1}}],[\"当车身与库线平行时\",{\"1\":{\"294\":2}}],[\"当库口延长线已经接触后视镜下沿时\",{\"1\":{\"294\":1}}],[\"当库口延长线与左后视镜裂纹处重合后\",{\"1\":{\"294\":2}}],[\"当库口虚线与前门把手迟迟不接触\",{\"1\":{\"294\":1}}],[\"当库口虚线与前门把手接触时\",{\"1\":{\"294\":2}}],[\"当库边线内侧与左后视镜裂纹处重合后\",{\"1\":{\"294\":2}}],[\"当前方向盘向左一圈\",{\"1\":{\"318\":1}}],[\"当前方向盘向左一圈又四分之一\",{\"1\":{\"318\":1}}],[\"当前题需要远近交替\",{\"1\":{\"303\":1}}],[\"当前门把手前端进入库口虚线时\",{\"1\":{\"295\":1}}],[\"当前门把手接触库口线右侧第一段虚线四分之一处时\",{\"1\":{\"294\":1}}],[\"当前车门把手末端触及库口虚线时\",{\"1\":{\"295\":1}}],[\"当前车门把手接触库口线左侧第一段虚线四分之一处时\",{\"1\":{\"294\":1}}],[\"当前读返回的记录\",{\"1\":{\"30\":1}}],[\"当前读\",{\"1\":{\"30\":3}}],[\"当与非机行人发生事故时\",{\"1\":{\"289\":1}}],[\"当使用串行方式去遍历时\",{\"1\":{\"47\":1}}],[\"当容器内对象不为空时\",{\"1\":{\"47\":2}}],[\"当容器中数据不为空时执行代码\",{\"1\":{\"47\":1}}],[\"当数据发生改变后通知观察者\",{\"1\":{\"168\":1}}],[\"当数据容器为空时\",{\"1\":{\"47\":1}}],[\"当数据无法通过索引进行精准匹配时\",{\"1\":{\"34\":1}}],[\"当符合定义的过滤规则或容器内的数据为空时\",{\"1\":{\"47\":1}}],[\"当然不用\",{\"1\":{\"47\":1}}],[\"当然我们也可以在非iso的日历上\",{\"1\":{\"47\":1}}],[\"当然\",{\"1\":{\"44\":1,\"47\":1}}],[\"当id非主键也无唯一索引时\",{\"1\":{\"34\":1}}],[\"当id非主键但其上有唯一索引时\",{\"1\":{\"34\":1}}],[\"当id列非主键但存在非唯一索引时\",{\"1\":{\"34\":1}}],[\"当id列非主键也无唯一索引时\",{\"1\":{\"34\":1}}],[\"当id为主键时\",{\"1\":{\"34\":1}}],[\"当装箱后的对象和拆箱后的对象本质上是一个对象\",{\"1\":{\"8\":1}}],[\"与道路中心对齐\",{\"1\":{\"296\":1,\"297\":1}}],[\"与库口第一段虚线重合后\",{\"1\":{\"294\":1}}],[\"与前车50米\",{\"1\":{\"289\":1}}],[\"与前车100米\",{\"1\":{\"289\":1}}],[\"与逻辑无关\",{\"1\":{\"129\":1}}],[\"与计算是将两个数的二进制表示后进行对位比较\",{\"1\":{\"100\":1}}],[\"与\",{\"1\":{\"100\":1,\"311\":2,\"318\":1}}],[\"与当前读\",{\"1\":{\"30\":1}}],[\"与mvcc相对的是lbcc\",{\"1\":{\"29\":1}}],[\"快照读会退化成当前读\",{\"1\":{\"33\":1}}],[\"快照读\",{\"1\":{\"30\":3}}],[\"可先探身进入车内将座椅向后调整\",{\"1\":{\"310\":1}}],[\"可适当调整方向盘\",{\"1\":{\"296\":2}}],[\"可在驶出库区后手动关闭\",{\"1\":{\"295\":1,\"297\":1}}],[\"可稍微向右\",{\"1\":{\"295\":1}}],[\"可解析依赖项\",{\"0\":{\"207\":1}}],[\"可能包含或不包含非空值的容器对象\",{\"1\":{\"47\":1}}],[\"可能并不四种全部支持\",{\"1\":{\"33\":1}}],[\"可选值\",{\"0\":{\"40\":1}}],[\"可大幅度增加系统的并发性能\",{\"1\":{\"29\":1}}],[\"可以通过虚拟机关闭验证阶段以加快类的加载\",{\"0\":{\"80\":1}}],[\"可以通过一些jdk8的新特性所折射出的思维和工具类来改变我们对编程方式的改变\",{\"1\":{\"44\":1}}],[\"可以将我们常用的方法均包装成lambda\",{\"1\":{\"47\":1}}],[\"可以帮我们包装哪些函数\",{\"1\":{\"47\":1}}],[\"可以调用这个包下的类自定义解析方式\",{\"1\":{\"47\":1}}],[\"可以读取到未提交的记录\",{\"1\":{\"33\":1}}],[\"可以实现函数级异步操作\",{\"1\":{\"24\":1}}],[\"可以基于\",{\"1\":{\"10\":1}}],[\"可以理解为装箱后运走\",{\"1\":{\"8\":1}}],[\"可以理解为拆箱后存入数据库\",{\"1\":{\"8\":1}}],[\"可以一个属性对多个属性\",{\"1\":{\"7\":1}}],[\"可以运行时动态的一对多转换\",{\"1\":{\"7\":1}}],[\"读事件\",{\"0\":{\"286\":1}}],[\"读书笔记\",{\"2\":{\"142\":1}}],[\"读后感\",{\"0\":{\"118\":1}}],[\"读取流中的下一批数据重复处理\",{\"1\":{\"31\":1}}],[\"读取的是记录的最新版本\",{\"1\":{\"30\":2}}],[\"读取的是记录的可见版本\",{\"1\":{\"30\":1}}],[\"读操作可以分成两类\",{\"1\":{\"30\":1}}],[\"读写不冲突是很重要的\",{\"1\":{\"29\":1}}],[\"读写不互斥\",{\"1\":{\"29\":1}}],[\"读过基于jdkproxy和cglib生成的代理类源码\",{\"1\":{\"1\":1}}],[\"读过reflections源码\",{\"1\":{\"1\":1}}],[\"对准\",{\"1\":{\"318\":1}}],[\"对事故成因有争议\",{\"1\":{\"289\":1}}],[\"对象为defaultresourceloader的实例\",{\"1\":{\"267\":1}}],[\"对象为genericapplicationcontext的实例\",{\"1\":{\"267\":1}}],[\"对象转化为\",{\"1\":{\"259\":1}}],[\"对象中获取\",{\"1\":{\"254\":1}}],[\"对象\",{\"0\":{\"251\":1,\"259\":1,\"283\":1},\"1\":{\"214\":1,\"215\":2,\"234\":1,\"235\":1,\"237\":1,\"243\":2,\"245\":1,\"254\":1,\"262\":1,\"305\":1}}],[\"对象等组件的行为或属性感知\",{\"1\":{\"183\":1}}],[\"对象的接口而不生产对象\",{\"1\":{\"152\":1}}],[\"对beandefinition进行更改\",{\"1\":{\"182\":1}}],[\"对父级节点的操作会递归遍历其所有子节点\",{\"1\":{\"160\":1}}],[\"对简单工厂模式的一种改良\",{\"1\":{\"151\":1}}],[\"对修改关闭\",{\"1\":{\"146\":1}}],[\"对扩展开放\",{\"1\":{\"146\":1}}],[\"对激情犯罪易表现出宽容\",{\"1\":{\"134\":1}}],[\"对方却过很久才简短回复\",{\"1\":{\"110\":1}}],[\"对方却移开了目光\",{\"1\":{\"110\":1}}],[\"对应osi参考模型的上三层\",{\"1\":{\"103\":1}}],[\"对应osi参考模型的第四层\",{\"1\":{\"103\":1}}],[\"对应osi参考模型的第三层\",{\"1\":{\"103\":1}}],[\"对应的osi参考模型的下两层\",{\"1\":{\"103\":1}}],[\"对应链接阶段\",{\"0\":{\"72\":1}}],[\"对应加载阶段\",{\"0\":{\"52\":1}}],[\"对stream的使用就是实现一个filter\",{\"1\":{\"47\":1}}],[\"对于多属性\",{\"1\":{\"154\":1}}],[\"对于程序员而言\",{\"1\":{\"47\":1}}],[\"对于格式化和解析的需求\",{\"1\":{\"47\":1}}],[\"对于时间\",{\"1\":{\"47\":1}}],[\"对于货车类而言就要自己去实现这两个方法\",{\"1\":{\"47\":1}}],[\"对当前记录加锁\",{\"1\":{\"30\":1}}],[\"对比来说好处在于\",{\"1\":{\"29\":1}}],[\"对数据库的数据表进行初始化\",{\"1\":{\"15\":1}}],[\"本次不再添加前缀\",{\"1\":{\"230\":1}}],[\"本年第n天\",{\"1\":{\"47\":1}}],[\"本月最后一天\",{\"1\":{\"47\":1}}],[\"本月第n天\",{\"1\":{\"47\":1}}],[\"本功能的实现参考了spring\",{\"1\":{\"26\":1}}],[\"本质上就是内存中方法区内方法地址在栈中的一个指向\",{\"1\":{\"47\":1}}],[\"本质上并未解决任何问题\",{\"1\":{\"38\":1}}],[\"本质上已经是表锁了\",{\"1\":{\"34\":1}}],[\"本质上是在同一线程中运行\",{\"1\":{\"25\":1}}],[\"本质上是在不同的线程中运行\",{\"1\":{\"25\":1}}],[\"本质是依赖beanfactory中声明的监听器\",{\"1\":{\"24\":1}}],[\"异质性群体\",{\"0\":{\"131\":1}}],[\"异常处理\",{\"1\":{\"294\":1,\"295\":1}}],[\"异常机制\",{\"1\":{\"44\":1}}],[\"异常信息\",{\"1\":{\"25\":1}}],[\"异步事件响应\",{\"1\":{\"25\":1}}],[\"异步事件发布\",{\"1\":{\"25\":1}}],[\"创建线程池\",{\"1\":{\"305\":1}}],[\"创建应用上下文\",{\"0\":{\"263\":1}}],[\"创建一个springapplicationrunlisteners对象\",{\"1\":{\"245\":1}}],[\"创建一个\",{\"1\":{\"243\":1,\"254\":1,\"262\":1,\"280\":1}}],[\"创建一个空容器\",{\"1\":{\"47\":1}}],[\"创建启动上下文\",{\"0\":{\"243\":1}}],[\"创建bean实例\",{\"0\":{\"231\":1}}],[\"创建beandefinitionreader\",{\"1\":{\"200\":1}}],[\"创建bean工厂\",{\"0\":{\"198\":1}}],[\"创建类\",{\"0\":{\"148\":1}}],[\"创建g\",{\"1\":{\"47\":1}}],[\"创建\",{\"1\":{\"47\":1,\"263\":1}}],[\"创建容器\",{\"1\":{\"47\":2}}],[\"创建活动描述\",{\"1\":{\"25\":1}}],[\"创建事件描述\",{\"1\":{\"25\":1}}],[\"创建两个内容完全一样的类\",{\"1\":{\"6\":1}}],[\"05\",{\"1\":{\"305\":1}}],[\"0int\",{\"1\":{\"100\":2}}],[\"00\",{\"1\":{\"97\":1}}],[\"001\",{\"1\":{\"47\":1}}],[\"02\",{\"1\":{\"47\":2}}],[\"01\",{\"1\":{\"47\":7,\"97\":1,\"305\":1}}],[\"0\",{\"1\":{\"25\":1,\"38\":1,\"47\":8,\"97\":1,\"100\":3,\"305\":10}}],[\"获取双闪灯状态\",{\"1\":{\"305\":1}}],[\"获取左拨杆状态\",{\"1\":{\"305\":1}}],[\"获取总灯光状态\",{\"1\":{\"305\":1}}],[\"获取beanfactory中的\",{\"1\":{\"285\":2}}],[\"获取bean工厂\",{\"0\":{\"196\":1}}],[\"获取\",{\"1\":{\"278\":2}}],[\"获取所有资源\",{\"0\":{\"278\":1}}],[\"获取所有插件\",{\"1\":{\"25\":1}}],[\"获取或创建环境\",{\"0\":{\"249\":1}}],[\"获取spring\",{\"1\":{\"245\":1}}],[\"获取运行的监听器\",{\"0\":{\"245\":1}}],[\"获取时需要添加前缀\",{\"1\":{\"230\":1}}],[\"获取这个工厂bean的实例\",{\"1\":{\"230\":1}}],[\"获取类\",{\"0\":{\"66\":1}}],[\"获取每个字符串的首字母\",{\"1\":{\"47\":1}}],[\"获取当前factorybean是否希望初始化\",{\"1\":{\"230\":1}}],[\"获取当前时间\",{\"1\":{\"47\":2}}],[\"获取当前日期与时间\",{\"1\":{\"47\":1}}],[\"获取当前日期\",{\"1\":{\"47\":1}}],[\"获取本月第一天\",{\"1\":{\"47\":1}}],[\"获取插件总数\",{\"1\":{\"25\":1}}],[\"获取字段中所有\",{\"1\":{\"9\":2}}],[\"brake\",{\"1\":{\"289\":1}}],[\"blind\",{\"1\":{\"289\":1}}],[\"block\",{\"1\":{\"47\":1}}],[\"bsa\",{\"1\":{\"289\":1}}],[\"bs\",{\"1\":{\"289\":1}}],[\"banner对象\",{\"0\":{\"273\":1}}],[\"banner打印\",{\"1\":{\"262\":1}}],[\"banner\",{\"0\":{\"262\":1}}],[\"based\",{\"1\":{\"29\":1}}],[\"begin\",{\"1\":{\"305\":2}}],[\"beannamegenerator\",{\"1\":{\"267\":1,\"280\":1}}],[\"beaninfo\",{\"1\":{\"261\":1}}],[\"beandefinitionloader\",{\"1\":{\"280\":4}}],[\"beandefinitionnames\",{\"0\":{\"225\":1}}],[\"beandefinitionregisterpostprocessor\",{\"0\":{\"182\":1}}],[\"beandefinitionreader\",{\"0\":{\"178\":1}}],[\"bean\",{\"0\":{\"221\":1},\"1\":{\"210\":4,\"214\":1,\"215\":1,\"230\":1,\"235\":1}}],[\"beanfactory中\",{\"0\":{\"273\":1}}],[\"beanfactory的\",{\"1\":{\"267\":1}}],[\"beanfactory\",{\"1\":{\"207\":1}}],[\"beanfactorypostprocessor\",{\"0\":{\"181\":1}}],[\"beanpostprocessor的一个子类\",{\"1\":{\"185\":1}}],[\"beanpostprocessor\",{\"0\":{\"184\":1}}],[\"bean定义信息读取者\",{\"1\":{\"178\":1}}],[\"between\",{\"1\":{\"47\":11}}],[\"binder上\",{\"1\":{\"258\":1}}],[\"bindtospringapplication\",{\"0\":{\"258\":1}}],[\"bifunction<dic\",{\"1\":{\"47\":1}}],[\"bifunction<string\",{\"1\":{\"47\":1}}],[\"bifunction\",{\"1\":{\"47\":1}}],[\"biconsumer<t\",{\"1\":{\"25\":2}}],[\"b\",{\"1\":{\"47\":8,\"100\":2}}],[\"boolean>\",{\"1\":{\"47\":1}}],[\"boolean\",{\"1\":{\"25\":3,\"47\":3,\"305\":3}}],[\"bootstrapregistryinitializer\",{\"1\":{\"243\":1}}],[\"bootstrapclassloader加载类\",{\"0\":{\"63\":1}}],[\"bootstrampclassloader加载当前类\",{\"0\":{\"61\":1}}],[\"boot\",{\"0\":{\"189\":1,\"190\":1,\"191\":1},\"1\":{\"2\":1,\"246\":1},\"2\":{\"193\":1,\"288\":1}}],[\"boxing函数和unboxing函数在转换时\",{\"1\":{\"10\":1}}],[\"boxing\",{\"1\":{\"9\":11,\"40\":1}}],[\"失败回调\",{\"1\":{\"25\":2}}],[\"泛型\",{\"1\":{\"25\":4}}],[\"内后视镜\",{\"1\":{\"312\":1}}],[\"内部的监听类型的后置处理器\",{\"1\":{\"213\":1}}],[\"内部类必须返回异常或error\",{\"1\":{\"47\":1}}],[\"内心强大到混蛋比什么都重要\",{\"1\":{\"114\":1}}],[\"内容为\",{\"1\":{\"25\":1}}],[\"内存布局\",{\"1\":{\"1\":1}}],[\"404\",{\"1\":{\"329\":1}}],[\"4位\",{\"1\":{\"97\":1}}],[\"4\",{\"1\":{\"25\":1,\"44\":1,\"47\":2,\"305\":4,\"308\":1}}],[\"函数对上两步中获取到的实例进行排序\",{\"1\":{\"285\":1}}],[\"函数添加的\",{\"1\":{\"268\":1}}],[\"函数指针\",{\"1\":{\"47\":1}}],[\"函数式编程和面向对象编程有机的结合在一起才能更好的以敏捷开发的方式来实现业务逻辑\",{\"1\":{\"44\":1}}],[\"函数\",{\"1\":{\"25\":1,\"47\":3}}],[\"函数的语法等等\",{\"1\":{\"15\":1}}],[\"操作\",{\"1\":{\"305\":1}}],[\"操作内容\",{\"1\":{\"305\":1}}],[\"操作后的灯\",{\"1\":{\"305\":1}}],[\"操作耗时\",{\"1\":{\"305\":1}}],[\"操作符\",{\"1\":{\"100\":1}}],[\"操作a\",{\"1\":{\"47\":1}}],[\"操作工具类\",{\"1\":{\"25\":1}}],[\"操作与否\",{\"1\":{\"25\":1}}],[\"操作的思考与实现\",{\"0\":{\"22\":1}}],[\"o\",{\"1\":{\"305\":3}}],[\"out\",{\"1\":{\"262\":1,\"305\":2}}],[\"obtainfreshbeanfactory\",{\"0\":{\"196\":1}}],[\"obj\",{\"1\":{\"47\":5}}],[\"objects\",{\"1\":{\"47\":2}}],[\"object\",{\"1\":{\"47\":3,\"305\":1}}],[\"open\",{\"1\":{\"146\":1}}],[\"operation\",{\"1\":{\"47\":1,\"305\":10}}],[\"opt\",{\"1\":{\"47\":18}}],[\"optional\",{\"1\":{\"47\":5}}],[\"optional<spbasedto>\",{\"1\":{\"47\":2}}],[\"optional空值包装\",{\"1\":{\"47\":1}}],[\"optionalapi\",{\"1\":{\"45\":1}}],[\"olddate\",{\"1\":{\"47\":10}}],[\"ofinstant\",{\"1\":{\"47\":1}}],[\"ofpattern\",{\"1\":{\"47\":1}}],[\"ofnullable\",{\"1\":{\"47\":3}}],[\"of\",{\"1\":{\"47\":16,\"305\":2}}],[\"onrefresh\",{\"0\":{\"216\":1,\"236\":1}}],[\"on\",{\"1\":{\"47\":1}}],[\"onapplicationevent\",{\"1\":{\"25\":2}}],[\"org\",{\"1\":{\"267\":1}}],[\"orelsethrow\",{\"1\":{\"47\":3}}],[\"orelseget\",{\"1\":{\"47\":2}}],[\"orelse\",{\"1\":{\"47\":2}}],[\"or\",{\"1\":{\"47\":2}}],[\"override\",{\"1\":{\"25\":8,\"47\":8,\"305\":1}}],[\"的打招呼\",{\"1\":{\"310\":1}}],[\"的题\",{\"1\":{\"305\":1}}],[\"的超时异常\",{\"1\":{\"305\":1}}],[\"的责任\",{\"1\":{\"289\":1}}],[\"的一般与\",{\"1\":{\"289\":3}}],[\"的实例\",{\"0\":{\"275\":1}}],[\"的环境\",{\"0\":{\"266\":1}}],[\"的\",{\"1\":{\"264\":1}}],[\"的值\",{\"1\":{\"254\":1,\"256\":1}}],[\"的子类实现\",{\"1\":{\"254\":1}}],[\"的属性\",{\"1\":{\"252\":1}}],[\"的对象在创建时\",{\"1\":{\"154\":1}}],[\"的意识\",{\"1\":{\"125\":1}}],[\"的成功机会\",{\"1\":{\"111\":1}}],[\"的人不过是从来没有体验到坚持做一件事成功后带来的喜悦\",{\"1\":{\"109\":1}}],[\"的失败都源于半途而废\",{\"1\":{\"109\":1}}],[\"的字符串\",{\"1\":{\"47\":1}}],[\"的功能一致\",{\"1\":{\"47\":1}}],[\"的方式来诠释面向对象的\",{\"1\":{\"47\":1}}],[\"的事件响应函数\",{\"1\":{\"25\":1}}],[\"的概念\",{\"1\":{\"8\":1}}],[\"已执行过的插件\",{\"1\":{\"25\":1}}],[\"执行加载bean信息\",{\"1\":{\"280\":1}}],[\"执行通过\",{\"1\":{\"268\":1}}],[\"执行所有注册的\",{\"1\":{\"243\":1}}],[\"执行bean工厂后置处理器\",{\"0\":{\"212\":1}}],[\"执行流程\",{\"0\":{\"194\":1,\"241\":1}}],[\"执行很骨感\",{\"1\":{\"108\":1}}],[\"执行逻辑后\",{\"1\":{\"31\":1}}],[\"执行插件\",{\"1\":{\"25\":4}}],[\"执行\",{\"0\":{\"268\":1},\"1\":{\"25\":1}}],[\"执行错误\",{\"1\":{\"25\":1}}],[\"执行成功\",{\"1\":{\"25\":1}}],[\"活动数据\",{\"1\":{\"25\":1}}],[\"活动元数据\",{\"1\":{\"25\":1}}],[\"活动备注\",{\"1\":{\"25\":1}}],[\"活动名称\",{\"1\":{\"25\":1}}],[\"活动\",{\"1\":{\"25\":7}}],[\"插件使用中心\",{\"1\":{\"25\":1}}],[\"插件内\",{\"1\":{\"25\":1}}],[\"插件基类\",{\"1\":{\"25\":1}}],[\"插件执行失败时的回调\",{\"1\":{\"25\":1}}],[\"插件执行成功时的回调\",{\"1\":{\"25\":1}}],[\"插件所依赖的活动\",{\"1\":{\"25\":1}}],[\"元数据验证\",{\"0\":{\"82\":1}}],[\"元数据\",{\"1\":{\"25\":3}}],[\"length\",{\"1\":{\"305\":2}}],[\"lever\",{\"1\":{\"305\":29}}],[\"level\",{\"0\":{\"33\":1}}],[\"ldw\",{\"1\":{\"289\":1}}],[\"l\",{\"1\":{\"289\":1}}],[\"lsp\",{\"1\":{\"146\":1}}],[\"lang\",{\"1\":{\"305\":2}}],[\"lane\",{\"1\":{\"289\":1}}],[\"lazyinitializationbeanfactorypostprocessor\",{\"0\":{\"276\":1}}],[\"lazyinitialization\",{\"0\":{\"276\":1}}],[\"lambda\",{\"1\":{\"47\":1}}],[\"lambda表达式\",{\"1\":{\"45\":1,\"47\":2}}],[\"lastdayofmonth\",{\"1\":{\"47\":1}}],[\"load\",{\"0\":{\"280\":1},\"1\":{\"280\":1}}],[\"loadtimeweaveraware\",{\"0\":{\"221\":1}}],[\"loadtimeweaver\",{\"0\":{\"209\":1}}],[\"loadbeandefinitions\",{\"0\":{\"200\":1},\"1\":{\"200\":1}}],[\"loadclass\",{\"0\":{\"52\":1}}],[\"localtime\",{\"1\":{\"47\":10}}],[\"localdate2\",{\"1\":{\"47\":2}}],[\"localdate1\",{\"1\":{\"47\":3}}],[\"localdatetime\",{\"1\":{\"47\":22}}],[\"localdatetime等等\",{\"1\":{\"47\":1}}],[\"localdate\",{\"1\":{\"47\":26}}],[\"local\",{\"1\":{\"39\":1,\"47\":13}}],[\"locking\",{\"0\":{\"32\":1}}],[\"lock\",{\"1\":{\"29\":1,\"30\":1,\"33\":1}}],[\"logging\",{\"1\":{\"305\":1}}],[\"loggerfactory\",{\"1\":{\"25\":1}}],[\"logger\",{\"1\":{\"25\":1,\"305\":9}}],[\"log\",{\"1\":{\"25\":5}}],[\"long\",{\"1\":{\"25\":2,\"47\":12,\"305\":2}}],[\"li>\",{\"1\":{\"305\":8}}],[\"lightstatus\",{\"1\":{\"305\":17}}],[\"lightstatus>\",{\"1\":{\"305\":3}}],[\"light\",{\"1\":{\"305\":25}}],[\"lightingsimulation\",{\"1\":{\"305\":5}}],[\"line\",{\"1\":{\"252\":1}}],[\"livebeansview\",{\"0\":{\"238\":1}}],[\"lifecycle\",{\"1\":{\"235\":1}}],[\"liskov\",{\"1\":{\"146\":1}}],[\"listener\",{\"1\":{\"25\":1}}],[\"listener<t>\",{\"1\":{\"25\":1}}],[\"listener<t\",{\"1\":{\"25\":1}}],[\"list<plugin>\",{\"1\":{\"25\":1}}],[\"list<class<\",{\"1\":{\"25\":1}}],[\"list\",{\"1\":{\"9\":4}}],[\"limit\",{\"1\":{\"47\":1}}],[\"liquibase是一个方言无关的数据库版本管理工具\",{\"1\":{\"15\":1,\"19\":1}}],[\"liquibase\",{\"1\":{\"15\":1}}],[\"解析输入\",{\"1\":{\"305\":1}}],[\"解析\",{\"0\":{\"72\":1,\"86\":1,\"87\":1}}],[\"解析文档是一个很消耗时间的操作\",{\"1\":{\"23\":1}}],[\"解决了多线程重复加载的问题\",{\"1\":{\"53\":1}}],[\"解决方案\",{\"0\":{\"25\":1}}],[\"解锁阶段\",{\"1\":{\"32\":1}}],[\"解锁分为两个完全不相交的阶段\",{\"1\":{\"32\":1}}],[\"只能说\",{\"1\":{\"295\":1}}],[\"只能有一个抽象方法\",{\"1\":{\"47\":1}}],[\"只有缺这些才能扣车\",{\"1\":{\"289\":1}}],[\"只有当派生类可以替换掉基类\",{\"1\":{\"146\":1}}],[\"只有领袖能够让他们有信仰\",{\"1\":{\"140\":1}}],[\"只有了解innodb的加锁机制\",{\"1\":{\"35\":1}}],[\"只有在rr模式下\",{\"1\":{\"34\":1}}],[\"只要两侧后视镜能看到库线内一点点地面\",{\"1\":{\"294\":1}}],[\"只要是在当前读状态下\",{\"1\":{\"34\":1}}],[\"只要在src中定义的类永远优先于其他地方的类加载\",{\"1\":{\"18\":1}}],[\"只是不想学习\",{\"1\":{\"115\":1}}],[\"只是他带来的便捷却终是让我们觉得值得铤而走险\",{\"1\":{\"47\":1}}],[\"只是在编译期间通过抑制不抛警告而已\",{\"1\":{\"38\":1}}],[\"只是\",{\"1\":{\"33\":1}}],[\"只放锁\",{\"1\":{\"32\":1}}],[\"只加锁\",{\"1\":{\"32\":1}}],[\"只需将监听器的响应放到新的线程中执行\",{\"1\":{\"24\":1}}],[\"另外这两个类都有相同的名字\",{\"1\":{\"47\":1}}],[\"另外\",{\"1\":{\"24\":1}}],[\"另一个是服务细节不影响最终结果\",{\"1\":{\"24\":1}}],[\"自适应刹车eba\",{\"1\":{\"289\":1}}],[\"自适应刹车alc\",{\"1\":{\"289\":1}}],[\"自适应巡航\",{\"1\":{\"289\":1}}],[\"自适应巡航afs\",{\"1\":{\"289\":1}}],[\"自适应前大灯aeb\",{\"1\":{\"289\":1}}],[\"自动变道\",{\"1\":{\"289\":1}}],[\"自动\",{\"1\":{\"289\":1}}],[\"自动回复失败将不接收消息\",{\"1\":{\"23\":1}}],[\"自定义设置bean工厂\",{\"0\":{\"199\":1}}],[\"自定义注解\",{\"1\":{\"9\":1}}],[\"自我成长需要不断和自己做斗争\",{\"1\":{\"115\":1}}],[\"自我设限\",{\"0\":{\"111\":1}}],[\"自己的手艺比男人重要\",{\"1\":{\"114\":1}}],[\"去年底在做项目的时候\",{\"1\":{\"23\":1}}],[\"去年底的时候\",{\"1\":{\"14\":1}}],[\"真心好用\",{\"1\":{\"19\":1}}],[\"复制反编译后类中所有的代码至src目录下的文件后\",{\"1\":{\"18\":1}}],[\"将灯光拨杆向近怀端拨动三下\",{\"1\":{\"311\":1}}],[\"将灯光拨杆向近怀端拨动四下\",{\"1\":{\"311\":1}}],[\"将灯光拨杆向近怀端拨动一下\",{\"1\":{\"311\":2}}],[\"将操作追加至当前状态\",{\"1\":{\"305\":2}}],[\"将方向盘12点方向\",{\"1\":{\"296\":1,\"297\":1}}],[\"将方向盘回正\",{\"1\":{\"295\":2}}],[\"将方向盘十二点方向对准道路中线\",{\"1\":{\"295\":1}}],[\"将方向盘十二点位置对准库边线左起第二个虚线缺口\",{\"1\":{\"294\":1}}],[\"将方向盘向右打一圈\",{\"1\":{\"296\":2}}],[\"将方向盘向右回一圈\",{\"1\":{\"294\":1}}],[\"将方向盘向右回半圈\",{\"1\":{\"294\":1}}],[\"将方向盘向左打一圈\",{\"1\":{\"296\":1}}],[\"将方向盘向左打死\",{\"1\":{\"295\":1,\"297\":1}}],[\"将方向盘向左回一圈\",{\"1\":{\"294\":1}}],[\"将方向盘向左回半圈\",{\"1\":{\"294\":1}}],[\"将车开至坐于库边线上\",{\"1\":{\"294\":1}}],[\"将车辆交于无证人员的\",{\"1\":{\"289\":1}}],[\"将前车窗后下角与右后视镜左上角对齐\",{\"1\":{\"293\":1}}],[\"将前车窗后下角与左后视镜右上角对齐\",{\"1\":{\"293\":1}}],[\"将环境转换为\",{\"0\":{\"259\":1}}],[\"将环境绑定到springapplication\",{\"0\":{\"258\":1}}],[\"将上一步获取到的值添加到属性源的末尾\",{\"1\":{\"256\":1}}],[\"将\",{\"1\":{\"236\":1,\"258\":1}}],[\"将动态指定的事件监听器加入时间传播器中\",{\"1\":{\"217\":1}}],[\"将静态指定的事件监听器逐一添加到事件传播器中\",{\"1\":{\"217\":1}}],[\"将先销毁\",{\"0\":{\"197\":1}}],[\"将这部分赋值和逻辑代码放到一个对象中\",{\"1\":{\"154\":1}}],[\"将函数或类中用到的属性的相对偏移量转换出来\",{\"1\":{\"88\":1}}],[\"将符号引用转换为实际引用\",{\"1\":{\"84\":1}}],[\"将二进制数组转换为一个class对象\",{\"0\":{\"79\":1}}],[\"将流中的数据打包\",{\"1\":{\"47\":1}}],[\"将集合内元素进行聚合操作\",{\"1\":{\"47\":1}}],[\"将入参+出参个数想加\",{\"1\":{\"47\":2}}],[\"将其纳入java\",{\"1\":{\"47\":1}}],[\"将调用orelse\",{\"1\":{\"47\":1}}],[\"将返回该值\",{\"1\":{\"47\":1}}],[\"将返回true\",{\"1\":{\"47\":1}}],[\"将返回的\",{\"1\":{\"17\":1}}],[\"将并发控制降低到悲观锁级别\",{\"1\":{\"33\":1}}],[\"将修改后的数据再次交由engine层\",{\"1\":{\"31\":1}}],[\"将修改过的kbdatabasemetadata\",{\"1\":{\"17\":1}}],[\"修改为\",{\"1\":{\"17\":1}}],[\"x++\",{\"1\":{\"47\":1}}],[\"x>0\",{\"1\":{\"47\":1}}],[\"x锁\",{\"1\":{\"30\":1}}],[\"x\",{\"1\":{\"17\":2,\"47\":4}}],[\"而且需要在五秒内做出应答操作\",{\"1\":{\"301\":1}}],[\"而又无需使代码依赖它们所属的类\",{\"1\":{\"155\":1}}],[\"而基类与子类的继承关系就是抽象化的具体实现\",{\"1\":{\"146\":1}}],[\"而派生类也能够在基类的基础上增加新的行为\",{\"1\":{\"146\":1}}],[\"而是行动者\",{\"1\":{\"140\":1}}],[\"而把自尊心放在第一位的人\",{\"1\":{\"110\":1}}],[\"而有时这种拒绝也可以是很细微的\",{\"1\":{\"110\":1}}],[\"而使用并行去遍历时\",{\"1\":{\"47\":1}}],[\"而和迭代器又不同的是\",{\"1\":{\"47\":1}}],[\"而在filter中调用这个接口的实现\",{\"1\":{\"47\":1}}],[\"而在某些场景下我们可能需要使用这些工具类\",{\"1\":{\"47\":1}}],[\"而在java中\",{\"1\":{\"47\":1}}],[\"而在一些开源框架中也会调用这些系统表来实现逻辑\",{\"1\":{\"16\":1}}],[\"而java的集合api中\",{\"1\":{\"47\":1}}],[\"而java\",{\"1\":{\"47\":1}}],[\"而jdk8中的optional类就是这个机制的体现\",{\"1\":{\"47\":1}}],[\"而货车类要直接继承下这两个方法\",{\"1\":{\"47\":1}}],[\"而直接操作sql的成本低\",{\"1\":{\"44\":1}}],[\"而不适用于模块中包含的类型\",{\"1\":{\"39\":1}}],[\"而不是使用时自己创建\",{\"1\":{\"150\":1}}],[\"而不是使用继承\",{\"1\":{\"146\":1}}],[\"而不是在事务提交时再释放\",{\"1\":{\"34\":1}}],[\"而不是kingbase\",{\"1\":{\"16\":1}}],[\"而scheduling也是spring\",{\"1\":{\"24\":1}}],[\"而第一个业务场景相较于第二个\",{\"1\":{\"24\":1}}],[\"而liquibase在运行时会获取数据库产品类型后动态根据资源中的数据表定义生成符合当前数据库方言的建表语句\",{\"1\":{\"15\":1}}],[\"得益于kingbase的魔改对于pgsql的实现并不是破坏性的\",{\"1\":{\"16\":1}}],[\"理性对群体机会没有任何作用\",{\"1\":{\"139\":1}}],[\"理性\",{\"1\":{\"139\":1}}],[\"理论上就能骗过工具\",{\"1\":{\"15\":1}}],[\"理解ddd领域驱动设计\",{\"1\":{\"1\":1}}],[\"换为\",{\"1\":{\"15\":1}}],[\"如有在\",{\"1\":{\"319\":1}}],[\"如有需要也可创建别的\",{\"1\":{\"17\":1}}],[\"如\",{\"1\":{\"312\":1,\"321\":1}}],[\"如车座太靠前背\",{\"1\":{\"310\":1}}],[\"如转向灯未关闭\",{\"1\":{\"295\":1,\"297\":1}}],[\"如存在则使用\",{\"1\":{\"215\":1}}],[\"如存在则使用工厂中的消息源对象\",{\"1\":{\"214\":1}}],[\"如不存在则创建\",{\"1\":{\"214\":1}}],[\"如议会\",{\"1\":{\"131\":1}}],[\"如街头群体\",{\"1\":{\"131\":1}}],[\"如上\",{\"1\":{\"47\":1}}],[\"如localdate\",{\"1\":{\"47\":1}}],[\"如何使用并行技术在多核cpu中来降低程序的执行时间\",{\"1\":{\"44\":1}}],[\"如果出现掉灯基本出现在第6步和第七步中\",{\"1\":{\"318\":1}}],[\"如果操作后的结果大于\",{\"1\":{\"305\":1}}],[\"如果操作后的结果大于2\",{\"1\":{\"305\":1}}],[\"如果操作后的结果小于\",{\"1\":{\"305\":1}}],[\"如果操作后的结果小于0\",{\"1\":{\"305\":1}}],[\"如果第二部分和第三部分出问题了\",{\"1\":{\"295\":1}}],[\"如果接触的是门把手的前端\",{\"1\":{\"294\":1}}],[\"如果接触的是门把手后端\",{\"1\":{\"294\":1}}],[\"如果开启\",{\"0\":{\"283\":1}}],[\"如果存在\",{\"0\":{\"273\":1}}],[\"如果存在值\",{\"1\":{\"47\":1}}],[\"如果环境变量中不存在\",{\"1\":{\"261\":1}}],[\"如果必要\",{\"0\":{\"259\":1}}],[\"如果处于活动状态\",{\"0\":{\"238\":1}}],[\"如果没有指定\",{\"0\":{\"220\":1}}],[\"如果不是自定义的环境\",{\"0\":{\"259\":1}}],[\"如果不忽略spel表达式\",{\"0\":{\"203\":1}}],[\"如果不存在\",{\"0\":{\"92\":1},\"1\":{\"244\":1}}],[\"如果上下文中已经存在bean工厂\",{\"0\":{\"197\":1}}],[\"如果上一步获取到的值为空\",{\"1\":{\"254\":1}}],[\"如果上一步还是没找到\",{\"0\":{\"64\":1}}],[\"如果上一步没找到class类\",{\"0\":{\"57\":1}}],[\"如果群体的意见不是从普通的信念中得来\",{\"1\":{\"141\":1}}],[\"如果安全域中的codesource中的签名不为空\",{\"0\":{\"93\":1}}],[\"如果保护域对象为空\",{\"0\":{\"76\":1}}],[\"如果设置需要解析\",{\"0\":{\"71\":1}}],[\"如果我们解决了this关键字的指向\",{\"1\":{\"47\":1}}],[\"如果我们在函数中再追加别的代码必定会增加测试的难度和耦合度\",{\"1\":{\"24\":1}}],[\"如果我们在kingbase的数据库驱动中将产品类型从\",{\"1\":{\"15\":1}}],[\"如果有的话\",{\"1\":{\"195\":1}}],[\"如果有出参\",{\"1\":{\"47\":2}}],[\"如果有需要\",{\"1\":{\"47\":1}}],[\"如果这么写\",{\"1\":{\"47\":1}}],[\"如果这只是一个接口的话\",{\"1\":{\"47\":1}}],[\"如果\",{\"1\":{\"47\":1,\"267\":4}}],[\"如果值存在\",{\"1\":{\"47\":1}}],[\"如果值不存在\",{\"1\":{\"47\":1}}],[\"如果把物体类和车类写成接口的话\",{\"1\":{\"47\":1}}],[\"如果注释包含无法识别的警告名称\",{\"1\":{\"39\":1}}],[\"如果你想在特定方法中抑制警告\",{\"1\":{\"39\":1}}],[\"如果在模块信息文件中抑制了警告\",{\"1\":{\"39\":1}}],[\"如果您注释一个类以抑制一个警告并注释一个方法以抑制另一个\",{\"1\":{\"39\":1}}],[\"如果您确定它不是问题\",{\"1\":{\"38\":1}}],[\"如activiti\",{\"0\":{\"13\":1}}],[\"类\",{\"0\":{\"87\":1}}],[\"类似于list中的foreach\",{\"1\":{\"47\":1}}],[\"类型\",{\"1\":{\"15\":1}}],[\"类中的字段名\",{\"1\":{\"9\":2}}],[\"但绝不可向左\",{\"1\":{\"295\":1}}],[\"但每向一个方向调整后必须逆方向调整同样的角度\",{\"1\":{\"294\":1}}],[\"但办增驾只能在核发地\",{\"1\":{\"289\":1}}],[\"但实际上它说给你的是无聊\",{\"1\":{\"108\":1}}],[\"但比什么也不敢做强\",{\"1\":{\"107\":1}}],[\"但不得停车\",{\"1\":{\"308\":1}}],[\"但不得大于30\",{\"1\":{\"308\":1}}],[\"但不建议这么做\",{\"0\":{\"80\":1}}],[\"但不限于\",{\"1\":{\"15\":1}}],[\"但都是大同小异\",{\"1\":{\"47\":1}}],[\"但凡有返回值且是对象的\",{\"1\":{\"47\":1}}],[\"但最好遵守\",{\"1\":{\"47\":1}}],[\"但最基本的无外乎这几点\",{\"1\":{\"44\":1}}],[\"但这些都是基于代码块的\",{\"1\":{\"47\":1}}],[\"但这种工具的弊端在于仅能实现一对一的转换\",{\"1\":{\"7\":1}}],[\"但他们同样存在上述所有的问题\",{\"1\":{\"47\":1}}],[\"但他对某些业务场景简单的应用或单一功能上的表现却显得有点臃肿\",{\"1\":{\"44\":1}}],[\"但通常情况下\",{\"1\":{\"47\":1}}],[\"但我们又不希望这种错误体现在用户层面\",{\"1\":{\"47\":1}}],[\"但人非圣贤怎可能察觉所有的问题\",{\"1\":{\"47\":1}}],[\"但在之前的jdk中java不允许多继承\",{\"1\":{\"47\":1}}],[\"但在我们实际操作的过程中\",{\"1\":{\"47\":1}}],[\"但还是能说\",{\"1\":{\"44\":1}}],[\"但基于堆栈式的存储结构来说\",{\"1\":{\"44\":1}}],[\"但现在的编程思想还是基于jdk1\",{\"1\":{\"44\":1}}],[\"但会全部加锁\",{\"1\":{\"34\":1}}],[\"但是得收费才能练习\",{\"1\":{\"301\":1}}],[\"但是我怕做不到\",{\"1\":{\"111\":1}}],[\"但是\",{\"1\":{\"34\":1,\"39\":2,\"47\":1,\"111\":1}}],[\"但并发效率会降低\",{\"1\":{\"33\":1}}],[\"但依旧会出现幻读的情况\",{\"1\":{\"33\":1}}],[\"但innodb使用了next\",{\"1\":{\"33\":1}}],[\"但也仅是修改了前缀\",{\"1\":{\"16\":1}}],[\"金仓的数据库kingbase是根据开源数据库postgresql魔改而来\",{\"1\":{\"15\":1}}],[\"不可压车道两侧实线\",{\"1\":{\"318\":1}}],[\"不可往复\",{\"1\":{\"47\":1}}],[\"不具备则在停止线前停车\",{\"1\":{\"314\":2}}],[\"不得调整方向\",{\"1\":{\"294\":1}}],[\"不逃吃三年\",{\"1\":{\"289\":1}}],[\"不按规定让行3分\",{\"1\":{\"289\":1}}],[\"不让3\",{\"1\":{\"289\":1}}],[\"不为空则返回当前环境\",{\"1\":{\"249\":1}}],[\"不存在则创建一个\",{\"1\":{\"215\":1,\"235\":1}}],[\"不能去修改原有的代码\",{\"1\":{\"146\":1}}],[\"不是寂寞\",{\"1\":{\"115\":1}}],[\"不愿意面对挫折感\",{\"1\":{\"114\":1}}],[\"不承担\",{\"1\":{\"113\":1}}],[\"不会对虚拟机造成伤害\",{\"1\":{\"83\":1}}],[\"不会出现问题\",{\"1\":{\"33\":1}}],[\"不合法则返回\",{\"0\":{\"62\":1}}],[\"不都把入参和出参的个数都定义好了\",{\"1\":{\"47\":1}}],[\"不过\",{\"1\":{\"47\":1}}],[\"不包含毫秒数\",{\"1\":{\"47\":1}}],[\"不加锁\",{\"1\":{\"32\":1}}],[\"不放锁\",{\"1\":{\"32\":1}}],[\"不用加锁\",{\"1\":{\"30\":1}}],[\"不支持kingbasees的数据库\",{\"1\":{\"14\":1}}],[\"不同名\",{\"1\":{\"7\":1}}],[\"这几天了解了下科三的考察内容\",{\"1\":{\"301\":1}}],[\"这种心理暗示可以帮我阻挡任务失败带来的挫败感\",{\"1\":{\"111\":1}}],[\"这件事情我肯定没办法做好\",{\"1\":{\"111\":1}}],[\"这一步是双亲委派实现的原理\",{\"1\":{\"60\":1}}],[\"这一步也保证了类的单一加载器加载\",{\"1\":{\"60\":1}}],[\"这意味着他们等到需要结果的时候才会执行\",{\"1\":{\"47\":1}}],[\"这我们都学过\",{\"1\":{\"47\":1}}],[\"这不相当于\",{\"1\":{\"47\":1}}],[\"这些定义好的接口\",{\"1\":{\"47\":1}}],[\"这样也是可以的\",{\"1\":{\"47\":1}}],[\"这样的话\",{\"1\":{\"47\":1}}],[\"这是我的证件\",{\"1\":{\"310\":1}}],[\"这是掩饰自己无知的方法\",{\"1\":{\"113\":1}}],[\"这是逃避现实者的常见特征\",{\"1\":{\"112\":1}}],[\"这是一个内存地址信息\",{\"1\":{\"89\":1}}],[\"这是一个最简单的lambda表达式\",{\"1\":{\"47\":1}}],[\"这是一种远不够高效\",{\"1\":{\"47\":1}}],[\"这是这个接口的重点\",{\"1\":{\"47\":1}}],[\"这是java日期类最大的问题之一\",{\"1\":{\"47\":1}}],[\"这也是为了给左侧车身留出空间\",{\"1\":{\"295\":1}}],[\"这也是为了给右侧车身留出空间\",{\"1\":{\"295\":1}}],[\"这也是为什么现阶段大部分关系型数据库都是支持mvcc的\",{\"1\":{\"29\":1}}],[\"这也许算是一个怪圈吧\",{\"1\":{\"47\":1}}],[\"这也带来了一个问题\",{\"1\":{\"47\":1}}],[\"这也和oop思想背道而驰\",{\"1\":{\"47\":1}}],[\"这本身就是一个非常糟糕的设计\",{\"1\":{\"47\":1}}],[\"这个对象就叫构造者对象\",{\"1\":{\"154\":1}}],[\"这个原则的意思是\",{\"1\":{\"146\":1}}],[\"这个原则是开闭原则的基础\",{\"1\":{\"146\":1}}],[\"这个\",{\"1\":{\"111\":1}}],[\"这个类在jdk8前叫extclassloader\",{\"0\":{\"75\":1}}],[\"这个加锁操作保证了只会有一个线程对当前类进行加载\",{\"1\":{\"53\":1}}],[\"这个规矩\",{\"1\":{\"47\":1}}],[\"这个接口中有且只有一个抽象方法\",{\"1\":{\"47\":1}}],[\"这个标签修饰的接口\",{\"1\":{\"47\":1}}],[\"这个标签的作用是告诉编译器\",{\"1\":{\"47\":1}}],[\"这个包下还有很多定义好的接口\",{\"1\":{\"47\":1}}],[\"这个包就是时区相关的类了\",{\"1\":{\"47\":1}}],[\"这个包很有意思\",{\"1\":{\"47\":1}}],[\"这个包很明显了\",{\"1\":{\"47\":1}}],[\"这个包为非iso的日历系统定义了一些api\",{\"1\":{\"47\":1}}],[\"这个结构在jdk8前是不可能实现的\",{\"1\":{\"47\":1}}],[\"这个时候就需要我们的\",{\"1\":{\"47\":1}}],[\"这个时候\",{\"1\":{\"24\":1}}],[\"这就是将isnull\",{\"1\":{\"47\":1}}],[\"这就侧面说明了一个问题\",{\"1\":{\"44\":1}}],[\"这就导致在项目代码启动连接数据库的时候\",{\"1\":{\"14\":1}}],[\"这时应用的事件传播器已经就绪\",{\"1\":{\"217\":1}}],[\"这时\",{\"1\":{\"34\":1,\"294\":1}}],[\"这两个需求正好是两个极端\",{\"1\":{\"24\":1}}],[\"这里仅作演示目的\",{\"1\":{\"17\":1}}],[\"这类工具是强依赖数据库的\",{\"1\":{\"14\":1}}],[\"这对于我们只是需要简单的值拷贝不太友善\",{\"1\":{\"7\":1}}],[\"用一个类或少数类就可以拼装成一棵树\",{\"1\":{\"160\":1}}],[\"用途\",{\"1\":{\"40\":1}}],[\"用户数据报文协议\",{\"1\":{\"103\":1}}],[\"用户只要给出需要对其包含的元素执行什么操作\",{\"1\":{\"47\":1}}],[\"用户只能显式地一个一个遍历元素并对其执行某些操作\",{\"1\":{\"47\":1}}],[\"用户接收消息后\",{\"1\":{\"23\":1}}],[\"用户上传文档操作\",{\"1\":{\"23\":1}}],[\"用过activiti\",{\"1\":{\"14\":1}}],[\"用于子类调用扩展\",{\"0\":{\"282\":1}}],[\"用于对环境变量初始化的后置处理器\",{\"1\":{\"191\":1}}],[\"用于对beanfactory进行修改\",{\"1\":{\"181\":1}}],[\"用于监听spring容器启动和使用过程中产生的事件的监听\",{\"1\":{\"188\":1}}],[\"用于感知spring中关于容器\",{\"1\":{\"183\":1}}],[\"用于在bean初始化后修改bean的行为\",{\"1\":{\"184\":1}}],[\"用于在bean实例化之前\",{\"1\":{\"182\":1}}],[\"用于在context初始化前对其进行更改\",{\"1\":{\"180\":1}}],[\"用于扫描bean的定义信息\",{\"1\":{\"179\":1}}],[\"用于创建重复对象的克隆\",{\"1\":{\"155\":1}}],[\"用于抑制未经检查的警告\",{\"1\":{\"39\":1}}],[\"用于查询在索引中的连续范围\",{\"1\":{\"34\":1}}],[\"用于执行action\",{\"1\":{\"25\":1}}],[\"用于存储活动已执行的插件\",{\"1\":{\"25\":1}}],[\"用于指定类中的字段\",{\"1\":{\"9\":2}}],[\"用于指定装箱的数据传输类\",{\"1\":{\"9\":2}}],[\"用于数据库对象装箱\",{\"1\":{\"9\":1}}],[\"用于数据传输对象的拆箱\",{\"1\":{\"9\":1}}],[\"项目要求需要使用自主可控的国产数据库\",{\"1\":{\"14\":1}}],[\"项目经验\",{\"0\":{\"2\":1}}],[\"享元模式\",{\"0\":{\"161\":1},\"1\":{\"10\":1}}],[\"range\",{\"1\":{\"305\":1}}],[\"random\",{\"1\":{\"305\":6}}],[\"rarp\",{\"1\":{\"103\":1}}],[\"rawtypes\",{\"1\":{\"40\":1}}],[\"rdbms\",{\"1\":{\"47\":1}}],[\"running\",{\"1\":{\"236\":1}}],[\"run\",{\"1\":{\"47\":2,\"305\":4}}],[\"runtimeexception\",{\"1\":{\"25\":3,\"47\":1}}],[\"runtime\",{\"1\":{\"9\":4,\"47\":1}}],[\"rr模式\",{\"1\":{\"34\":2}}],[\"rr模式下\",{\"1\":{\"34\":2}}],[\"rc模式下\",{\"1\":{\"34\":3}}],[\"record\",{\"1\":{\"305\":1}}],[\"reactive类型创建\",{\"1\":{\"263\":1}}],[\"reactive类型则创建并返回\",{\"1\":{\"249\":1}}],[\"read\",{\"0\":{\"30\":2},\"1\":{\"30\":2,\"31\":1,\"33\":3}}],[\"registerlisteners\",{\"0\":{\"217\":1}}],[\"registerbeanpostprocessors\",{\"0\":{\"213\":1}}],[\"reuse\",{\"1\":{\"146\":1}}],[\"resourcecaches\",{\"1\":{\"234\":1}}],[\"resourceloaderaware\",{\"1\":{\"206\":1}}],[\"resourceloader\",{\"0\":{\"177\":1},\"1\":{\"207\":1,\"262\":1,\"267\":2,\"280\":1}}],[\"resolveplaceholders\",{\"0\":{\"220\":1}}],[\"resolveclass\",{\"0\":{\"71\":1}}],[\"restriction\",{\"1\":{\"40\":1}}],[\"reduce\",{\"1\":{\"47\":1}}],[\"reduce过程\",{\"1\":{\"47\":1}}],[\"redis\",{\"1\":{\"2\":1}}],[\"requirenonnull\",{\"1\":{\"47\":2}}],[\"retrun\",{\"1\":{\"47\":1}}],[\"retentionpolicy\",{\"1\":{\"9\":4,\"39\":1,\"47\":1}}],[\"retention\",{\"1\":{\"9\":4,\"39\":1,\"47\":1}}],[\"return\",{\"1\":{\"9\":8,\"17\":2,\"25\":14,\"47\":9,\"305\":7}}],[\"repeatable\",{\"1\":{\"9\":2,\"33\":1}}],[\"reflectutil\",{\"1\":{\"9\":10}}],[\"<3\",{\"1\":{\"308\":2}}],[\"<15\",{\"1\":{\"308\":4}}],[\"<10\",{\"1\":{\"308\":5}}],[\"<29\",{\"1\":{\"308\":1}}],[\"<25\",{\"1\":{\"308\":1}}],[\"<20\",{\"1\":{\"308\":1}}],[\"<5\",{\"1\":{\"308\":1}}],[\"<li>false\",{\"1\":{\"305\":1}}],[\"<li>true\",{\"1\":{\"305\":1}}],[\"<li>\",{\"1\":{\"305\":1}}],[\"<li>2\",{\"1\":{\"305\":1}}],[\"<li>1\",{\"1\":{\"305\":2}}],[\"<li>0\",{\"1\":{\"305\":2}}],[\"<<\",{\"1\":{\"100\":2}}],[\"<f\",{\"1\":{\"9\":1,\"25\":1}}],[\"<f>\",{\"1\":{\"9\":1}}],[\"<t\",{\"1\":{\"9\":1,\"25\":7}}],[\"<t>\",{\"1\":{\"9\":1,\"25\":4}}],[\"8int\",{\"1\":{\"100\":1}}],[\"8601日历体系基础上的\",{\"1\":{\"47\":1}}],[\"8日期\",{\"1\":{\"47\":1}}],[\"8提供了一个新的nashorn\",{\"1\":{\"47\":1}}],[\"8后\",{\"1\":{\"44\":1}}],[\"8的新特性及在项目中的一些应用\",{\"0\":{\"43\":1}}],[\"8\",{\"1\":{\"9\":1,\"17\":1,\"25\":2,\"305\":1,\"308\":1,\"315\":2,\"316\":1}}],[\"从题库中抽取考题后\",{\"1\":{\"305\":1}}],[\"从属性源中获取\",{\"1\":{\"254\":1}}],[\"从\",{\"1\":{\"254\":1}}],[\"从protectiondomain的codesource中获取位置信息\",{\"1\":{\"78\":1}}],[\"从方法区查验当前类是否存在\",{\"0\":{\"56\":1}}],[\"从前几年开始\",{\"1\":{\"48\":1}}],[\"从上面的代码\",{\"1\":{\"47\":1}}],[\"从上面的代码发现这是一个运行时标签\",{\"1\":{\"47\":1}}],[\"从上图中可以看出\",{\"1\":{\"34\":1}}],[\"从consumer接口的源码中我们看到了它也就定义了一个且只有一个抽象方法\",{\"1\":{\"47\":1}}],[\"从这段代码中\",{\"1\":{\"47\":1}}],[\"从我们将项目的jdk版本更新至1\",{\"1\":{\"44\":1}}],[\"从后端程序员的使用角度出发\",{\"1\":{\"15\":1}}],[\"从网上公开的知识可以了解到\",{\"1\":{\"15\":1}}],[\"从而尽可能的不在项目中书写sql\",{\"1\":{\"9\":1}}],[\"从大部分情况下考虑都显得多余\",{\"1\":{\"6\":1}}],[\"凯撒的归凯撒\",{\"1\":{\"9\":1}}],[\"version\",{\"1\":{\"29\":1}}],[\"void表示0\",{\"1\":{\"47\":2}}],[\"void\",{\"1\":{\"25\":11,\"47\":4,\"305\":13}}],[\"validaterequiredproperties\",{\"1\":{\"195\":1}}],[\"values\",{\"1\":{\"25\":1,\"30\":1}}],[\"value\",{\"1\":{\"9\":2,\"39\":1,\"47\":10}}],[\"variable\",{\"1\":{\"39\":1}}],[\"var\",{\"1\":{\"9\":2,\"25\":1}}],[\"view<table>\",{\"1\":{\"9\":1}}],[\"view<t\",{\"1\":{\"9\":1}}],[\"viewfield\",{\"1\":{\"9\":3}}],[\"view>\",{\"1\":{\"9\":3}}],[\"view\",{\"1\":{\"9\":4,\"17\":1}}],[\"描述信息\",{\"1\":{\"9\":2}}],[\">>>\",{\"1\":{\"100\":1}}],[\">>\",{\"1\":{\"25\":9,\"100\":2}}],[\">\",{\"1\":{\"9\":8,\"25\":6,\"47\":12,\"289\":4,\"305\":14,\"311\":8}}],[\"alternatelightstatus\",{\"1\":{\"305\":3}}],[\"alternate\",{\"1\":{\"305\":5}}],[\"allowbeandefinitionoverriding属性的值\",{\"0\":{\"275\":1}}],[\"allowcircularreferences\",{\"0\":{\"274\":1}}],[\"all\",{\"1\":{\"9\":3,\"25\":4,\"40\":1}}],[\"aeb\",{\"1\":{\"289\":1}}],[\"awt\",{\"1\":{\"244\":1}}],[\"aware\",{\"0\":{\"183\":1}}],[\"aop的实现和本地对象代理远程接口\",{\"1\":{\"159\":1}}],[\"appendoperation\",{\"1\":{\"305\":2}}],[\"applyinitializers\",{\"0\":{\"268\":1}}],[\"apply\",{\"1\":{\"47\":5}}],[\"applicationarguments\",{\"0\":{\"272\":1}}],[\"applicationconversionservice\",{\"0\":{\"251\":1}}],[\"applicationcontextfactory\",{\"1\":{\"263\":1}}],[\"applicationcontext\",{\"1\":{\"207\":1,\"263\":1,\"264\":1}}],[\"applicationcontextaware\",{\"1\":{\"206\":1}}],[\"applicationcontextinitializer实现类\",{\"1\":{\"268\":1}}],[\"applicationcontextinitializer\",{\"0\":{\"180\":1}}],[\"applicationexit\",{\"1\":{\"305\":3}}],[\"applicationenvironment之一\",{\"1\":{\"259\":1}}],[\"applicationenvironment实例\",{\"1\":{\"249\":1}}],[\"applicationeventpublisher\",{\"1\":{\"207\":1}}],[\"applicationeventpublisheraware\",{\"1\":{\"206\":1}}],[\"applicationevent\",{\"1\":{\"25\":1}}],[\"applicationreactivewebenvironment\",{\"1\":{\"259\":1}}],[\"applicationreactivewebenvironment实例\",{\"1\":{\"249\":1}}],[\"applicationrunner对象的run函数\",{\"0\":{\"285\":1}}],[\"applicationrunner\",{\"0\":{\"189\":1},\"1\":{\"285\":1}}],[\"applicationstartup\",{\"1\":{\"264\":1}}],[\"applicationstartupaware\",{\"1\":{\"206\":1}}],[\"applicationservletenvironment\",{\"1\":{\"249\":1,\"259\":1}}],[\"application\",{\"1\":{\"190\":1,\"210\":1,\"215\":1,\"246\":1}}],[\"applicationlistener\",{\"0\":{\"188\":1},\"1\":{\"25\":1}}],[\"applicationlistener<t>\",{\"1\":{\"25\":1}}],[\"api借助于同样新出现的lambda表达式\",{\"1\":{\"47\":1}}],[\"aggregate\",{\"1\":{\"47\":1}}],[\"afterrefresh\",{\"0\":{\"282\":1}}],[\"after\",{\"1\":{\"47\":3}}],[\"attach\",{\"0\":{\"254\":1,\"260\":1}}],[\"atstartofday\",{\"1\":{\"47\":1}}],[\"atzone\",{\"1\":{\"47\":4}}],[\"auto\",{\"1\":{\"289\":1}}],[\"author\",{\"1\":{\"9\":4,\"25\":6,\"305\":1}}],[\"august\",{\"1\":{\"47\":1}}],[\"ava\",{\"1\":{\"47\":1}}],[\"args\",{\"1\":{\"305\":1}}],[\"arp\",{\"1\":{\"103\":1}}],[\"arraylist<integer>\",{\"1\":{\"47\":1}}],[\"arrays\",{\"1\":{\"9\":4,\"47\":3}}],[\"are\",{\"1\":{\"47\":1}}],[\"abs\",{\"1\":{\"289\":1}}],[\"absence\",{\"1\":{\"47\":1}}],[\"abstractmap\",{\"1\":{\"305\":1}}],[\"abstract\",{\"1\":{\"9\":1,\"25\":4}}],[\"answer\",{\"1\":{\"305\":3}}],[\"andthen\",{\"1\":{\"47\":1}}],[\"and\",{\"1\":{\"47\":2}}],[\"ann\",{\"1\":{\"40\":1}}],[\"annotationawareordercomparator\",{\"1\":{\"285\":1}}],[\"annotation\",{\"1\":{\"267\":1}}],[\"annotationconfigreactivewebserverapplicationcontext\",{\"1\":{\"263\":1}}],[\"annotationconfigservletwebserverapplicationcontext\",{\"1\":{\"263\":1}}],[\"annotationutil\",{\"1\":{\"9\":2}}],[\"anno\",{\"1\":{\"9\":8}}],[\"a\",{\"1\":{\"47\":19,\"100\":5,\"289\":2}}],[\"acay\",{\"1\":{\"305\":1}}],[\"acc\",{\"1\":{\"289\":1}}],[\"access\",{\"1\":{\"40\":3}}],[\"accept\",{\"1\":{\"25\":2,\"47\":6}}],[\"action\",{\"1\":{\"25\":5,\"47\":3}}],[\"activity<customactivity>\",{\"1\":{\"25\":1}}],[\"activity<\",{\"1\":{\"25\":8}}],[\"activity<t>\",{\"1\":{\"25\":1}}],[\"activity\",{\"1\":{\"25\":28}}],[\"addinitializers\",{\"1\":{\"268\":1}}],[\"additional\",{\"1\":{\"47\":1}}],[\"addconversionservice\",{\"0\":{\"251\":1},\"1\":{\"267\":1}}],[\"add\",{\"1\":{\"25\":1}}],[\"addplugin\",{\"1\":{\"25\":2}}],[\"assist\",{\"1\":{\"289\":1}}],[\"aslist\",{\"1\":{\"47\":2}}],[\"async\",{\"1\":{\"25\":1}}],[\"as\",{\"1\":{\"17\":1,\"47\":1}}],[\"==\",{\"1\":{\"305\":9}}],[\"=\",{\"1\":{\"9\":8,\"25\":5,\"34\":1,\"47\":86,\"100\":8,\"305\":54}}],[\"err\",{\"1\":{\"305\":2}}],[\"errorinfo\",{\"1\":{\"305\":2}}],[\"error\",{\"1\":{\"25\":2}}],[\"els\",{\"1\":{\"305\":2}}],[\"electronic\",{\"1\":{\"289\":1}}],[\"element\",{\"1\":{\"25\":3}}],[\"elementtype\",{\"1\":{\"9\":4,\"47\":1}}],[\"eb\",{\"1\":{\"289\":1}}],[\"eba\",{\"1\":{\"289\":1}}],[\"etc\",{\"1\":{\"289\":1}}],[\"end\",{\"1\":{\"305\":2}}],[\"entry<string\",{\"1\":{\"305\":3}}],[\"entry\",{\"1\":{\"305\":2}}],[\"env\",{\"0\":{\"251\":1},\"1\":{\"254\":2,\"259\":1}}],[\"environmentstandardenvironment\",{\"0\":{\"259\":1}}],[\"environmentconverter\",{\"0\":{\"259\":1}}],[\"environmentprepared\",{\"0\":{\"255\":1}}],[\"environmentpostprocessor\",{\"0\":{\"191\":1}}],[\"environment\",{\"0\":{\"257\":1},\"1\":{\"210\":2,\"280\":1}}],[\"environmentaware\",{\"1\":{\"206\":1}}],[\"engine层无法通过索引精准匹配的数据\",{\"1\":{\"34\":1}}],[\"engine层返回给server层的数据都是会加锁的\",{\"1\":{\"34\":1}}],[\"engine层就会把符合条件的数据全部返回\",{\"1\":{\"34\":1}}],[\"engine层负责数据的存取\",{\"1\":{\"34\":1}}],[\"engine层根据条件查出数据后返回给server层\",{\"1\":{\"31\":1}}],[\"engine将数据追加到内存缓存池中\",{\"1\":{\"31\":1}}],[\"e等等原因\",{\"1\":{\"111\":1}}],[\"epoch\",{\"1\":{\"97\":1}}],[\"effect\",{\"1\":{\"47\":1}}],[\"e\",{\"1\":{\"47\":10,\"289\":1}}],[\"emergencylightstatus\",{\"1\":{\"305\":2}}],[\"emergency\",{\"1\":{\"289\":1,\"305\":15}}],[\"embeddedvalueresolveraware\",{\"1\":{\"206\":1}}],[\"empty\",{\"1\":{\"47\":1}}],[\"email\",{\"1\":{\"0\":1}}],[\"expectationlightstatus\",{\"1\":{\"305\":3}}],[\"exit\",{\"1\":{\"305\":1}}],[\"ex\",{\"1\":{\"305\":2}}],[\"exception\",{\"1\":{\"305\":1}}],[\"executionexception\",{\"1\":{\"305\":1}}],[\"execution\",{\"1\":{\"305\":2}}],[\"executors\",{\"1\":{\"305\":2}}],[\"executorservice\",{\"1\":{\"305\":2}}],[\"execute\",{\"1\":{\"47\":1}}],[\"extends\",{\"1\":{\"9\":7,\"25\":17,\"47\":1}}],[\"equals\",{\"1\":{\"25\":1,\"305\":2}}],[\"eventcenter\",{\"1\":{\"25\":3}}],[\"event<customevent>\",{\"1\":{\"25\":1}}],[\"event<\",{\"1\":{\"25\":2}}],[\"event<t>\",{\"1\":{\"25\":2}}],[\"event\",{\"1\":{\"25\":19,\"215\":1}}],[\"event是spring\",{\"1\":{\"24\":1}}],[\"import\",{\"1\":{\"305\":12}}],[\"implements\",{\"1\":{\"9\":3,\"25\":3}}],[\"ignore\",{\"1\":{\"261\":1}}],[\"icmp\",{\"1\":{\"103\":1}}],[\"icp\",{\"1\":{\"34\":1}}],[\"iterate\",{\"1\":{\"47\":1}}],[\"iterator\",{\"1\":{\"47\":1}}],[\"item\",{\"1\":{\"25\":4}}],[\"io包里的inputstream和outputstream是完全不同的概念\",{\"1\":{\"47\":1}}],[\"ids\",{\"1\":{\"47\":1}}],[\"id\",{\"1\":{\"34\":1}}],[\"il简单的讲可以理解为在当前读情况下\",{\"1\":{\"33\":1}}],[\"iseagerinit\",{\"1\":{\"230\":1}}],[\"isnull\",{\"1\":{\"47\":3}}],[\"isp\",{\"1\":{\"47\":1}}],[\"ispresent\",{\"1\":{\"47\":3}}],[\"is\",{\"1\":{\"47\":2}}],[\"isolation\",{\"0\":{\"33\":1}}],[\"isassignablefrom\",{\"1\":{\"9\":2,\"25\":1}}],[\"ifpresent\",{\"1\":{\"47\":2}}],[\"if\",{\"1\":{\"25\":1,\"47\":3,\"305\":1}}],[\"input\",{\"1\":{\"305\":3}}],[\"invokebeanfactorypostprocessors\",{\"0\":{\"212\":1}}],[\"inversion\",{\"1\":{\"146\":1}}],[\"initlifecycleprocessor\",{\"0\":{\"235\":1}}],[\"initapplicationeventmulticaster\",{\"0\":{\"215\":1}}],[\"initmessagesource\",{\"0\":{\"214\":1}}],[\"initbeandefinitionreader\",{\"1\":{\"200\":1}}],[\"initpropertysources\",{\"1\":{\"195\":1}}],[\"initializingbean\",{\"0\":{\"187\":1}}],[\"instanceof\",{\"1\":{\"305\":1}}],[\"instance\",{\"1\":{\"305\":4}}],[\"instantiationawarebeanpostprocessor\",{\"0\":{\"185\":1}}],[\"instant\",{\"1\":{\"47\":1}}],[\"insert\",{\"1\":{\"30\":1}}],[\"incomplete\",{\"1\":{\"40\":1}}],[\"index\",{\"1\":{\"305\":5}}],[\"indexfilter在5\",{\"1\":{\"34\":1}}],[\"indexfilter指定的过滤条件将会被加上行锁\",{\"1\":{\"34\":1}}],[\"indexfilter\",{\"1\":{\"34\":1}}],[\"indexkey\",{\"1\":{\"34\":1}}],[\"int\",{\"1\":{\"100\":2,\"305\":23}}],[\"intstream\",{\"1\":{\"47\":1,\"305\":2}}],[\"into\",{\"1\":{\"30\":1}}],[\"interruptedexception\",{\"1\":{\"305\":1}}],[\"internalconfigurationbeannamegenerator\",{\"1\":{\"267\":1}}],[\"interface\",{\"1\":{\"9\":5,\"25\":2,\"39\":1,\"47\":3,\"146\":1}}],[\"integer\",{\"1\":{\"25\":1,\"47\":2,\"305\":3}}],[\"in\",{\"1\":{\"30\":2,\"305\":2}}],[\"innodb\",{\"2\":{\"37\":1}}],[\"innodb会对全表的数据记录加锁\",{\"1\":{\"34\":1}}],[\"innodb会对全部表中的记录加锁\",{\"1\":{\"34\":1}}],[\"innodb会加三把锁\",{\"1\":{\"34\":1}}],[\"innodb会加两把锁\",{\"1\":{\"34\":1}}],[\"innodb是使用最广泛的一种\",{\"1\":{\"33\":1}}],[\"innodb存储引擎的并发是通过mvcc\",{\"1\":{\"29\":1}}],[\"innodb中的隔离级别与mvcc\",{\"0\":{\"29\":1}}],[\"info\",{\"1\":{\"25\":2,\"305\":8}}],[\"ip\",{\"1\":{\"1\":1,\"103\":1}}],[\"pull\",{\"1\":{\"305\":3}}],[\"publish函数\",{\"1\":{\"237\":1}}],[\"publishevent\",{\"1\":{\"25\":1}}],[\"publish\",{\"1\":{\"25\":3}}],[\"public\",{\"1\":{\"9\":8,\"17\":1,\"25\":29,\"39\":1,\"47\":13,\"305\":12}}],[\"pool\",{\"1\":{\"305\":5}}],[\"postprocessapplicationcontext\",{\"0\":{\"267\":1}}],[\"postprocessbeanfactory\",{\"0\":{\"211\":1}}],[\"postdefineclass\",{\"0\":{\"91\":1}}],[\"postgresql\",{\"1\":{\"15\":1,\"17\":2}}],[\"package\",{\"1\":{\"305\":1}}],[\"parseint\",{\"1\":{\"305\":3}}],[\"parse\",{\"1\":{\"47\":2}}],[\"parallellightstatus\",{\"1\":{\"305\":2}}],[\"parallel\",{\"1\":{\"9\":4,\"305\":4}}],[\"parameter\",{\"1\":{\"39\":1}}],[\"param\",{\"1\":{\"9\":3,\"25\":21,\"305\":7}}],[\"pps\",{\"1\":{\"295\":1}}],[\"ppp\",{\"1\":{\"103\":1}}],[\"period\",{\"1\":{\"47\":5}}],[\"phase\",{\"0\":{\"32\":1}}],[\"plugin的设计理念\",{\"1\":{\"26\":1}}],[\"plugincenter\",{\"1\":{\"25\":2}}],[\"plugin<t\",{\"1\":{\"25\":1}}],[\"plugin>\",{\"1\":{\"25\":1}}],[\"plugin>>\",{\"1\":{\"25\":1}}],[\"plugin\",{\"1\":{\"25\":7}}],[\"plugins\",{\"1\":{\"25\":2}}],[\"plusdays\",{\"1\":{\"47\":1}}],[\"plus\",{\"1\":{\"2\":1}}],[\"primarysources\",{\"1\":{\"278\":1}}],[\"println\",{\"1\":{\"305\":1}}],[\"printf\",{\"1\":{\"305\":1}}],[\"printcurrentstatus\",{\"1\":{\"305\":2}}],[\"printquestions\",{\"1\":{\"305\":2}}],[\"printpreparemessage\",{\"1\":{\"305\":2}}],[\"printbanner\",{\"0\":{\"262\":1}}],[\"principle\",{\"1\":{\"146\":6}}],[\"private\",{\"1\":{\"9\":3,\"25\":3,\"305\":34}}],[\"prefix\",{\"0\":{\"257\":1},\"1\":{\"230\":1}}],[\"preinstantiatesingletons\",{\"0\":{\"224\":1}}],[\"preparenextround\",{\"1\":{\"305\":2}}],[\"preparecontext\",{\"0\":{\"265\":1}}],[\"prepareenvironment\",{\"0\":{\"248\":1}}],[\"preparebeanfactory\",{\"0\":{\"201\":1}}],[\"preparerefresh\",{\"0\":{\"195\":1}}],[\"predefineclass\",{\"0\":{\"73\":1}}],[\"predicate接口\",{\"1\":{\"47\":1}}],[\"predicate\",{\"1\":{\"47\":2}}],[\"predicate<spbasedto>\",{\"1\":{\"47\":2}}],[\"presence\",{\"1\":{\"47\":1}}],[\"present\",{\"1\":{\"47\":3}}],[\"propertysourceorderingbeanfactorypostprocessor\",{\"0\":{\"277\":1}}],[\"property\",{\"1\":{\"252\":1}}],[\"properties\",{\"1\":{\"210\":1}}],[\"processor\",{\"1\":{\"235\":1}}],[\"provided\",{\"1\":{\"47\":1}}],[\"protected\",{\"1\":{\"25\":4}}],[\"pg\",{\"1\":{\"17\":2}}],[\"ps这个方法的两个参数中必须有秒\",{\"1\":{\"47\":1}}],[\"ps\",{\"0\":{\"10\":1,\"19\":1,\"26\":1},\"1\":{\"295\":1}}],[\"90秒内完成\",{\"1\":{\"295\":1}}],[\"90\",{\"1\":{\"289\":2}}],[\"905529385550550456l\",{\"1\":{\"25\":1}}],[\"9分\",{\"1\":{\"289\":2}}],[\"9\",{\"1\":{\"9\":3,\"25\":4,\"47\":1,\"305\":1,\"308\":1,\"315\":2,\"316\":1}}],[\"tmc\",{\"1\":{\"289\":1}}],[\"tcp\",{\"1\":{\"103\":1}}],[\"tcc和saga分布式事务方案使用\",{\"1\":{\"1\":1}}],[\"t>\",{\"1\":{\"47\":2}}],[\"timeout\",{\"1\":{\"305\":2}}],[\"timeoutexception\",{\"1\":{\"305\":1}}],[\"timeunit\",{\"1\":{\"305\":4}}],[\"time\",{\"1\":{\"47\":10,\"305\":2}}],[\"time包中的类都差不多能满足我们的需求了\",{\"1\":{\"47\":1}}],[\"time包\",{\"1\":{\"47\":1}}],[\"time包下\",{\"1\":{\"47\":1}}],[\"timezone类\",{\"1\":{\"47\":1}}],[\"timeapi\",{\"1\":{\"45\":1,\"47\":1}}],[\"temp\",{\"1\":{\"305\":4}}],[\"temporaladjusters\",{\"1\":{\"47\":2}}],[\"temporal包\",{\"1\":{\"47\":1}}],[\"text\",{\"1\":{\"47\":1}}],[\"text包中定义\",{\"1\":{\"47\":1}}],[\"test\",{\"1\":{\"47\":2}}],[\"type\",{\"1\":{\"39\":1,\"47\":1}}],[\"two\",{\"0\":{\"32\":1}}],[\"total\",{\"1\":{\"305\":3}}],[\"topictimeout\",{\"1\":{\"305\":3}}],[\"topictotal\",{\"1\":{\"305\":3}}],[\"topic\",{\"1\":{\"305\":5}}],[\"tolocaltime\",{\"1\":{\"47\":1}}],[\"tolocaldate\",{\"1\":{\"47\":1}}],[\"tolocaldatetime\",{\"1\":{\"47\":1}}],[\"tolist\",{\"1\":{\"25\":1,\"47\":1}}],[\"toinstant\",{\"1\":{\"47\":6}}],[\"tostring\",{\"1\":{\"47\":6}}],[\"tojsonstr\",{\"1\":{\"25\":1}}],[\"todo\",{\"1\":{\"9\":12}}],[\"that\",{\"1\":{\"47\":1,\"305\":4}}],[\"the\",{\"1\":{\"47\":3}}],[\"thread\",{\"1\":{\"305\":5}}],[\"threadutil\",{\"1\":{\"25\":1}}],[\"throwable>\",{\"1\":{\"25\":2}}],[\"throwable\",{\"1\":{\"25\":11,\"47\":2}}],[\"throws\",{\"1\":{\"17\":1,\"25\":3,\"305\":1}}],[\"this\",{\"1\":{\"9\":2,\"47\":3,\"305\":14}}],[\"tag\",{\"1\":{\"47\":2}}],[\"tablefilter\",{\"1\":{\"34\":1}}],[\"tables去映射sys\",{\"1\":{\"16\":1}}],[\"tables\",{\"1\":{\"16\":2,\"17\":3}}],[\"tables修改成sys\",{\"1\":{\"16\":1}}],[\"table1\",{\"1\":{\"9\":1}}],[\"tabledto1\",{\"1\":{\"9\":5}}],[\"tabledto\",{\"1\":{\"9\":5}}],[\"table\",{\"1\":{\"9\":8,\"30\":6,\"34\":1}}],[\"target\",{\"1\":{\"9\":4,\"39\":1,\"47\":1}}],[\"traffic\",{\"1\":{\"289\":1}}],[\"transformedbeanname\",{\"1\":{\"231\":1}}],[\"transport>\",{\"1\":{\"9\":2}}],[\"transport\",{\"1\":{\"9\":5}}],[\"tranfield\",{\"1\":{\"9\":3}}],[\"tran\",{\"1\":{\"9\":3}}],[\"try\",{\"1\":{\"25\":1,\"305\":1}}],[\"true\",{\"1\":{\"9\":4,\"25\":1,\"47\":2,\"236\":1,\"244\":1,\"305\":1}}],[\"t\",{\"1\":{\"9\":2,\"25\":13,\"47\":10,\"289\":1}}],[\"并维持右侧停车线一直在雨刮器顶点行进\",{\"1\":{\"326\":1}}],[\"并可倾斜踩踏加速踏板\",{\"1\":{\"310\":1}}],[\"并可以根据运行时进行动态选择\",{\"1\":{\"173\":1}}],[\"并\",{\"1\":{\"310\":1}}],[\"并以空格分开\",{\"1\":{\"305\":1}}],[\"并指定拉取的最大时间\",{\"1\":{\"305\":1}}],[\"并返回持续时间\",{\"1\":{\"305\":1}}],[\"并返回期望答案\",{\"1\":{\"305\":1}}],[\"并返回server层成功\",{\"1\":{\"31\":1}}],[\"并紧闭左眼可以在后视镜上边缘看到后车门把手末端\",{\"1\":{\"293\":2}}],[\"并右腿关节处与方向盘的距离一圈略小\",{\"1\":{\"293\":1}}],[\"并吊驾照\",{\"1\":{\"289\":1}}],[\"并将操作杆档位挂入d档\",{\"1\":{\"312\":1}}],[\"并将新值加进去\",{\"1\":{\"254\":1}}],[\"并将返回的数据加锁\",{\"1\":{\"31\":1}}],[\"并添加当当前环境的属性源的第一个位置\",{\"1\":{\"252\":1}}],[\"并加入\",{\"0\":{\"251\":1}}],[\"并发布结束刷新事件\",{\"0\":{\"233\":1}}],[\"并发模式能够充分利用多核处理器的优势\",{\"1\":{\"47\":1}}],[\"并判断bean是否为\",{\"0\":{\"232\":1}}],[\"并初始化一些特殊bean对象\",{\"0\":{\"218\":1}}],[\"并放入工厂\",{\"1\":{\"215\":1}}],[\"并注册进容器\",{\"1\":{\"214\":1}}],[\"并重新从applicationlisteners属性中加载\",{\"1\":{\"195\":1}}],[\"并给自己找一堆不付出努力的理由\",{\"1\":{\"111\":1}}],[\"并执行\",{\"1\":{\"90\":2}}],[\"并校验是否合法\",{\"1\":{\"84\":1}}],[\"并通过synchronized加锁\",{\"0\":{\"53\":1}}],[\"并通过其对应的主键对聚簇索引中的行加锁\",{\"1\":{\"34\":1}}],[\"并没有一些明确定义的类\",{\"1\":{\"47\":1}}],[\"并根据各自加锁的顺序分析才能找到照成死锁的最终原因\",{\"1\":{\"35\":1}}],[\"并在类中调用了接口的accept\",{\"1\":{\"47\":1}}],[\"并在此基础上对所有记录间加入间隙锁\",{\"1\":{\"34\":1}}],[\"并在满足查询条件的区间加间歇锁\",{\"1\":{\"33\":1}}],[\"并在对应对象的父类中定义函数在运行时动态的反射拷贝值\",{\"1\":{\"8\":1}}],[\"并不局限于innodb\",{\"1\":{\"33\":1}}],[\"并保证加锁阶段与解锁阶段\",{\"1\":{\"32\":1}}],[\"并且这些方法都是属于特别好认的方法\",{\"1\":{\"47\":1}}],[\"并且是工作在iso\",{\"1\":{\"47\":1}}],[\"并且\",{\"1\":{\"30\":2}}],[\"并基于jsr269在编译期实现对象互转的工具\",{\"1\":{\"7\":1}}],[\"拆箱操作相关的警告\",{\"1\":{\"40\":1}}],[\"拆箱\",{\"1\":{\"9\":1}}],[\"拆箱后的对象\",{\"1\":{\"9\":1}}],[\"拆箱后的对象也就是一个装箱后的对象\",{\"1\":{\"8\":1}}],[\"拆箱后的类型\",{\"1\":{\"9\":1}}],[\"拆装箱\",{\"1\":{\"8\":1}}],[\"3分\",{\"1\":{\"289\":2}}],[\"30\",{\"1\":{\"47\":2,\"289\":2}}],[\"31位\",{\"1\":{\"97\":1}}],[\"310的实现\",{\"1\":{\"47\":1}}],[\"31\",{\"1\":{\"25\":2,\"47\":1}}],[\"3\",{\"1\":{\"7\":1,\"15\":1,\"44\":1,\"47\":2,\"100\":2,\"289\":1,\"305\":1,\"308\":1}}],[\"msg\",{\"1\":{\"305\":3}}],[\"mbean\",{\"0\":{\"238\":1}}],[\"min\",{\"1\":{\"305\":4}}],[\"minutes\",{\"1\":{\"47\":2}}],[\"minusdays\",{\"1\":{\"47\":1}}],[\"millis\",{\"1\":{\"47\":1}}],[\"milis\",{\"1\":{\"47\":1}}],[\"mm\",{\"1\":{\"47\":1}}],[\"movetoend\",{\"0\":{\"256\":1}}],[\"month\",{\"1\":{\"47\":4}}],[\"months\",{\"1\":{\"47\":3}}],[\"module\",{\"1\":{\"39\":1}}],[\"mode\",{\"1\":{\"30\":2}}],[\"model\",{\"1\":{\"9\":1,\"25\":1}}],[\"master\",{\"1\":{\"305\":29}}],[\"max\",{\"1\":{\"305\":8}}],[\"math\",{\"1\":{\"305\":2}}],[\"main\",{\"0\":{\"257\":1},\"1\":{\"258\":1,\"305\":1}}],[\"markword\",{\"0\":{\"97\":1}}],[\"map>\",{\"1\":{\"47\":1}}],[\"map\",{\"1\":{\"47\":4,\"305\":1}}],[\"mapstruct是一个通过定义转换接口\",{\"1\":{\"7\":1}}],[\"may\",{\"1\":{\"47\":2}}],[\"message\",{\"1\":{\"214\":1}}],[\"messagesourceaware\",{\"1\":{\"206\":1}}],[\"methods\",{\"1\":{\"47\":1}}],[\"method\",{\"1\":{\"39\":1}}],[\"mekatok即是使用liquibase对数据库进行管理\",{\"1\":{\"19\":1}}],[\"mekatok\",{\"2\":{\"11\":1,\"12\":1,\"20\":1,\"21\":1,\"27\":1,\"28\":1}}],[\"mylambda<a\",{\"1\":{\"47\":2}}],[\"mysql对这部分还是做了优化的\",{\"1\":{\"34\":1}}],[\"mysql是分为两层的server层和engine层\",{\"1\":{\"34\":1}}],[\"mysql\",{\"1\":{\"34\":1},\"2\":{\"36\":1,\"37\":1}}],[\"mybatis\",{\"1\":{\"2\":1}}],[\"multicaster\",{\"1\":{\"215\":1}}],[\"multi\",{\"1\":{\"29\":1}}],[\"mvcc\",{\"1\":{\"29\":1}}],[\"mvcc的快照读与并发读\",{\"0\":{\"29\":1}}],[\"2证2标1牌\",{\"1\":{\"289\":1}}],[\"2百2千吊驾照\",{\"1\":{\"289\":1}}],[\"2^3\",{\"1\":{\"100\":1}}],[\"2位\",{\"1\":{\"97\":2}}],[\"21\",{\"1\":{\"47\":1}}],[\"29\",{\"1\":{\"47\":1}}],[\"2023\",{\"1\":{\"305\":1}}],[\"2021\",{\"1\":{\"9\":4,\"25\":6}}],[\"20\",{\"1\":{\"47\":1,\"289\":5}}],[\"2017\",{\"1\":{\"47\":1}}],[\"2018\",{\"1\":{\"47\":8}}],[\"2pl就是将加锁\",{\"1\":{\"32\":1}}],[\"27\",{\"1\":{\"25\":1,\"47\":1}}],[\"23\",{\"1\":{\"25\":3,\"47\":1}}],[\"28\",{\"1\":{\"9\":3,\"47\":1}}],[\"2\",{\"1\":{\"7\":1,\"47\":3,\"305\":5,\"308\":1}}],[\"且应在车前门把手完全进入库口虚线前\",{\"1\":{\"295\":1}}],[\"且车尾落于库口虚线近延长线端二分之一之内\",{\"1\":{\"295\":1}}],[\"且眼看着车门把手笔直奔着前库角去了时\",{\"1\":{\"294\":1}}],[\"且\",{\"1\":{\"267\":2}}],[\"且创建后不允许修改\",{\"1\":{\"153\":1}}],[\"且软件单位的功能不受到影响时\",{\"1\":{\"146\":1}}],[\"且不是platformclassloader\",{\"0\":{\"75\":1}}],[\"且不优雅\",{\"1\":{\"6\":1}}],[\"且笨拙的方法\",{\"1\":{\"47\":1}}],[\"且返回一个map出参的话\",{\"1\":{\"47\":1}}],[\"且自动回复操作的成功与否要影响到消息是否接收\",{\"1\":{\"23\":1}}],[\"且指向src目录的资源永远在下标零处\",{\"1\":{\"18\":1}}],[\"且这些工具最大的问题还在于为了适配更多的情况做了很多的其他工作\",{\"1\":{\"7\":1}}],[\"市面上有很多用于bean对象之间拷贝的工具类如apache和springframework的beanutils\",{\"1\":{\"7\":1}}],[\"问题思考\",{\"0\":{\"7\":1,\"15\":1,\"24\":1}}],[\"问题描述\",{\"0\":{\"6\":1,\"14\":1,\"23\":1}}],[\"冗长\",{\"1\":{\"6\":1}}],[\"d毫秒\",{\"1\":{\"305\":1}}],[\"dns\",{\"1\":{\"103\":1}}],[\"disposablebean\",{\"0\":{\"186\":1}}],[\"did\",{\"1\":{\"47\":1}}],[\"dic\",{\"1\":{\"47\":9}}],[\"dic>\",{\"1\":{\"47\":1}}],[\"d\",{\"1\":{\"47\":9,\"111\":1}}],[\"duration\",{\"1\":{\"47\":4}}],[\"dd\",{\"1\":{\"47\":1}}],[\"days\",{\"1\":{\"47\":4}}],[\"databasemetadata接口的类\",{\"1\":{\"17\":1}}],[\"datetimeformatter\",{\"1\":{\"47\":1}}],[\"dateformat抽象类\",{\"1\":{\"47\":1}}],[\"date仅包含日期\",{\"1\":{\"47\":1}}],[\"date同时包含日期和时间\",{\"1\":{\"47\":1}}],[\"date\",{\"1\":{\"9\":4,\"25\":6,\"45\":1,\"47\":16}}],[\"dyration以及period这些\",{\"1\":{\"47\":1}}],[\"dml执行过程\",{\"0\":{\"31\":1}}],[\"delegatingmessagesource对象\",{\"1\":{\"214\":1}}],[\"delete\",{\"1\":{\"30\":1,\"34\":1}}],[\"demeter\",{\"1\":{\"146\":1}}],[\"demo3\",{\"1\":{\"47\":1}}],[\"demo2\",{\"1\":{\"47\":1}}],[\"demo1\",{\"1\":{\"47\":1}}],[\"defineclass1\",{\"0\":{\"79\":1}}],[\"defineclasssourcelocation\",{\"0\":{\"78\":1}}],[\"defineclass\",{\"0\":{\"72\":1}}],[\"defalut关键字\",{\"1\":{\"45\":1}}],[\"defaultlistablebeanfactory\",{\"0\":{\"275\":1}}],[\"defaultlifecycleprocessor对象\",{\"1\":{\"235\":1}}],[\"defaultapplicationstartup\",{\"1\":{\"264\":1}}],[\"defaultapplicationarguments对象\",{\"0\":{\"247\":1}}],[\"defaultpropertiespropertysource\",{\"0\":{\"256\":1}}],[\"defaultproperties属性中\",{\"1\":{\"252\":1}}],[\"defaultproperties\",{\"1\":{\"252\":1,\"256\":1}}],[\"defaultbootstrapcontext\",{\"0\":{\"270\":1},\"1\":{\"243\":1}}],[\"defaultresourceloader\",{\"1\":{\"234\":1,\"262\":1}}],[\"default关键字\",{\"1\":{\"47\":1}}],[\"default\",{\"1\":{\"9\":1,\"25\":2,\"47\":3,\"305\":4}}],[\"dependence\",{\"1\":{\"146\":1}}],[\"depend\",{\"1\":{\"47\":1}}],[\"deprecation\",{\"1\":{\"40\":1}}],[\"dep\",{\"1\":{\"40\":1}}],[\"description\",{\"1\":{\"25\":4}}],[\"do\",{\"1\":{\"25\":2,\"47\":8}}],[\"documented\",{\"1\":{\"9\":4,\"47\":1}}],[\"domain对象\",{\"1\":{\"9\":2}}],[\"domain对象继承dto对象\",{\"1\":{\"8\":1}}],[\"domain与dto之间的关系\",{\"1\":{\"9\":1}}],[\"domain是一个拆箱后的对象\",{\"1\":{\"8\":1}}],[\"domain\",{\"1\":{\"6\":1}}],[\"dto对象2\",{\"1\":{\"9\":1}}],[\"dto对象1\",{\"1\":{\"9\":1}}],[\"dto对象\",{\"1\":{\"9\":1}}],[\"dto是一个装箱后对象\",{\"1\":{\"8\":1}}],[\"dto\",{\"1\":{\"6\":1,\"47\":16}}],[\"代表开启近光灯<\",{\"1\":{\"305\":1}}],[\"代表开启远光灯<\",{\"1\":{\"305\":1}}],[\"代表开启前照灯<\",{\"1\":{\"305\":1}}],[\"代表开启示廓灯<\",{\"1\":{\"305\":1}}],[\"代表关闭总开关<\",{\"1\":{\"305\":1}}],[\"代表按动\",{\"1\":{\"302\":1}}],[\"代表向远怀拨动一下\",{\"1\":{\"305\":1}}],[\"代表向远怀方向拨动一下\",{\"1\":{\"302\":1}}],[\"代表向近怀拨动一下\",{\"1\":{\"305\":1}}],[\"代表向近怀方向拨动一下\",{\"1\":{\"302\":1}}],[\"代表逆时针拨动一下\",{\"1\":{\"302\":1,\"305\":1}}],[\"代表顺时针拨动一下\",{\"1\":{\"302\":1,\"305\":1}}],[\"代理模式\",{\"0\":{\"159\":1}}],[\"代理机制\",{\"1\":{\"1\":1}}],[\"代码片段\",{\"0\":{\"305\":1},\"2\":{\"50\":1}}],[\"代码中经常出现大量的代码如下\",{\"1\":{\"6\":1}}],[\"在上一个\",{\"1\":{\"320\":1}}],[\"在驶出掉头车道前将第5步的四分之一回完\",{\"1\":{\"318\":1}}],[\"在驶出掉头专用道之前是不会掉转向灯的\",{\"1\":{\"318\":1}}],[\"在心中默数3秒\",{\"1\":{\"315\":2,\"316\":1}}],[\"在心中默数三秒\",{\"1\":{\"312\":1}}],[\"在绿灯后通过当前路口\",{\"1\":{\"313\":1}}],[\"在十秒内将车辆起步\",{\"1\":{\"312\":1}}],[\"在语音播报结束后5秒内完成相应的灯光操作\",{\"1\":{\"311\":1}}],[\"在开始考试时\",{\"1\":{\"310\":1}}],[\"在\",{\"1\":{\"301\":1}}],[\"在划线的道路行驶\",{\"1\":{\"289\":1}}],[\"在没有划线的道路行驶\",{\"1\":{\"289\":1}}],[\"在满分教育和学法减分中作弊的罚款一千\",{\"1\":{\"289\":1}}],[\"在驾驶证考试中作弊的\",{\"1\":{\"289\":1}}],[\"在beanfactory中注册\",{\"0\":{\"272\":1}}],[\"在属性源中获取并删除\",{\"1\":{\"256\":1}}],[\"在单例池中获取当前对象\",{\"1\":{\"231\":1}}],[\"在相同的执行函数中实现不同命令逻辑\",{\"1\":{\"169\":1}}],[\"在目标组件服务执行前后\",{\"1\":{\"159\":1}}],[\"在程序需要进行拓展的时候\",{\"1\":{\"146\":1}}],[\"在意他人的评价\",{\"1\":{\"114\":1}}],[\"在追寻白日梦的时候往往会遭受来自现实生活的打击\",{\"1\":{\"112\":1}}],[\"在自己的心里默认一个\",{\"1\":{\"111\":1}}],[\"在人际交往做事情的时候\",{\"1\":{\"110\":1}}],[\"在生命的竞赛中总是容易被哪些坚定地人挤到一边\",{\"1\":{\"107\":1}}],[\"在jvm方法区找一下是否存在当前class对象并返回\",{\"0\":{\"54\":1}}],[\"在java\",{\"1\":{\"47\":1}}],[\"在java中\",{\"1\":{\"47\":1}}],[\"在数据来源多样化\",{\"1\":{\"47\":1}}],[\"在当今这个数据大爆炸的时代\",{\"1\":{\"47\":1}}],[\"在声明定义这个接口的泛型时\",{\"1\":{\"47\":2}}],[\"在官方定义在java\",{\"1\":{\"47\":1}}],[\"在定义用于lambda的接口时\",{\"1\":{\"47\":1}}],[\"在这里就不一一列举了\",{\"1\":{\"47\":1}}],[\"在这些服务节点很有可能再增加其他细节\",{\"1\":{\"24\":1}}],[\"在编程到达一定程度以后\",{\"1\":{\"47\":1}}],[\"在编程的过程中\",{\"1\":{\"44\":1}}],[\"在应用系统中空指针异常本应是业务缺陷的一种体现\",{\"1\":{\"47\":1}}],[\"在应对业务场景复杂度提高和降低开发门槛上有很大的优越性\",{\"1\":{\"44\":1}}],[\"在某些方面上我们还是愿意使用pop思维进行编程\",{\"1\":{\"44\":1}}],[\"在我接触的大部分公司中都不是太热衷于使用spring\",{\"1\":{\"44\":1}}],[\"在对jdk5使用了这么多年以来\",{\"1\":{\"44\":1}}],[\"在对象间数据拷贝方面\",{\"1\":{\"8\":1}}],[\"在cpu多核化的当下\",{\"1\":{\"44\":1}}],[\"在类参数上使用泛型时抑制与非特定类型相关的警告\",{\"1\":{\"40\":1}}],[\"在默认的rr模式下\",{\"1\":{\"34\":1}}],[\"在使用indexkey确定了查询的连续范围后\",{\"1\":{\"34\":1}}],[\"在不同事务隔离级别下\",{\"1\":{\"34\":1}}],[\"在标准的rr模式下是无法避免幻读问题的\",{\"1\":{\"33\":1}}],[\"在mysql的事务引擎中\",{\"1\":{\"33\":1}}],[\"在mvcc并发控制中\",{\"1\":{\"30\":1}}],[\"在读取之后还需要保证其他并发事务不能修改当前记录\",{\"1\":{\"30\":1}}],[\"在读多写少的应用中\",{\"1\":{\"29\":1}}],[\"在以后项目的升级过程中\",{\"1\":{\"24\":1}}],[\"在src下创建同名同路径的java文件\",{\"1\":{\"18\":1}}],[\"在关键节点中欺骗activiti\",{\"1\":{\"16\":1}}],[\"在kingbase对于pgsql的差异中包括\",{\"1\":{\"15\":1}}],[\"在现阶段大环境下\",{\"1\":{\"14\":1}}],[\"在现实生活中很多货物是可以从仓库中拿出直接用于运输的\",{\"1\":{\"8\":1}}],[\"在实际的开发中\",{\"1\":{\"6\":1}}],[\"在项目中有过应用\",{\"1\":{\"1\":1}}],[\"数据的状态有序流转\",{\"1\":{\"171\":1}}],[\"数据段\",{\"1\":{\"103\":1}}],[\"数据会被分成多个段\",{\"1\":{\"47\":1}}],[\"数据只能遍历一次\",{\"1\":{\"47\":1}}],[\"数据海量化的今天\",{\"1\":{\"47\":1}}],[\"数据加工\",{\"1\":{\"47\":1}}],[\"数据校验过滤\",{\"1\":{\"47\":1}}],[\"数据操作\",{\"1\":{\"47\":1}}],[\"数据过滤\",{\"1\":{\"47\":1}}],[\"数据表版本进行管理\",{\"1\":{\"19\":1}}],[\"数据库系统\",{\"1\":{\"33\":1}}],[\"数据库实体对象装箱时的属性指定\",{\"1\":{\"9\":1}}],[\"数据库映射对象\",{\"1\":{\"6\":1}}],[\"数据传输对象拆箱时的属性指定\",{\"1\":{\"9\":1}}],[\"数据传输对象基类\",{\"1\":{\"9\":1}}],[\"数据传输对象\",{\"1\":{\"6\":1}}],[\"北京思路智园科技有限公司\",{\"1\":{\"4\":1}}],[\"太极计算机股份有限公司\",{\"1\":{\"4\":1}}],[\"西安电子科技大学计算机科学与技术\",{\"1\":{\"3\":1}}],[\"key将其加入beanfactory\",{\"1\":{\"267\":1}}],[\"key\",{\"1\":{\"33\":1,\"47\":3}}],[\"kbdatabasemetadata类中\",{\"1\":{\"17\":1}}],[\"kingbase8\",{\"1\":{\"17\":1}}],[\"kingbase中实现了databasemetadata的类在com\",{\"1\":{\"17\":1}}],[\"kingbase数据库对于pgsql还修改了所有的系统表和视图\",{\"1\":{\"16\":1}}],[\"kingbasees\",{\"1\":{\"15\":1,\"17\":2,\"18\":1}}],[\"kingbase\",{\"1\":{\"14\":1}}],[\"knife4j\",{\"1\":{\"2\":1}}],[\"kafka\",{\"1\":{\"2\":1}}],[\"军人\",{\"1\":{\"132\":1}}],[\"军民融合\",{\"1\":{\"2\":1}}],[\"军科院网信所\",{\"1\":{\"2\":1}}],[\"found\",{\"1\":{\"329\":1}}],[\"for\",{\"1\":{\"30\":1,\"47\":1}}],[\"formatter\",{\"1\":{\"47\":1}}],[\"format包\",{\"1\":{\"47\":1}}],[\"format\",{\"1\":{\"25\":1,\"47\":1}}],[\"foreach\",{\"1\":{\"9\":4,\"47\":3,\"305\":1}}],[\"future\",{\"1\":{\"305\":1}}],[\"function<string\",{\"1\":{\"47\":2}}],[\"function<spbasedto\",{\"1\":{\"47\":2}}],[\"function包下的接口\",{\"1\":{\"47\":1}}],[\"function包下\",{\"1\":{\"47\":1}}],[\"function\",{\"1\":{\"47\":4}}],[\"functionalinterface\",{\"1\":{\"47\":4}}],[\"fcw\",{\"1\":{\"289\":1}}],[\"ftp\",{\"1\":{\"103\":1}}],[\"fx\",{\"1\":{\"47\":2}}],[\"false\",{\"1\":{\"305\":4}}],[\"fallthrough\",{\"1\":{\"40\":1}}],[\"factories中定义的\",{\"1\":{\"245\":1}}],[\"factory\",{\"1\":{\"230\":1}}],[\"failure\",{\"1\":{\"25\":8}}],[\"front\",{\"1\":{\"305\":5}}],[\"frozenbeandefinitionnames\",{\"1\":{\"223\":1}}],[\"from\",{\"1\":{\"17\":1,\"30\":4,\"34\":1,\"47\":2}}],[\"freezeconfiguration\",{\"0\":{\"223\":1}}],[\"framework中一个很重要的功能之一\",{\"1\":{\"24\":2}}],[\"framework的程序开发\",{\"1\":{\"1\":1}}],[\"f\",{\"1\":{\"9\":2,\"47\":8}}],[\"finishrefresh\",{\"0\":{\"233\":1}}],[\"finishbeanfactoryinitialization\",{\"0\":{\"218\":1}}],[\"findbootstrapclass\",{\"0\":{\"63\":1}}],[\"findbootstrapclassornull\",{\"0\":{\"61\":1}}],[\"findloadedclass0\",{\"0\":{\"56\":1}}],[\"findloadedclass\",{\"0\":{\"54\":1}}],[\"finally\",{\"1\":{\"40\":2}}],[\"final\",{\"1\":{\"25\":3,\"305\":20}}],[\"firstdayofmonth\",{\"1\":{\"47\":1}}],[\"field=\",{\"1\":{\"9\":4}}],[\"field\",{\"1\":{\"9\":20,\"39\":1,\"40\":1}}],[\"filter\",{\"1\":{\"9\":4,\"25\":1,\"47\":6}}],[\"flowable的同学应该都知道\",{\"1\":{\"14\":1}}],[\"flowable\",{\"0\":{\"13\":1},\"1\":{\"2\":1}}],[\"flink\",{\"1\":{\"2\":1}}],[\"yield\",{\"1\":{\"305\":1}}],[\"year\",{\"1\":{\"47\":2}}],[\"years\",{\"1\":{\"47\":3}}],[\"yyyy\",{\"1\":{\"47\":1}}],[\"yarn\",{\"1\":{\"2\":1}}],[\"yran运行机制\",{\"1\":{\"1\":1}}],[\"+\",{\"1\":{\"2\":11,\"47\":1,\"305\":4}}],[\"nfs\",{\"1\":{\"103\":1}}],[\"num\",{\"1\":{\"305\":3}}],[\"nums\",{\"1\":{\"47\":2}}],[\"nullpointexception\",{\"1\":{\"44\":1}}],[\"null\",{\"1\":{\"40\":1,\"47\":1,\"305\":5}}],[\"n\",{\"1\":{\"47\":4}}],[\"november\",{\"1\":{\"47\":1}}],[\"now\",{\"1\":{\"47\":22}}],[\"non\",{\"1\":{\"47\":1}}],[\"not\",{\"1\":{\"47\":2,\"329\":1}}],[\"native函数\",{\"0\":{\"56\":1,\"63\":1,\"79\":1},\"1\":{\"93\":1}}],[\"nanos\",{\"1\":{\"47\":1}}],[\"nano\",{\"1\":{\"47\":1}}],[\"nashorn\",{\"1\":{\"47\":1}}],[\"name它便会容易改变\",{\"1\":{\"141\":1}}],[\"name\",{\"1\":{\"9\":3,\"25\":5,\"210\":4,\"214\":1,\"215\":1,\"235\":1,\"252\":1}}],[\"namedto1\",{\"1\":{\"9\":2}}],[\"namedto\",{\"1\":{\"9\":2}}],[\"nls\",{\"1\":{\"40\":2}}],[\"nearlightstatus\",{\"1\":{\"305\":6}}],[\"near\",{\"1\":{\"305\":6}}],[\"nextint\",{\"1\":{\"305\":1}}],[\"nextline\",{\"1\":{\"305\":1}}],[\"next\",{\"1\":{\"31\":1}}],[\"newfixedthreadpool\",{\"1\":{\"305\":1}}],[\"newdate\",{\"1\":{\"47\":10}}],[\"new\",{\"1\":{\"47\":21,\"305\":21}}],[\"newlinkedlist\",{\"1\":{\"25\":1}}],[\"newinstance\",{\"1\":{\"9\":2}}],[\"netty\",{\"1\":{\"2\":1}}],[\"nginx\",{\"1\":{\"2\":1}}],[\"nio网络编程\",{\"1\":{\"1\":1}}],[\"技术栈\",{\"1\":{\"2\":2}}],[\"风力发电机基站运营实时分析处理平台\",{\"1\":{\"2\":1}}],[\"龙源电力\",{\"1\":{\"2\":1}}],[\"headless\",{\"1\":{\"244\":2}}],[\"hdlc\",{\"1\":{\"103\":1}}],[\"hdfs\",{\"1\":{\"2\":1}}],[\"hdfs集群机制\",{\"1\":{\"1\":1}}],[\"hours\",{\"1\":{\"47\":2}}],[\"hiding\",{\"1\":{\"40\":1}}],[\"hashcode\",{\"1\":{\"97\":1}}],[\"hasplugin\",{\"1\":{\"25\":1}}],[\"hasannotation\",{\"1\":{\"9\":2}}],[\"http\",{\"1\":{\"1\":1,\"103\":1}}],[\"索引调优\",{\"1\":{\"1\":1}}],[\"浅读过源码\",{\"1\":{\"1\":1}}],[\"熟练使用相关扩展点\",{\"1\":{\"1\":1}}],[\"熟悉这个包可以更好的理解这部分内容\",{\"1\":{\"26\":1}}],[\"熟悉mybatis运行机制与插件机制\",{\"1\":{\"1\":1}}],[\"熟悉基于springboot的自动装配机制\",{\"1\":{\"1\":1}}],[\"熟悉基于spring\",{\"1\":{\"1\":1}}],[\"熟悉\",{\"1\":{\"1\":1}}],[\"熟悉使用disruptor\",{\"1\":{\"1\":1}}],[\"熟悉java反射机制\",{\"1\":{\"1\":1}}],[\"熟悉jmm模型\",{\"1\":{\"1\":1}}],[\"熟悉jvm标准\",{\"1\":{\"1\":1}}],[\"scanner\",{\"1\":{\"305\":5}}],[\"script\",{\"1\":{\"25\":8}}],[\"smartinitializingsingleton的子类实例\",{\"0\":{\"232\":1}}],[\"smtp\",{\"1\":{\"103\":1}}],[\"sleep\",{\"1\":{\"305\":2}}],[\"slip\",{\"1\":{\"103\":1}}],[\"slf4j\",{\"1\":{\"25\":1}}],[\"skip\",{\"1\":{\"47\":1}}],[\"shutdownnow\",{\"1\":{\"305\":2}}],[\"short\",{\"1\":{\"47\":1}}],[\"share\",{\"1\":{\"30\":2}}],[\"since\",{\"1\":{\"305\":1}}],[\"simpleimmutableentry<>\",{\"1\":{\"305\":10}}],[\"simpleimmutableentry\",{\"1\":{\"305\":1}}],[\"simplecommandlinepropertysource\",{\"1\":{\"252\":1}}],[\"simpleapplicationeventmulticaster\",{\"1\":{\"215\":1}}],[\"simpledateformat类被用于此类需求\",{\"1\":{\"47\":1}}],[\"side\",{\"1\":{\"47\":1}}],[\"size\",{\"1\":{\"25\":1}}],[\"synthetic\",{\"1\":{\"40\":1}}],[\"system\",{\"1\":{\"47\":1,\"210\":2,\"262\":1,\"289\":1,\"305\":7}}],[\"systemdefault\",{\"1\":{\"47\":6}}],[\"systemdefaultzone\",{\"1\":{\"47\":1}}],[\"systemdefaultclock\",{\"1\":{\"47\":4}}],[\"sys\",{\"1\":{\"17\":1}}],[\"switch\",{\"1\":{\"40\":3,\"305\":4}}],[\"s锁\",{\"1\":{\"30\":1}}],[\"snapshot\",{\"0\":{\"30\":1},\"1\":{\"30\":1}}],[\"sort\",{\"1\":{\"285\":1}}],[\"something\",{\"1\":{\"25\":2,\"47\":8}}],[\"sources\",{\"1\":{\"278\":1}}],[\"source\",{\"1\":{\"25\":6,\"39\":1,\"214\":1,\"252\":1}}],[\"s\",{\"1\":{\"25\":2,\"47\":1,\"289\":1,\"305\":3}}],[\"submit\",{\"1\":{\"305\":1}}],[\"substitution\",{\"1\":{\"146\":1}}],[\"such\",{\"1\":{\"47\":1}}],[\"success\",{\"1\":{\"25\":8}}],[\"supplier`<object>`\",{\"1\":{\"47\":1}}],[\"supplier\",{\"1\":{\"47\":1}}],[\"supplier<throwable>\",{\"1\":{\"47\":2}}],[\"supplier<spbasedto>\",{\"1\":{\"47\":1}}],[\"support\",{\"1\":{\"25\":3}}],[\"suppresswarnings\",{\"0\":{\"38\":1},\"1\":{\"9\":3,\"25\":4,\"38\":4,\"39\":1,\"305\":1}}],[\"super\",{\"1\":{\"25\":5,\"47\":2}}],[\"split\",{\"1\":{\"305\":1}}],[\"spot\",{\"1\":{\"289\":1}}],[\"spbasedto>\",{\"1\":{\"47\":2}}],[\"spbasedto\",{\"1\":{\"47\":11}}],[\"springframework\",{\"1\":{\"267\":1}}],[\"springapplication类的\",{\"1\":{\"268\":1}}],[\"springapplicationbannerprinter\",{\"1\":{\"262\":1}}],[\"springapplicationrunlistener中定义的\",{\"1\":{\"246\":1}}],[\"springapplicationrunlistener\",{\"0\":{\"190\":1},\"1\":{\"245\":1}}],[\"springconfigurationpropertysources\",{\"1\":{\"254\":1}}],[\"springboot框架run函数执行流程\",{\"1\":{\"241\":1}}],[\"springboot框架run\",{\"0\":{\"241\":1}}],[\"spring框架refresh函数执行流程\",{\"1\":{\"194\":1}}],[\"spring框架refresh\",{\"0\":{\"194\":1}}],[\"spring及springboot开发扩展点\",{\"0\":{\"176\":1},\"1\":{\"176\":1}}],[\"springutil\",{\"1\":{\"25\":2}}],[\"spring\",{\"0\":{\"189\":1,\"190\":1,\"191\":1,\"257\":1},\"1\":{\"24\":1,\"25\":2,\"189\":1,\"190\":1,\"246\":1,\"258\":1,\"261\":1},\"2\":{\"193\":2,\"240\":1,\"288\":1}}],[\"sping\",{\"1\":{\"2\":1}}],[\"spi机制\",{\"1\":{\"1\":1}}],[\"severe\",{\"1\":{\"305\":1}}],[\"segregation\",{\"1\":{\"146\":1}}],[\"seconds\",{\"1\":{\"47\":3,\"305\":3}}],[\"servlet类型创建\",{\"1\":{\"263\":1}}],[\"servlet类型则创建并返回\",{\"1\":{\"249\":1}}],[\"server层负责sql的解析优化\",{\"1\":{\"34\":1}}],[\"server层会向engine层发送事务提交指令\",{\"1\":{\"31\":1}}],[\"server层接收到修改成功后\",{\"1\":{\"31\":1}}],[\"server层拿到数据后\",{\"1\":{\"31\":1}}],[\"server层根据更新语句先查询出待修改的数据\",{\"1\":{\"31\":1}}],[\"server层在拿到更新语句后\",{\"1\":{\"31\":1}}],[\"serial\",{\"1\":{\"40\":1}}],[\"serializable\",{\"1\":{\"33\":1}}],[\"serialversionuid\",{\"1\":{\"25\":2,\"40\":1}}],[\"select\",{\"1\":{\"17\":1,\"30\":3}}],[\"setemergency\",{\"1\":{\"305\":2}}],[\"setlever\",{\"1\":{\"305\":2}}],[\"setmaster\",{\"1\":{\"305\":2}}],[\"setinitializers\",{\"1\":{\"268\":1}}],[\"setsigners\",{\"1\":{\"93\":1}}],[\"set\",{\"1\":{\"30\":1}}],[\"setfieldvalue\",{\"1\":{\"9\":2}}],[\"setaccessible\",{\"1\":{\"9\":4}}],[\"setattr\",{\"1\":{\"6\":1}}],[\"sql包并不合理\",{\"1\":{\"47\":1}}],[\"sql的包中都有日期类\",{\"1\":{\"47\":1}}],[\"sql语句的加锁过程分析\",{\"0\":{\"34\":1}}],[\"sqlexception\",{\"1\":{\"17\":1}}],[\"sql\",{\"1\":{\"17\":1,\"47\":1}}],[\"stopwatch\",{\"1\":{\"305\":7}}],[\"stomp及mqtt等常用协议\",{\"1\":{\"1\":1}}],[\"status\",{\"1\":{\"305\":25}}],[\"static\",{\"1\":{\"25\":10,\"40\":1,\"305\":23}}],[\"starting函数\",{\"1\":{\"246\":1}}],[\"starting\",{\"1\":{\"246\":1}}],[\"starting事件\",{\"0\":{\"246\":1}}],[\"startbeans\",{\"1\":{\"236\":1}}],[\"startupinfologger\",{\"0\":{\"283\":1}}],[\"startup\",{\"1\":{\"210\":1,\"305\":5}}],[\"strval\",{\"0\":{\"220\":1}}],[\"str\",{\"1\":{\"47\":1}}],[\"str=\",{\"1\":{\"47\":1}}],[\"string>\",{\"1\":{\"47\":2}}],[\"stringutils\",{\"1\":{\"47\":3}}],[\"string\",{\"1\":{\"9\":5,\"17\":1,\"25\":5,\"39\":1,\"47\":14,\"305\":10}}],[\"stream流中的方法\",{\"1\":{\"47\":1}}],[\"stream3\",{\"1\":{\"47\":1}}],[\"stream1\",{\"1\":{\"47\":1}}],[\"stream<integer>\",{\"1\":{\"47\":5}}],[\"stream操作是延迟执行的\",{\"1\":{\"47\":1}}],[\"stream不会改变源对象\",{\"1\":{\"47\":1}}],[\"stream不会存储元素\",{\"1\":{\"47\":1}}],[\"stream不是集合元素\",{\"1\":{\"47\":1}}],[\"stream的几大特点\",{\"1\":{\"47\":1}}],[\"stream的并行操作依赖于java7中引入的fork\",{\"1\":{\"47\":1}}],[\"stream可以并行化操作\",{\"1\":{\"47\":1}}],[\"stream就如同一个迭代器\",{\"1\":{\"47\":1}}],[\"stream会隐式地在内部进行遍历\",{\"1\":{\"47\":1}}],[\"stream是一个函数式语言+多核时代综合影响的产物\",{\"1\":{\"47\":1}}],[\"stream是java8的一大亮点\",{\"1\":{\"47\":1}}],[\"stream数据流操作\",{\"1\":{\"47\":1}}],[\"streamapi\",{\"1\":{\"45\":1}}],[\"stream\",{\"1\":{\"9\":4,\"25\":1,\"47\":18,\"305\":1}}],[\"ssh2\",{\"1\":{\"2\":1}}],[\"探针机制\",{\"1\":{\"1\":1}}],[\"阅读过netty源码\",{\"1\":{\"1\":1}}],[\"judgmentstatus\",{\"1\":{\"305\":2}}],[\"juc框架\",{\"1\":{\"1\":1}}],[\"jvm\",{\"2\":{\"95\":1}}],[\"jvm管理的内存地址\",{\"1\":{\"89\":1}}],[\"jvm版本号\",{\"1\":{\"81\":1}}],[\"jvm调优\",{\"1\":{\"1\":1}}],[\"jsr166y\",{\"1\":{\"47\":1}}],[\"jsonutil\",{\"1\":{\"25\":1}}],[\"join框架\",{\"1\":{\"47\":1}}],[\"join并行方式来拆分任务和加速处理过程\",{\"1\":{\"47\":1}}],[\"jpa或herbinate等oop思维的orm框架\",{\"1\":{\"44\":1}}],[\"jdk8中的基础包\",{\"1\":{\"47\":1}}],[\"jdk8中的日期api是jsr\",{\"1\":{\"47\":1}}],[\"jdk8以后日期和时间类中包含了一些新的成员\",{\"1\":{\"47\":1}}],[\"jdk8在开始研究java\",{\"1\":{\"47\":1}}],[\"jdk8\",{\"0\":{\"47\":1}}],[\"jdk8新特性\",{\"1\":{\"45\":1}}],[\"jdk8相较于jdk5给了我们一些不敢说完美的解决方案\",{\"1\":{\"44\":1}}],[\"jdk1\",{\"0\":{\"43\":1}}],[\"jdk\",{\"2\":{\"42\":1,\"50\":1,\"99\":1,\"102\":1}}],[\"jdbc\",{\"1\":{\"17\":1}}],[\"j2se5\",{\"1\":{\"38\":1}}],[\"jar\",{\"1\":{\"17\":1}}],[\"java版\",{\"1\":{\"311\":1}}],[\"java位运算符\",{\"0\":{\"100\":1}}],[\"java虚拟机内存布局\",{\"0\":{\"96\":1}}],[\"java虚拟机类加载过程\",{\"0\":{\"51\":1},\"1\":{\"51\":1}}],[\"java的更新就已经进入了快车道\",{\"1\":{\"48\":1}}],[\"java的日期\",{\"1\":{\"47\":1}}],[\"java8中首次出现的\",{\"1\":{\"47\":1}}],[\"java中有一种语法叫双冒号语法\",{\"1\":{\"47\":1}}],[\"javascript引擎\",{\"1\":{\"47\":2}}],[\"java程序员\",{\"1\":{\"4\":2}}],[\"java\",{\"0\":{\"38\":1,\"75\":1},\"1\":{\"1\":1,\"47\":7,\"244\":1,\"305\":14},\"2\":{\"41\":1,\"49\":1,\"94\":1,\"98\":1,\"101\":1,\"192\":1,\"239\":1,\"287\":1}}],[\"jna\",{\"1\":{\"2\":1}}],[\"cruise\",{\"1\":{\"289\":1}}],[\"createapplicationcontext\",{\"0\":{\"263\":1}}],[\"createbootstrapcontext\",{\"0\":{\"243\":1}}],[\"createbeanfactory\",{\"0\":{\"198\":1}}],[\"create\",{\"1\":{\"17\":1}}],[\"ccs\",{\"1\":{\"289\":1}}],[\"cc\",{\"1\":{\"289\":1}}],[\"cms过程中用到的标志位\",{\"1\":{\"97\":1}}],[\"checkcerts\",{\"0\":{\"77\":1}}],[\"checkname\",{\"0\":{\"55\":1,\"62\":1,\"74\":1}}],[\"chars\",{\"1\":{\"47\":1}}],[\"chronounit\",{\"1\":{\"47\":13}}],[\"chrono包\",{\"1\":{\"47\":1}}],[\"c\",{\"1\":{\"47\":8,\"100\":1,\"111\":1}}],[\"cst\",{\"1\":{\"47\":1}}],[\"clearresourcecaches\",{\"0\":{\"234\":1}}],[\"closelightstatus\",{\"1\":{\"305\":2}}],[\"close\",{\"0\":{\"270\":1},\"1\":{\"146\":1,\"305\":5}}],[\"clock\",{\"1\":{\"47\":4}}],[\"classpathbeandefinitionscanner\",{\"0\":{\"179\":1}}],[\"class编译后重新打包入驱动中\",{\"1\":{\"17\":1}}],[\"class<\",{\"1\":{\"9\":2}}],[\"class<f>\",{\"1\":{\"9\":1,\"25\":1}}],[\"class<t>\",{\"1\":{\"9\":1,\"25\":3}}],[\"class\",{\"1\":{\"9\":18,\"25\":10,\"305\":4}}],[\"clazz=table\",{\"1\":{\"9\":2}}],[\"clazz=tabledto1\",{\"1\":{\"9\":1}}],[\"clazz=tabledto\",{\"1\":{\"9\":1}}],[\"clazz\",{\"1\":{\"9\":13}}],[\"currenttimemillis\",{\"1\":{\"305\":6}}],[\"currentlightstatus\",{\"1\":{\"305\":12}}],[\"current\",{\"0\":{\"30\":1},\"1\":{\"30\":1}}],[\"customizebeanfactory\",{\"0\":{\"199\":1}}],[\"customplugin<customactivity>\",{\"1\":{\"25\":1}}],[\"customactivity\",{\"1\":{\"25\":4}}],[\"customlistener<customevent>\",{\"1\":{\"25\":1}}],[\"customevent\",{\"1\":{\"25\":3}}],[\"case\",{\"1\":{\"305\":8}}],[\"cast\",{\"1\":{\"40\":1}}],[\"callable<operation>\",{\"1\":{\"305\":1}}],[\"callable\",{\"1\":{\"305\":1}}],[\"callrunners\",{\"0\":{\"285\":1}}],[\"calendar和java\",{\"1\":{\"47\":1}}],[\"catch\",{\"1\":{\"25\":1,\"305\":1}}],[\"cay\",{\"0\":{\"0\":1}}],[\"code\",{\"1\":{\"47\":1}}],[\"config\",{\"1\":{\"305\":8}}],[\"configurationproperties\",{\"1\":{\"254\":1}}],[\"configurationpropertysourcespropertysource\",{\"1\":{\"254\":1}}],[\"configurationpropertysources\",{\"0\":{\"254\":1,\"260\":1}}],[\"configurableenvironment\",{\"1\":{\"254\":1}}],[\"configureignorebeaninfo\",{\"0\":{\"261\":1}}],[\"configureprofiles\",{\"0\":{\"253\":1}}],[\"configurepropertysources\",{\"0\":{\"252\":1}}],[\"configureenvironment\",{\"0\":{\"250\":1}}],[\"configureheadlessproperty\",{\"0\":{\"244\":1}}],[\"concurrent\",{\"1\":{\"305\":6}}],[\"concurrency\",{\"1\":{\"29\":2}}],[\"conversionservice\",{\"1\":{\"267\":2}}],[\"contour\",{\"1\":{\"305\":3}}],[\"context\",{\"0\":{\"266\":1},\"1\":{\"267\":3}}],[\"contextrefreshedevent\",{\"1\":{\"237\":1}}],[\"contexttypematchclassloader\",{\"1\":{\"212\":1}}],[\"contained\",{\"1\":{\"47\":1}}],[\"container\",{\"1\":{\"47\":1}}],[\"contain\",{\"1\":{\"47\":1}}],[\"control\",{\"1\":{\"29\":2,\"289\":1}}],[\"consumer\",{\"1\":{\"47\":1}}],[\"consumer<\",{\"1\":{\"47\":2}}],[\"consumer<spbasedto>\",{\"1\":{\"47\":1}}],[\"consumer<t>\",{\"1\":{\"25\":2,\"47\":3}}],[\"constructor\",{\"1\":{\"39\":1}}],[\"collectors\",{\"1\":{\"25\":1,\"47\":1}}],[\"collect\",{\"1\":{\"25\":1,\"47\":1}}],[\"collutil\",{\"1\":{\"25\":1}}],[\"count\",{\"1\":{\"25\":2,\"305\":3}}],[\"commandlinerunner\",{\"1\":{\"285\":1}}],[\"commandlinepropertysource\",{\"1\":{\"252\":1}}],[\"command\",{\"1\":{\"252\":1}}],[\"committed\",{\"1\":{\"33\":1}}],[\"compositepropertysource\",{\"1\":{\"252\":1}}],[\"composite\",{\"1\":{\"146\":1}}],[\"component\",{\"1\":{\"25\":2}}],[\"com\",{\"1\":{\"0\":1,\"305\":1}}],[\"github\",{\"1\":{\"305\":1}}],[\"gc标记\",{\"1\":{\"97\":1}}],[\"gc算法\",{\"1\":{\"1\":1}}],[\"generate\",{\"1\":{\"47\":1}}],[\"generate不是一次对每个新生成的值应用函数\",{\"1\":{\"47\":1}}],[\"getkey\",{\"1\":{\"305\":1}}],[\"getorcreateenvironment\",{\"0\":{\"249\":1}}],[\"getrunlisteners\",{\"0\":{\"245\":1}}],[\"getlifecycleprocessor\",{\"0\":{\"236\":1}}],[\"getlogger\",{\"1\":{\"25\":1,\"305\":1}}],[\"getbean\",{\"0\":{\"231\":1}}],[\"getbeansoftype\",{\"1\":{\"25\":1}}],[\"getenvironment\",{\"0\":{\"220\":1},\"1\":{\"195\":1}}],[\"getvalue\",{\"1\":{\"47\":2,\"305\":2}}],[\"getweeks\",{\"1\":{\"47\":1}}],[\"getdays\",{\"1\":{\"47\":1}}],[\"getdatabaseproductname\",{\"1\":{\"17\":1}}],[\"get方法在容器类对象为空的时候\",{\"1\":{\"47\":1}}],[\"get\",{\"1\":{\"47\":7,\"305\":1}}],[\"getplugins\",{\"1\":{\"25\":2}}],[\"getsingleton\",{\"1\":{\"231\":1}}],[\"getseconds\",{\"1\":{\"47\":1}}],[\"getstacktraceelement\",{\"1\":{\"25\":1}}],[\"getsource\",{\"1\":{\"25\":2}}],[\"getmergedlocalbeandefinition\",{\"0\":{\"227\":1}}],[\"getmethodname\",{\"1\":{\"25\":1}}],[\"getmeta\",{\"1\":{\"25\":3}}],[\"getmessage\",{\"1\":{\"25\":1}}],[\"getter\",{\"1\":{\"25\":1}}],[\"getnamedpackage\",{\"0\":{\"92\":1}}],[\"getname\",{\"1\":{\"25\":1,\"305\":2}}],[\"getfieldvalue\",{\"1\":{\"9\":2}}],[\"getfield\",{\"1\":{\"9\":2}}],[\"getfields\",{\"1\":{\"9\":2}}],[\"getallsources\",{\"0\":{\"278\":1}}],[\"getapplicationcontext\",{\"1\":{\"25\":1}}],[\"getannotationsbytype\",{\"1\":{\"9\":2}}],[\"getattr\",{\"1\":{\"6\":1}}],[\"getclassname\",{\"1\":{\"25\":1}}],[\"getclass\",{\"1\":{\"9\":2,\"25\":5,\"305\":1}}],[\"go\",{\"1\":{\"47\":2}}],[\"g\",{\"1\":{\"47\":7}}],[\"g>\",{\"1\":{\"47\":1}}],[\"ganymed\",{\"1\":{\"2\":1}}],[\"gmail\",{\"1\":{\"0\":1}}],[\"guokai\",{\"1\":{\"9\":4,\"25\":6}}],[\"guocay\",{\"1\":{\"0\":1,\"305\":1}}],[\"guo\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
