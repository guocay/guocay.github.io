import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as o,a as i}from"./app-DloSc4CP.js";const t="/docs/images/20230426-001.png",a={},r=i('<figure><img src="'+t+'" alt="Spring及SpringBoot开发扩展点" tabindex="0" loading="lazy"><figcaption>Spring及SpringBoot开发扩展点</figcaption></figure><h2 id="resourceloader" tabindex="-1"><a class="header-anchor" href="#resourceloader"><span>ResourceLoader</span></a></h2><blockquote><p>资源加载器</p></blockquote><h2 id="beandefinitionreader" tabindex="-1"><a class="header-anchor" href="#beandefinitionreader"><span>BeanDefinitionReader</span></a></h2><blockquote><p>Bean定义信息读取者</p></blockquote><h2 id="classpathbeandefinitionscanner" tabindex="-1"><a class="header-anchor" href="#classpathbeandefinitionscanner"><span>ClassPathBeanDefinitionScanner</span></a></h2><blockquote><p>用于扫描bean的定义信息</p></blockquote><h2 id="applicationcontextinitializer" tabindex="-1"><a class="header-anchor" href="#applicationcontextinitializer"><span>ApplicationContextInitializer</span></a></h2><blockquote><p>用于在Context初始化前对其进行更改</p></blockquote><h2 id="beanfactorypostprocessor" tabindex="-1"><a class="header-anchor" href="#beanfactorypostprocessor"><span>BeanFactoryPostProcessor</span></a></h2><blockquote><p>用于对BeanFactory进行修改</p></blockquote><h2 id="beandefinitionregisterpostprocessor" tabindex="-1"><a class="header-anchor" href="#beandefinitionregisterpostprocessor"><span>BeanDefinitionRegisterPostProcessor</span></a></h2><blockquote><p>用于在Bean实例化之前,对BeanDefinition进行更改</p></blockquote><h2 id="aware" tabindex="-1"><a class="header-anchor" href="#aware"><span>Aware</span></a></h2><blockquote><p>用于感知Spring中关于容器,对象等组件的行为或属性感知</p></blockquote><h2 id="beanpostprocessor" tabindex="-1"><a class="header-anchor" href="#beanpostprocessor"><span>BeanPostProcessor</span></a></h2><blockquote><p>用于在bean初始化后修改bean的行为</p></blockquote><h2 id="instantiationawarebeanpostprocessor" tabindex="-1"><a class="header-anchor" href="#instantiationawarebeanpostprocessor"><span>InstantiationAwareBeanPostProcessor</span></a></h2><blockquote><p>BeanPostProcessor的一个子类,扩展了一些更细粒度的对象生命周期回调</p></blockquote><h2 id="disposablebean" tabindex="-1"><a class="header-anchor" href="#disposablebean"><span>DisposableBean</span></a></h2><blockquote><p>扩展对象销毁时的行为</p></blockquote><h2 id="initializingbean" tabindex="-1"><a class="header-anchor" href="#initializingbean"><span>InitializingBean</span></a></h2><blockquote><p>扩展对象初始化时的行为</p></blockquote><h2 id="applicationlistener" tabindex="-1"><a class="header-anchor" href="#applicationlistener"><span>ApplicationListener</span></a></h2><blockquote><p>用于监听Spring容器启动和使用过程中产生的事件的监听</p></blockquote><h2 id="applicationrunner-spring-boot" tabindex="-1"><a class="header-anchor" href="#applicationrunner-spring-boot"><span>ApplicationRunner(Spring Boot)</span></a></h2><blockquote><p>Spring 应用启动后回调, 抛出错误会影响应用启动</p></blockquote><h2 id="springapplicationrunlistener-spring-boot" tabindex="-1"><a class="header-anchor" href="#springapplicationrunlistener-spring-boot"><span>SpringApplicationRunListener(Spring Boot)</span></a></h2><blockquote><p>Spring Application 启动上下文(非ApplicationContext上下文)</p></blockquote><h2 id="environmentpostprocessor-spring-boot" tabindex="-1"><a class="header-anchor" href="#environmentpostprocessor-spring-boot"><span>EnvironmentPostProcessor(Spring Boot)</span></a></h2><blockquote><p>用于对环境变量初始化的后置处理器</p></blockquote>',31),p=[r];function s(l,c){return n(),o("div",null,p)}const h=e(a,[["render",s],["__file","Spring-And-SpringBoot-Development-Expand.html.vue"]]),b=JSON.parse('{"path":"/article/Spring-And-SpringBoot-Development-Expand.html","title":"Spring及SpringBoot开发扩展点","lang":"zh-CN","frontmatter":{"title":"Spring及SpringBoot开发扩展点","icon":"note","isOriginal":true,"date":"2023-04-26T00:00:00.000Z","tag":["Spring","Spring Boot","开发笔记"],"category":"Java","description":"Spring及SpringBoot开发扩展点Spring及SpringBoot开发扩展点 ResourceLoader 资源加载器 BeanDefinitionReader Bean定义信息读取者 ClassPathBeanDefinitionScanner 用于扫描bean的定义信息 ApplicationContextInitializer 用于在...","head":[["meta",{"property":"og:url","content":"https://blog.guocay.com/article/Spring-And-SpringBoot-Development-Expand.html"}],["meta",{"property":"og:site_name","content":"GuoCay"}],["meta",{"property":"og:title","content":"Spring及SpringBoot开发扩展点"}],["meta",{"property":"og:description","content":"Spring及SpringBoot开发扩展点Spring及SpringBoot开发扩展点 ResourceLoader 资源加载器 BeanDefinitionReader Bean定义信息读取者 ClassPathBeanDefinitionScanner 用于扫描bean的定义信息 ApplicationContextInitializer 用于在..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://blog.guocay.com/docs/images/20230426-001.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-18T11:09:04.000Z"}],["meta",{"property":"article:author","content":"GuoCay"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:tag","content":"Spring Boot"}],["meta",{"property":"article:tag","content":"开发笔记"}],["meta",{"property":"article:published_time","content":"2023-04-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-18T11:09:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring及SpringBoot开发扩展点\\",\\"image\\":[\\"https://blog.guocay.com/docs/images/20230426-001.png\\"],\\"datePublished\\":\\"2023-04-26T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-18T11:09:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GuoCay\\",\\"email\\":\\"guocay@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"ResourceLoader","slug":"resourceloader","link":"#resourceloader","children":[]},{"level":2,"title":"BeanDefinitionReader","slug":"beandefinitionreader","link":"#beandefinitionreader","children":[]},{"level":2,"title":"ClassPathBeanDefinitionScanner","slug":"classpathbeandefinitionscanner","link":"#classpathbeandefinitionscanner","children":[]},{"level":2,"title":"ApplicationContextInitializer","slug":"applicationcontextinitializer","link":"#applicationcontextinitializer","children":[]},{"level":2,"title":"BeanFactoryPostProcessor","slug":"beanfactorypostprocessor","link":"#beanfactorypostprocessor","children":[]},{"level":2,"title":"BeanDefinitionRegisterPostProcessor","slug":"beandefinitionregisterpostprocessor","link":"#beandefinitionregisterpostprocessor","children":[]},{"level":2,"title":"Aware","slug":"aware","link":"#aware","children":[]},{"level":2,"title":"BeanPostProcessor","slug":"beanpostprocessor","link":"#beanpostprocessor","children":[]},{"level":2,"title":"InstantiationAwareBeanPostProcessor","slug":"instantiationawarebeanpostprocessor","link":"#instantiationawarebeanpostprocessor","children":[]},{"level":2,"title":"DisposableBean","slug":"disposablebean","link":"#disposablebean","children":[]},{"level":2,"title":"InitializingBean","slug":"initializingbean","link":"#initializingbean","children":[]},{"level":2,"title":"ApplicationListener","slug":"applicationlistener","link":"#applicationlistener","children":[]},{"level":2,"title":"ApplicationRunner(Spring Boot)","slug":"applicationrunner-spring-boot","link":"#applicationrunner-spring-boot","children":[]},{"level":2,"title":"SpringApplicationRunListener(Spring Boot)","slug":"springapplicationrunlistener-spring-boot","link":"#springapplicationrunlistener-spring-boot","children":[]},{"level":2,"title":"EnvironmentPostProcessor(Spring Boot)","slug":"environmentpostprocessor-spring-boot","link":"#environmentpostprocessor-spring-boot","children":[]}],"git":{"createdTime":1684408144000,"updatedTime":1684408144000,"contributors":[{"name":"GuoCay","email":"guocay@gmail.com","commits":1}]},"readingTime":{"minutes":0.9,"words":270},"localizedDate":"2023年4月26日","excerpt":"<figure><img src=\\"/docs/images/20230426-001.png\\" alt=\\"Spring及SpringBoot开发扩展点\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>Spring及SpringBoot开发扩展点</figcaption></figure>\\n<h2>ResourceLoader</h2>\\n<blockquote>\\n<p>资源加载器</p>\\n</blockquote>\\n<h2>BeanDefinitionReader</h2>\\n<blockquote>\\n<p>Bean定义信息读取者</p>\\n</blockquote>","autoDesc":true}');export{h as comp,b as data};
