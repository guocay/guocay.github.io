import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-DloSc4CP.js";const p={},e=t(`<h2 id="写在之前" tabindex="-1"><a class="header-anchor" href="#写在之前"><span>写在之前</span></a></h2><blockquote><p>今天是五一, 大后天就要科三上车练习了. 这几天了解了下科三的考察内容. 知道科三里面第一项就是<br><strong>夜间灯光模拟</strong>, 而且需要在五秒内做出应答操作. 作为一个奔三的汉子,就担心五秒反应不过来.<br> 那就多练呗.</p></blockquote><blockquote><p>在 <em>驾考宝典</em> 上倒是有灯光模拟练习, 但是得收费才能练习. 好吧, 我心疼钱了. 趁着自己最近一直在休息, 就自己写了个小程序自己在家练反应吧.</p></blockquote><h2 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式"><span>使用方式</span></a></h2><ol><li>当控制台打印 <em>--- 嘀 ---</em> 字符时, 开始答题;</li><li>共需输入三个数字, 以空格分割;</li><li>第一个数字代表 <em>灯光总开关</em>, 输入 1 代表顺时针拨动一下. 输入 -1 代表逆时针拨动一下;</li><li>第二个数字代表 <em>左拨杆开关</em>, 输入 1 代表向近怀方向拨动一下. 输入 -1 代表向远怀方向拨动一下;</li><li>第三个数字代表 <em>双闪灯开关</em>, 输入 1 代表按动 双闪一次, 以此类推;</li><li>输入完成后, 单击回车提交答案. 等待评判和下一题;</li></ol><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><ol><li>一共会随机生成六道题. 第一道恒等于 &quot;开启前照灯&quot;, 最后一道题恒等于 &quot;关闭所有灯光,开始其他考试&quot;;</li><li><em><strong>使用过程中. 程序会记录上一题操作后所有灯光的开启状态. 所以, 每一题的操作步骤均与上一题后的灯光位置强相关;</strong></em></li><li>就像上一条说的. 比如上一题是开启远光灯, 当前题需要远近交替. 此时需要至少拨动5次拨杆才能判定打光正确;</li><li>需要远近光灯交替时, 需要向近怀方向拨动四次;</li><li>所有操作必须在5秒内完成, 否则会超时退出考试;</li><li>&quot;嘀&quot;声在出题1秒后出现, 弥补打印比口播快的客观事实;</li></ol><h2 id="运行环境" tabindex="-1"><a class="header-anchor" href="#运行环境"><span>运行环境</span></a></h2><img alt="JDK" src="https://img.shields.io/badge/JDK-17-green.svg"><h2 id="代码片段" tabindex="-1"><a class="header-anchor" href="#代码片段"><span>代码片段</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>guocay<span class="token punctuation">.</span>util</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">AbstractMap</span><span class="token punctuation">.</span><span class="token class-name">SimpleImmutableEntry</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token class-name">Entry</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Callable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ExecutorService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executors</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span><span class="token class-name">Logger</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">IntStream</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token static">max</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token static">min</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 科目三 灯光模拟
 * <span class="token keyword">@author</span> aCay
 * <span class="token keyword">@since</span> 2023.05.01
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LightingSimulation</span> <span class="token punctuation">{</span>
	<span class="token doc-comment comment">/**
	 * 程序中用到了 System.in 对象. 所以必须是单例模式
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">LightingSimulation</span> <span class="token constant">INSTANCE</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * 日志对象和一些常量
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">Logger</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">LightingSimulation</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">RUN_TIME_OUT</span> <span class="token operator">=</span> <span class="token string">&quot;java.util.concurrent.TimeoutException&quot;</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">RUN_EXECUTION</span> <span class="token operator">=</span> <span class="token string">&quot;java.util.concurrent.ExecutionException&quot;</span><span class="token punctuation">;</span>
	<span class="token doc-comment comment">/**
	 * 配置信息
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">CONFIG_MAX_TOPIC_TIMEOUT</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">CONFIG_MAX_ALTERNATE_COUNT</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">CONFIG_TOTAL_TOPIC</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
	<span class="token doc-comment comment">/**
	 * 拨杆状态 枚举
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">LEVER_NEAR_LIGHT_STATUS</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">LEVER_PARALLEL_LIGHT_STATUS</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">LEVER_ALTERNATE_LIGHT_STATUS</span> <span class="token operator">=</span> <span class="token constant">CONFIG_MAX_ALTERNATE_COUNT</span><span class="token punctuation">;</span>
	<span class="token doc-comment comment">/**
	 * 总控状态 枚举
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">MASTER_CLOSE_LIGHT_STATUS</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">MASTER_CONTOUR_LIGHT_STATUS</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">MASTER_FRONT_LIGHT_STATUS</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
	<span class="token doc-comment comment">/**
	 * 创建线程池
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ExecutorService</span> <span class="token constant">THREAD_POOL</span><span class="token punctuation">;</span>
	<span class="token doc-comment comment">/**
	 * 拉取用户输入答案的线程
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Operation</span><span class="token punctuation">&gt;</span></span> <span class="token constant">PULL_ANSWER</span><span class="token punctuation">;</span>
	<span class="token doc-comment comment">/**
	 * 灯光模拟考试题库及答案
	 */</span>
	<span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">LightStatus</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">QUESTIONS</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token doc-comment comment">/**
	 * 随机数生成器
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Random</span> random<span class="token punctuation">;</span>
	<span class="token doc-comment comment">/**
	 * 计时器
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">StopWatch</span> stopWatch<span class="token punctuation">;</span>
	<span class="token doc-comment comment">/**
	 * 记录车辆当前灯光状态
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">LightStatus</span> currentLightStatus<span class="token punctuation">;</span>

	<span class="token keyword">static</span> <span class="token punctuation">{</span>
		<span class="token class-name">LightStatus</span> nearLightStatus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LightStatus</span><span class="token punctuation">(</span><span class="token constant">MASTER_FRONT_LIGHT_STATUS</span><span class="token punctuation">,</span> <span class="token constant">LEVER_NEAR_LIGHT_STATUS</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">LightStatus</span> alternateLightStatus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LightStatus</span><span class="token punctuation">(</span><span class="token constant">MASTER_FRONT_LIGHT_STATUS</span><span class="token punctuation">,</span> <span class="token constant">LEVER_ALTERNATE_LIGHT_STATUS</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">LightStatus</span> parallelLightStatus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LightStatus</span><span class="token punctuation">(</span><span class="token constant">MASTER_FRONT_LIGHT_STATUS</span><span class="token punctuation">,</span> <span class="token constant">LEVER_PARALLEL_LIGHT_STATUS</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">LightStatus</span> closeLightStatus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LightStatus</span><span class="token punctuation">(</span><span class="token constant">MASTER_CLOSE_LIGHT_STATUS</span><span class="token punctuation">,</span> <span class="token constant">LEVER_NEAR_LIGHT_STATUS</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">LightStatus</span> emergencyLightStatus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LightStatus</span><span class="token punctuation">(</span><span class="token constant">MASTER_CONTOUR_LIGHT_STATUS</span><span class="token punctuation">,</span> <span class="token constant">LEVER_NEAR_LIGHT_STATUS</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 设置题库及答案</span>
		<span class="token constant">QUESTIONS</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleImmutableEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;请开启前照灯&quot;</span><span class="token punctuation">,</span> nearLightStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token constant">QUESTIONS</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleImmutableEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;同方向近距离跟车驾驶&quot;</span><span class="token punctuation">,</span> nearLightStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token constant">QUESTIONS</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleImmutableEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;通过有交通信号灯控制的路口&quot;</span><span class="token punctuation">,</span> nearLightStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token constant">QUESTIONS</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleImmutableEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;夜间在窄路窄桥与非机动车会车&quot;</span><span class="token punctuation">,</span> nearLightStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token constant">QUESTIONS</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleImmutableEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;夜间在有路灯照明良好的道路上行驶&quot;</span><span class="token punctuation">,</span> nearLightStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token constant">QUESTIONS</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleImmutableEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;夜间通过没有交通信号灯控制的路口&quot;</span><span class="token punctuation">,</span> alternateLightStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token constant">QUESTIONS</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleImmutableEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;夜间超越前方车辆&quot;</span><span class="token punctuation">,</span> alternateLightStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token constant">QUESTIONS</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleImmutableEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;夜间在没有路灯或照明条件不良条件下行驶&quot;</span><span class="token punctuation">,</span> parallelLightStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token constant">QUESTIONS</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleImmutableEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;路边临时停车&quot;</span><span class="token punctuation">,</span> emergencyLightStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token constant">QUESTIONS</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleImmutableEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;关闭所有灯光,开始其他考试&quot;</span><span class="token punctuation">,</span> closeLightStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 设置拉取答案的线程和线程池</span>
		<span class="token constant">THREAD_POOL</span> <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">Scanner</span> <span class="token constant">SCANNER</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token constant">PULL_ANSWER</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Operation</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token constant">SCANNER</span><span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 设置单例模式下的实例</span>
		<span class="token constant">INSTANCE</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LightingSimulation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token class-name">LightingSimulation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>stopWatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StopWatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>currentLightStatus <span class="token operator">=</span> <span class="token constant">QUESTIONS</span><span class="token punctuation">[</span><span class="token constant">QUESTIONS</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token doc-comment comment">/**
	 * 启动灯光模拟考试
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">// 加 1 是为了将 &quot;关闭所有灯光&quot; 算进去.</span>
		<span class="token function">startup</span><span class="token punctuation">(</span><span class="token constant">CONFIG_TOTAL_TOPIC</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">CONFIG_MAX_TOPIC_TIMEOUT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token doc-comment comment">/**
	 * 启动灯光模拟考试
	 * <span class="token keyword">@param</span> <span class="token parameter">topicTotal</span> 总出题数
	 * <span class="token keyword">@param</span> <span class="token parameter">topicTimeout</span> 超时时间
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startup</span><span class="token punctuation">(</span><span class="token keyword">int</span> topicTotal<span class="token punctuation">,</span> <span class="token keyword">int</span> topicTimeout<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">// 打印准备信息</span>
		<span class="token function">printPrepareMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 循环出六道题</span>
		<span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> topicTotal<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>index <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
			<span class="token comment">// 通过 Future 的超时异常, 实现五秒内答题.</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				<span class="token comment">// 从题库中抽取考题后,打印题目. 并返回期望答案.</span>
				<span class="token class-name">LightStatus</span> els <span class="token operator">=</span> <span class="token function">printQuestions</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">// 1. 提交任务, 并指定拉取的最大时间; 2. 将操作追加至当前状态;</span>
				<span class="token function">appendOperation</span><span class="token punctuation">(</span><span class="token constant">THREAD_POOL</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token constant">PULL_ANSWER</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>topicTimeout<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">// 校验状态是否符合要求</span>
				<span class="token function">judgmentStatus</span><span class="token punctuation">(</span>els<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token class-name">String</span> errorInfo <span class="token operator">=</span> <span class="token keyword">switch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
					<span class="token keyword">case</span> <span class="token constant">RUN_TIME_OUT</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;答题超时, 成绩不合格!!!&quot;</span><span class="token punctuation">;</span>
					<span class="token keyword">case</span> <span class="token constant">RUN_EXECUTION</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;输入值非法, 成绩不合格!!!&quot;</span><span class="token punctuation">;</span>
					<span class="token keyword">default</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;发生未预期错误, 成绩不合格!!!&quot;</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span><span class="token punctuation">;</span>
				<span class="token function">applicationExit</span><span class="token punctuation">(</span>errorInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token comment">// 准备下一轮, 回退远近光交替至近光.</span>
			<span class="token function">prepareNextRound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;考试结束, 成绩合格!!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token constant">THREAD_POOL</span><span class="token punctuation">.</span><span class="token function">shutdownNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 打印准备信息
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">printPrepareMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
			答题时需要输入三个数字,并以空格分开.
			\`1. 第一个数字代表灯光总开关拨动次数, 输入 1 代表顺时针拨动一下, -1 代表逆时针拨动一下.
			\`2. 第二个数字代表左拨杆拨动次数. 输入 1 代表向近怀拨动一下, -1 代表向远怀拨动一下.
			\`3. 第三个数字代表双闪控制开关, 输入正整数. 表示按动几次.
			输入完毕后,必须按回车键提交.
			&quot;&quot;&quot;</span>
		<span class="token punctuation">)</span><span class="token punctuation">;</span>
		logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
			下面将开始模拟夜间灯光的考试!!!
			请在嘀声后五秒内完成答题.
			&quot;&quot;&quot;</span>
		<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token doc-comment comment">/**
	 * 打印当前的灯光状态
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">printCurrentStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 获取总灯光状态</span>
		<span class="token class-name">String</span> master <span class="token operator">=</span> <span class="token keyword">switch</span> <span class="token punctuation">(</span>currentLightStatus<span class="token punctuation">.</span>master<span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">case</span> <span class="token constant">MASTER_CLOSE_LIGHT_STATUS</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;关闭&quot;</span><span class="token punctuation">;</span>
			<span class="token keyword">case</span> <span class="token constant">MASTER_CONTOUR_LIGHT_STATUS</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;示廓灯&quot;</span><span class="token punctuation">;</span>
			<span class="token keyword">default</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;前照灯&quot;</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">;</span>
		<span class="token comment">// 获取左拨杆状态</span>
		<span class="token class-name">String</span> lever <span class="token operator">=</span> <span class="token keyword">switch</span> <span class="token punctuation">(</span>currentLightStatus<span class="token punctuation">.</span>lever<span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">case</span> <span class="token constant">LEVER_PARALLEL_LIGHT_STATUS</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;远光灯&quot;</span><span class="token punctuation">;</span>
			<span class="token keyword">case</span> <span class="token constant">LEVER_NEAR_LIGHT_STATUS</span> <span class="token operator">-&gt;</span> currentLightStatus<span class="token punctuation">.</span>master <span class="token operator">==</span> <span class="token constant">MASTER_CLOSE_LIGHT_STATUS</span> <span class="token operator">?</span> <span class="token string">&quot;关闭&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;近光灯&quot;</span><span class="token punctuation">;</span>
			<span class="token keyword">default</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;远近光交替&quot;</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">;</span>
		<span class="token comment">// 获取双闪灯状态</span>
		<span class="token class-name">String</span> emergency <span class="token operator">=</span> currentLightStatus<span class="token punctuation">.</span>emergency <span class="token operator">?</span> <span class="token string">&quot;开启&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;关闭&quot;</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
				操作耗时: %d毫秒.
				操作后的灯: 总控[%s], 拨杆[%s], 双闪[%s].

				&quot;&quot;&quot;</span><span class="token punctuation">,</span>
			stopWatch<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> master<span class="token punctuation">,</span> lever<span class="token punctuation">,</span> emergency
		<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token doc-comment comment">/**
	 * 准备下一轮, 回退远近光交替至近光.
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">prepareNextRound</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		currentLightStatus<span class="token punctuation">.</span>lever <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token constant">LEVER_NEAR_LIGHT_STATUS</span><span class="token punctuation">,</span> currentLightStatus<span class="token punctuation">.</span>lever<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token doc-comment comment">/**
	 * 程序退出, 打印提示语
	 * <span class="token keyword">@param</span> <span class="token parameter">msg</span> 提示信息
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">applicationExit</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		logger<span class="token punctuation">.</span><span class="token function">severe</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token constant">THREAD_POOL</span><span class="token punctuation">.</span><span class="token function">shutdownNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token doc-comment comment">/**
	 * 校验状态是否符合要求
	 * <span class="token keyword">@param</span> <span class="token parameter">expectationLightStatus</span> 期望灯光状态
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">judgmentStatus</span><span class="token punctuation">(</span><span class="token class-name">LightStatus</span> expectationLightStatus<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>currentLightStatus<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>expectationLightStatus<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token function">applicationExit</span><span class="token punctuation">(</span><span class="token string">&quot;答案错误, 成绩不合格!!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token doc-comment comment">/**
	 * 将操作追加至当前状态
	 * <span class="token keyword">@param</span> <span class="token parameter">operation</span> 动作
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">appendOperation</span><span class="token punctuation">(</span><span class="token class-name">Operation</span> operation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		currentLightStatus<span class="token punctuation">.</span><span class="token function">setMaster</span><span class="token punctuation">(</span>operation<span class="token punctuation">.</span>master<span class="token punctuation">)</span><span class="token punctuation">;</span>
		currentLightStatus<span class="token punctuation">.</span><span class="token function">setLever</span><span class="token punctuation">(</span>operation<span class="token punctuation">.</span>lever<span class="token punctuation">)</span><span class="token punctuation">;</span>
		currentLightStatus<span class="token punctuation">.</span><span class="token function">setEmergency</span><span class="token punctuation">(</span>operation<span class="token punctuation">.</span>emergency<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 打印当前灯光状态</span>
		<span class="token function">printCurrentStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token doc-comment comment">/**
	 * 打印题目并 返回期望的目标灯光
	 * <span class="token keyword">@param</span> <span class="token parameter">index</span> 第几题
	 * <span class="token keyword">@return</span> 期望的目标灯光
	 */</span>
	<span class="token keyword">private</span> <span class="token class-name">LightStatus</span> <span class="token function">printQuestions</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
		<span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">LightStatus</span><span class="token punctuation">&gt;</span></span> question <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">switch</span> <span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">case</span> <span class="token number">0</span> <span class="token operator">-&gt;</span> <span class="token constant">QUESTIONS</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token keyword">case</span> <span class="token constant">CONFIG_TOTAL_TOPIC</span> <span class="token operator">-&gt;</span> <span class="token constant">QUESTIONS</span><span class="token punctuation">[</span><span class="token constant">QUESTIONS</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token keyword">default</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
				<span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">LightStatus</span><span class="token punctuation">&gt;</span></span> _temp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
				<span class="token keyword">while</span> <span class="token punctuation">(</span>_temp <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
					<span class="token comment">// 加 1 是为了 错开下标为 0 的题.</span>
					<span class="token keyword">int</span> num <span class="token operator">=</span> random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
					_temp <span class="token operator">=</span> <span class="token constant">QUESTIONS</span><span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">;</span>
					<span class="token constant">QUESTIONS</span><span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token keyword">yield</span> _temp<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>question<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--- 嘀 ---&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		stopWatch<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> question<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token doc-comment comment">/**
	 * 操作内容, 答卷
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">record</span> <span class="token class-name">Operation</span><span class="token punctuation">(</span><span class="token keyword">int</span> master<span class="token punctuation">,</span> <span class="token keyword">int</span> lever<span class="token punctuation">,</span> <span class="token keyword">int</span> emergency<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token doc-comment comment">/**
		 * 解析输入, 生成操作
		 * <span class="token keyword">@param</span> <span class="token parameter">input</span> 输入字符
		 * <span class="token keyword">@return</span> 操作
		 */</span>
		<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Operation</span> <span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">String</span> input<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> info <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Operation</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>info<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>info<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token doc-comment comment">/**
	 * 灯光状态
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">LightStatus</span> <span class="token punctuation">{</span>
		<span class="token doc-comment comment">/**
		 * 总开关
		 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>0: 代表关闭总开关<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
		 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>1: 代表开启示廓灯<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
		 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>2: 代表开启前照灯<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
		 */</span>
		<span class="token keyword">private</span> <span class="token keyword">int</span> master<span class="token punctuation">;</span>
		<span class="token doc-comment comment">/**
		 * 左拨杆
		 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>-1: 代表开启远光灯<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
		 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>0: 代表开启近光灯<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
		 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>1: 开启远近交替<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
		 */</span>
		<span class="token keyword">private</span> <span class="token keyword">int</span> lever<span class="token punctuation">;</span>
		<span class="token doc-comment comment">/**
		 * 双闪灯
		 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>true: 开启双闪灯<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
		 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>false: 关闭双闪灯<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
		 */</span>
		<span class="token keyword">private</span> <span class="token keyword">boolean</span> emergency<span class="token punctuation">;</span>

		<span class="token keyword">private</span> <span class="token class-name">LightStatus</span><span class="token punctuation">(</span><span class="token keyword">int</span> master<span class="token punctuation">,</span> <span class="token keyword">int</span> lever<span class="token punctuation">,</span> <span class="token keyword">boolean</span> emergency<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>master <span class="token operator">=</span> master<span class="token punctuation">;</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>lever <span class="token operator">=</span> lever<span class="token punctuation">;</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>emergency <span class="token operator">=</span> emergency<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMaster</span><span class="token punctuation">(</span><span class="token keyword">int</span> master<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// 如果操作后的结果大于2, 则回退至2.</span>
			<span class="token comment">// 如果操作后的结果小于0, 则回退至0.</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>master <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>master <span class="token operator">+</span> master<span class="token punctuation">,</span> <span class="token constant">MASTER_FRONT_LIGHT_STATUS</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">MASTER_CLOSE_LIGHT_STATUS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLever</span><span class="token punctuation">(</span><span class="token keyword">int</span> lever<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// 如果操作后的结果小于 -1, 则回退至 -1.</span>
			<span class="token comment">// 如果操作后的结果大于 4, 则回退至 4.</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>lever <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lever <span class="token operator">+</span> lever<span class="token punctuation">,</span> <span class="token constant">CONFIG_MAX_ALTERNATE_COUNT</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">LEVER_PARALLEL_LIGHT_STATUS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmergency</span><span class="token punctuation">(</span><span class="token keyword">int</span> emergency<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// 判断操作的次数是奇数还是偶数, 是奇数则不改变灯光状态. 反之则改变状态.</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>emergency <span class="token operator">=</span> <span class="token punctuation">(</span>emergency <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>emergency<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token annotation punctuation">@Override</span>
		<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token keyword">this</span> <span class="token operator">==</span> o <span class="token operator">||</span>
				<span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">LightStatus</span> that
					<span class="token operator">&amp;&amp;</span> master <span class="token operator">==</span> that<span class="token punctuation">.</span>master
					<span class="token operator">&amp;&amp;</span> emergency <span class="token operator">==</span> that<span class="token punctuation">.</span>emergency
					<span class="token operator">&amp;&amp;</span> lever <span class="token operator">==</span> that<span class="token punctuation">.</span>lever<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 计时器
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">StopWatch</span> <span class="token punctuation">{</span>
		<span class="token doc-comment comment">/**
		 * 记录当前时间
		 */</span>
		<span class="token keyword">private</span> <span class="token class-name">Long</span> currentTimeMillis<span class="token punctuation">;</span>
		<span class="token doc-comment comment">/**
		 * 计时器开始工作.
		 */</span>
		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>currentTimeMillis <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token doc-comment comment">/**
		 * 计数器结束工作, 并返回持续时间.
		 * <span class="token keyword">@return</span> 返回时间间隔
		 */</span>
		<span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">return</span> currentTimeMillis <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> currentTimeMillis<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token constant">INSTANCE</span><span class="token punctuation">.</span><span class="token function">startup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// INSTANCE.startup(5, 5);</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","Subject-Third-Light-Simulation-Practise.html.vue"]]),d=JSON.parse('{"path":"/article/Subject-Third-Light-Simulation-Practise.html","title":"科目三 - 灯光模拟练习小程序","lang":"zh-CN","frontmatter":{"title":"科目三 - 灯光模拟练习小程序","icon":"note","isOriginal":true,"date":"2023-05-01T00:00:00.000Z","tag":["科目三"],"category":"驾照考试","description":"写在之前 今天是五一, 大后天就要科三上车练习了. 这几天了解了下科三的考察内容. 知道科三里面第一项就是 夜间灯光模拟, 而且需要在五秒内做出应答操作. 作为一个奔三的汉子,就担心五秒反应不过来. 那就多练呗. 在 驾考宝典 上倒是有灯光模拟练习, 但是得收费才能练习. 好吧, 我心疼钱了. 趁着自己最近一直在休息, 就自己写了个小程序自己在家练反应...","head":[["meta",{"property":"og:url","content":"https://blog.guocay.com/article/Subject-Third-Light-Simulation-Practise.html"}],["meta",{"property":"og:site_name","content":"GuoCay"}],["meta",{"property":"og:title","content":"科目三 - 灯光模拟练习小程序"}],["meta",{"property":"og:description","content":"写在之前 今天是五一, 大后天就要科三上车练习了. 这几天了解了下科三的考察内容. 知道科三里面第一项就是 夜间灯光模拟, 而且需要在五秒内做出应答操作. 作为一个奔三的汉子,就担心五秒反应不过来. 那就多练呗. 在 驾考宝典 上倒是有灯光模拟练习, 但是得收费才能练习. 好吧, 我心疼钱了. 趁着自己最近一直在休息, 就自己写了个小程序自己在家练反应..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-18T11:09:04.000Z"}],["meta",{"property":"article:author","content":"GuoCay"}],["meta",{"property":"article:tag","content":"科目三"}],["meta",{"property":"article:published_time","content":"2023-05-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-18T11:09:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"科目三 - 灯光模拟练习小程序\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-01T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-18T11:09:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GuoCay\\",\\"email\\":\\"guocay@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"写在之前","slug":"写在之前","link":"#写在之前","children":[]},{"level":2,"title":"使用方式","slug":"使用方式","link":"#使用方式","children":[]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":2,"title":"运行环境","slug":"运行环境","link":"#运行环境","children":[]},{"level":2,"title":"代码片段","slug":"代码片段","link":"#代码片段","children":[]}],"git":{"createdTime":1684408144000,"updatedTime":1684408144000,"contributors":[{"name":"GuoCay","email":"guocay@gmail.com","commits":1}]},"readingTime":{"minutes":7.67,"words":2302},"localizedDate":"2023年5月1日","excerpt":"<h2>写在之前</h2>\\n<blockquote>\\n<p>今天是五一, 大后天就要科三上车练习了. 这几天了解了下科三的考察内容. 知道科三里面第一项就是<br>\\n<strong>夜间灯光模拟</strong>, 而且需要在五秒内做出应答操作. 作为一个奔三的汉子,就担心五秒反应不过来.<br>\\n那就多练呗.</p>\\n</blockquote>\\n<blockquote>\\n<p>在 <em>驾考宝典</em> 上倒是有灯光模拟练习, 但是得收费才能练习. 好吧, 我心疼钱了. 趁着自己最近一直在休息, 就自己写了个小程序自己在家练反应吧.</p>\\n</blockquote>\\n<h2>使用方式</h2>","autoDesc":true}');export{r as comp,d as data};
