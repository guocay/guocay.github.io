import{_ as e,X as a,Y as o,Z as n}from"./framework-d314e57d.js";const i="/docs/images/20230426-001.png",r={},t=n('<figure><img src="'+i+'" alt="Spring及SpringBoot开发扩展点" tabindex="0" loading="lazy"><figcaption>Spring及SpringBoot开发扩展点</figcaption></figure><h2 id="resourceloader" tabindex="-1"><a class="header-anchor" href="#resourceloader" aria-hidden="true">#</a> ResourceLoader</h2><blockquote><p>资源加载器</p></blockquote><h2 id="beandefinitionreader" tabindex="-1"><a class="header-anchor" href="#beandefinitionreader" aria-hidden="true">#</a> BeanDefinitionReader</h2><blockquote><p>Bean定义信息读取者</p></blockquote><h2 id="classpathbeandefinitionscanner" tabindex="-1"><a class="header-anchor" href="#classpathbeandefinitionscanner" aria-hidden="true">#</a> ClassPathBeanDefinitionScanner</h2><blockquote><p>用于扫描bean的定义信息</p></blockquote><h2 id="applicationcontextinitializer" tabindex="-1"><a class="header-anchor" href="#applicationcontextinitializer" aria-hidden="true">#</a> ApplicationContextInitializer</h2><blockquote><p>用于在Context初始化前对其进行更改</p></blockquote><h2 id="beanfactorypostprocessor" tabindex="-1"><a class="header-anchor" href="#beanfactorypostprocessor" aria-hidden="true">#</a> BeanFactoryPostProcessor</h2><blockquote><p>用于对BeanFactory进行修改</p></blockquote><h2 id="beandefinitionregisterpostprocessor" tabindex="-1"><a class="header-anchor" href="#beandefinitionregisterpostprocessor" aria-hidden="true">#</a> BeanDefinitionRegisterPostProcessor</h2><blockquote><p>用于在Bean实例化之前,对BeanDefinition进行更改</p></blockquote><h2 id="aware" tabindex="-1"><a class="header-anchor" href="#aware" aria-hidden="true">#</a> Aware</h2><blockquote><p>用于感知Spring中关于容器,对象等组件的行为或属性感知</p></blockquote><h2 id="beanpostprocessor" tabindex="-1"><a class="header-anchor" href="#beanpostprocessor" aria-hidden="true">#</a> BeanPostProcessor</h2><blockquote><p>用于在bean初始化后修改bean的行为</p></blockquote><h2 id="instantiationawarebeanpostprocessor" tabindex="-1"><a class="header-anchor" href="#instantiationawarebeanpostprocessor" aria-hidden="true">#</a> InstantiationAwareBeanPostProcessor</h2><blockquote><p>BeanPostProcessor的一个子类,扩展了一些更细粒度的对象生命周期回调</p></blockquote><h2 id="disposablebean" tabindex="-1"><a class="header-anchor" href="#disposablebean" aria-hidden="true">#</a> DisposableBean</h2><blockquote><p>扩展对象销毁时的行为</p></blockquote><h2 id="initializingbean" tabindex="-1"><a class="header-anchor" href="#initializingbean" aria-hidden="true">#</a> InitializingBean</h2><blockquote><p>扩展对象初始化时的行为</p></blockquote><h2 id="applicationlistener" tabindex="-1"><a class="header-anchor" href="#applicationlistener" aria-hidden="true">#</a> ApplicationListener</h2><blockquote><p>用于监听Spring容器启动和使用过程中产生的事件的监听</p></blockquote><h2 id="applicationrunner-spring-boot" tabindex="-1"><a class="header-anchor" href="#applicationrunner-spring-boot" aria-hidden="true">#</a> ApplicationRunner(Spring Boot)</h2><blockquote><p>Spring 应用启动后回调, 抛出错误会影响应用启动</p></blockquote><h2 id="springapplicationrunlistener-spring-boot" tabindex="-1"><a class="header-anchor" href="#springapplicationrunlistener-spring-boot" aria-hidden="true">#</a> SpringApplicationRunListener(Spring Boot)</h2><blockquote><p>Spring Application 启动上下文(非ApplicationContext上下文)</p></blockquote><h2 id="environmentpostprocessor-spring-boot" tabindex="-1"><a class="header-anchor" href="#environmentpostprocessor-spring-boot" aria-hidden="true">#</a> EnvironmentPostProcessor(Spring Boot)</h2><blockquote><p>用于对环境变量初始化的后置处理器</p></blockquote>',31),s=[t];function c(p,d){return a(),o("div",null,s)}const l=e(r,[["render",c],["__file","Spring-And-SpringBoot-Development-Expand.html.vue"]]);export{l as default};
